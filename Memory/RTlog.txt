Simulation progress: 11/250000[MMU][do_refer] address = 12617 offset = 329 page no = 12 Thread(0:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(0:1/RU) 22 Page(12:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(0) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(12:1/null)
[PageFaultHandler][do_handlePageFault] page Page(12:1/null) setframe Frame(0)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(0),Device(0),Page(12:1/0),Diskblock(12),FileRead,Openfile(0:1/0),Thread(0:1/W1)) this Page(12:1/0)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(0:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(0:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(12:1/0)
[PageFaultHandler][do_handlePageFault] thread Thread(0:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 11301 offset = 37 page no = 11 Thread(0:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(0:1/RU) 21 Page(11:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(1) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(11:1/null)
[PageFaultHandler][do_handlePageFault] page Page(11:1/null) setframe Frame(1)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1),Device(0),Page(11:1/1),Diskblock(11),FileRead,Openfile(0:1/0),Thread(0:1/W1)) this Page(11:1/1)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(0:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(0:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(11:1/1)
[PageFaultHandler][do_handlePageFault] thread Thread(0:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 44693 offset = 661 page no = 43 Thread(0:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(0:1/RU) 21 Page(43:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(2) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(43:1/null)
[PageFaultHandler][do_handlePageFault] page Page(43:1/null) setframe Frame(2)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(2),Device(0),Page(43:1/2),Diskblock(43),FileRead,Openfile(0:1/0),Thread(0:1/W1)) this Page(43:1/2)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(0:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(0:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(43:1/2)
[PageFaultHandler][do_handlePageFault] thread Thread(0:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 29827 offset = 131 page no = 29 Thread(1:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(1:1/RU) 22 Page(29:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(3) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(29:1/null)
[PageFaultHandler][do_handlePageFault] page Page(29:1/null) setframe Frame(3)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(3),Device(0),Page(29:1/3),Diskblock(29),FileRead,Openfile(0:1/0),Thread(1:1/W1)) this Page(29:1/3)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(1:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(1:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(3)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(29:1/3)
[PageFaultHandler][do_handlePageFault] thread Thread(1:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 1945 offset = 921 page no = 1 Thread(2:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(2:1/RU) 22 Page(1:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(4) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(1:1/null)
[PageFaultHandler][do_handlePageFault] page Page(1:1/null) setframe Frame(4)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(4),Device(0),Page(1:1/4),Diskblock(1),FileRead,Openfile(0:1/0),Thread(2:1/W1)) this Page(1:1/4)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(2:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(2:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 56461 offset = 141 page no = 55 Thread(1:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(1:1/RU) 22 Page(55:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(5) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(55:1/null)
[PageFaultHandler][do_handlePageFault] page Page(55:1/null) setframe Frame(5)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(5),Device(0),Page(55:1/5),Diskblock(55),FileRead,Openfile(0:1/0),Thread(1:1/W1)) this Page(55:1/5)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(1:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(1:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(1:1/4)
[PageFaultHandler][do_handlePageFault] thread Thread(2:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(55:1/5)
[PageFaultHandler][do_handlePageFault] thread Thread(1:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 19295 offset = 863 page no = 18 Thread(3:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(3:1/RU) 22 Page(18:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(5) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(18:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(55:1/5)
[PageFaultHandler][do_handlePageFault] Frame(5) is dirty, do swap-out, Thread(3:1/W0)
[PageFaultHandler][SwapOut] page Page(55:1/5) frame Frame(5)file Openfile(0:1/0)
[PageFaultHandler][SwapOut] block no 55
[Info][PageTableEntry][do_lock] iorb IORB(Id(6),Device(0),Page(55:1/5),Diskblock(55),FileWrite,Openfile(0:1/0),Thread(3:1/W1)) this Page(55:1/5)
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(7),Device(1),Page(1:1/4),Diskblock(0),FileRead,Openfile(2:1/1),Thread(2:1/W0)) this Page(1:1/4)
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 1017/250000[PageTableEntry][do_unlock] this Page(1:1/4)
[PageTableEntry][do_unlock] this Page(55:1/5)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(5) Page(55:1/5)Thread(3:1/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(18:1/null) setframe Frame(5)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(8),Device(0),Page(18:1/5),Diskblock(18),FileRead,Openfile(0:1/0),Thread(3:1/W1)) this Page(18:1/5)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(3:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(3:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 52630 offset = 406 page no = 51 Thread(2:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(2:1/RU) 21 Page(51:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(7) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(51:1/null)
[PageFaultHandler][do_handlePageFault] page Page(51:1/null) setframe Frame(7)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(9),Device(0),Page(51:1/7),Diskblock(51),FileRead,Openfile(0:1/0),Thread(2:1/W1)) this Page(51:1/7)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(2:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(2:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(7)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 14810 offset = 474 page no = 14 Thread(1:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(1:1/RU) 22 Page(14:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(8) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(14:1/null)
[PageFaultHandler][do_handlePageFault] page Page(14:1/null) setframe Frame(8)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(10),Device(0),Page(14:1/8),Diskblock(14),FileRead,Openfile(0:1/0),Thread(1:1/W1)) this Page(14:1/8)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(1:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(1:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(18:1/5)
[PageFaultHandler][do_handlePageFault] thread Thread(3:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 12187 offset = 923 page no = 11 Thread(3:1/RU)
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 27157 offset = 533 page no = 26 Thread(3:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(3:1/RU) 21 Page(26:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(9) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(26:1/null)
[PageFaultHandler][do_handlePageFault] page Page(26:1/null) setframe Frame(9)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(11),Device(0),Page(26:1/9),Diskblock(26),FileRead,Openfile(0:1/0),Thread(3:1/W1)) this Page(26:1/9)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(3:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(3:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(51:1/7)
[PageFaultHandler][do_handlePageFault] thread Thread(2:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(14:1/8)
[PageFaultHandler][do_handlePageFault] thread Thread(1:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(26:1/9)
[PageFaultHandler][do_handlePageFault] thread Thread(3:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 21501 offset = 1021 page no = 20 Thread(3:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(3:1/RU) 21 Page(20:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(7) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(20:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(51:1/7)
[PageFaultHandler][do_handlePageFault] page Page(20:1/null) setframe Frame(7)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(12),Device(0),Page(20:1/7),Diskblock(20),FileRead,Openfile(0:1/0),Thread(3:1/W1)) this Page(20:1/7)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(3:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(3:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(7)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(20:1/7)
[PageFaultHandler][do_handlePageFault] thread Thread(3:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
Simulation progress: 2093/250000[MMU][do_refer] address = 47661 offset = 557 page no = 46 Thread(2:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(2:1/RU) 22 Page(46:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(9) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(46:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(26:1/9)
[PageFaultHandler][do_handlePageFault] page Page(46:1/null) setframe Frame(9)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(13),Device(0),Page(46:1/9),Diskblock(46),FileRead,Openfile(0:1/0),Thread(2:1/W1)) this Page(46:1/9)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(2:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(2:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(14),Device(1),Page(1:1/4),Diskblock(0),FileWrite,Openfile(2:1/1),Thread(7:1/W0)) this Page(1:1/4)
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(46:1/9)
[PageFaultHandler][do_handlePageFault] thread Thread(2:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(1:1/4)
[MMU][do_refer] address = 34039 offset = 247 page no = 33 Thread(0:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(0:1/RU) 22 Page(33:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(12) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(33:1/null)
[PageFaultHandler][do_handlePageFault] page Page(33:1/null) setframe Frame(12)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(15),Device(0),Page(33:1/12),Diskblock(33),FileRead,Openfile(0:1/0),Thread(0:1/W1)) this Page(33:1/12)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(0:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(0:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(12)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(33:1/12)
[PageFaultHandler][do_handlePageFault] thread Thread(0:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 55236 offset = 964 page no = 53 Thread(9:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(9:1/RU) 21 Page(53:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(13) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(53:1/null)
[PageFaultHandler][do_handlePageFault] page Page(53:1/null) setframe Frame(13)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(16),Device(0),Page(53:1/13),Diskblock(53),FileRead,Openfile(0:1/0),Thread(9:1/W1)) this Page(53:1/13)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(9:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(9:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(13)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(53:1/13)
[PageFaultHandler][do_handlePageFault] thread Thread(9:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
Simulation progress: 3036/250000[MMU][do_refer] address = 621 offset = 621 page no = 0 Thread(5:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(5:1/RU) 22 Page(0:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(14) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(0:1/null)
[PageFaultHandler][do_handlePageFault] page Page(0:1/null) setframe Frame(14)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(17),Device(0),Page(0:1/14),Diskblock(0),FileRead,Openfile(0:1/0),Thread(5:1/W1)) this Page(0:1/14)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(5:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(5:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(14)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(0:1/14)
[PageFaultHandler][do_handlePageFault] thread Thread(5:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[Info][PageTableEntry][do_lock] iorb IORB(Id(18),Device(2),Page(0:1/14),Diskblock(4),FileRead,Openfile(6:1/2),Thread(0:1/W0)) this Page(0:1/14)
[Info][PageTableEntry][do_lock] Get frame Frame(14)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 18189 offset = 781 page no = 17 Thread(3:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(3:1/RU) 22 Page(17:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(15) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(17:1/null)
[PageFaultHandler][do_handlePageFault] page Page(17:1/null) setframe Frame(15)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(19),Device(0),Page(17:1/15),Diskblock(17),FileRead,Openfile(0:1/0),Thread(3:1/W1)) this Page(17:1/15)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(3:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(3:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(15)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(17:1/15)
[PageFaultHandler][do_handlePageFault] thread Thread(3:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[Info][PageTableEntry][do_lock] iorb IORB(Id(20),Device(2),Page(2:1/null),Diskblock(4),FileWrite,Openfile(6:1/2),Thread(12:1/W0)) this Page(2:1/null)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] requrest_thread = Thread(12:1/W0)
[Info][PageTableEntry][do_lock] validating_thread is null, handlePageFault
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(12:1/W0) 23 Page(2:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(16) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(2:1/null)
[PageFaultHandler][do_handlePageFault] page Page(2:1/null) setframe Frame(16)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(21),Device(0),Page(2:1/16),Diskblock(2),FileRead,Openfile(0:1/0),Thread(12:1/W2)) this Page(2:1/16)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(12:1/W2)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(12:1/W2)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(2:1/16)
[PageFaultHandler][do_handlePageFault] thread Thread(12:1/W1) status = 31
 Thread do_handlePageFault Success
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 4060/250000[PageTableEntry][do_unlock] this Page(0:1/14)
[MMU][do_refer] address = 30489 offset = 793 page no = 29 Thread(2:1/RU)
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 21841 offset = 337 page no = 21 Thread(4:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(4:1/RU) 22 Page(21:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(17) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(21:1/null)
[PageFaultHandler][do_handlePageFault] page Page(21:1/null) setframe Frame(17)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(22),Device(0),Page(21:1/17),Diskblock(21),FileRead,Openfile(0:1/0),Thread(4:1/W1)) this Page(21:1/17)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(4:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(4:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(2:1/16)
[MMU][do_refer] address = 52361 offset = 137 page no = 51 Thread(7:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(7:1/RU) 22 Page(51:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(18) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(51:1/null)
[PageFaultHandler][do_handlePageFault] page Page(51:1/null) setframe Frame(18)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(23),Device(0),Page(51:1/18),Diskblock(51),FileRead,Openfile(0:1/0),Thread(7:1/W1)) this Page(51:1/18)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(7:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(7:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(21:1/17)
[PageFaultHandler][do_handlePageFault] thread Thread(4:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 2662 offset = 614 page no = 2 Thread(3:1/RU)
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(51:1/18)
[PageFaultHandler][do_handlePageFault] thread Thread(7:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 12638 offset = 350 page no = 12 Thread(11:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(11:2/RU) 22 Page(12:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(18) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(12:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(51:1/18)
[PageFaultHandler][do_handlePageFault] Frame(18) is dirty, do swap-out, Thread(11:2/W0)
[PageFaultHandler][SwapOut] page Page(51:1/18) frame Frame(18)file Openfile(4:2/0)
[PageFaultHandler][SwapOut] block no 51
[Info][PageTableEntry][do_lock] iorb IORB(Id(24),Device(0),Page(51:1/18),Diskblock(115),FileWrite,Openfile(4:2/0),Thread(11:2/W1)) this Page(51:1/18)
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 5767 offset = 647 page no = 5 Thread(1:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(1:1/RU) 21 Page(5:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(20) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(5:1/null)
[PageFaultHandler][do_handlePageFault] page Page(5:1/null) setframe Frame(20)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(25),Device(0),Page(5:1/20),Diskblock(5),FileRead,Openfile(0:1/0),Thread(1:1/W1)) this Page(5:1/20)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(1:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(1:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(20)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(51:1/18)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(18) Page(51:1/18)Thread(11:2/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(12:2/null) setframe Frame(18)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(26),Device(0),Page(12:2/18),Diskblock(76),FileRead,Openfile(4:2/0),Thread(11:2/W1)) this Page(12:2/18)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(11:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(11:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 60038 offset = 646 page no = 58 Thread(9:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(9:1/RU) 22 Page(58:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(21) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(58:1/null)
[PageFaultHandler][do_handlePageFault] page Page(58:1/null) setframe Frame(21)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(27),Device(0),Page(58:1/21),Diskblock(58),FileRead,Openfile(0:1/0),Thread(9:1/W1)) this Page(58:1/21)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(9:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(9:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(5:1/20)
[PageFaultHandler][do_handlePageFault] thread Thread(1:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 18899 offset = 467 page no = 18 Thread(0:1/RU)
[MMU][do_refer] Do memory read.
[Info][PageTableEntry][do_lock] iorb IORB(Id(28),Device(1),Page(0:1/14),Diskblock(3),FileRead,Openfile(8:1/1),Thread(0:1/W0)) this Page(0:1/14)
[Info][PageTableEntry][do_lock] Get frame Frame(14)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(0:1/14)
Simulation progress: 5028/250000[PageTableEntry][do_unlock] this Page(12:2/18)
[PageFaultHandler][do_handlePageFault] thread Thread(11:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(58:1/21)
[PageFaultHandler][do_handlePageFault] thread Thread(9:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 11976 offset = 712 page no = 11 Thread(13:1/RU)
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 48408 offset = 280 page no = 47 Thread(13:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(13:1/RU) 22 Page(47:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(21) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(47:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(58:1/21)
[PageFaultHandler][do_handlePageFault] Frame(21) is dirty, do swap-out, Thread(13:1/W0)
[PageFaultHandler][SwapOut] page Page(58:1/21) frame Frame(21)file Openfile(0:1/0)
[PageFaultHandler][SwapOut] block no 58
[Info][PageTableEntry][do_lock] iorb IORB(Id(29),Device(0),Page(58:1/21),Diskblock(58),FileWrite,Openfile(0:1/0),Thread(13:1/W1)) this Page(58:1/21)
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(58:1/21)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(21) Page(58:1/21)Thread(13:1/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(47:1/null) setframe Frame(21)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(30),Device(0),Page(47:1/21),Diskblock(47),FileRead,Openfile(0:1/0),Thread(13:1/W1)) this Page(47:1/21)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(13:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(13:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(47:1/21)
[PageFaultHandler][do_handlePageFault] thread Thread(13:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 61507 offset = 67 page no = 60 Thread(3:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(3:1/RU) 21 Page(60:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(22) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(60:1/null)
[PageFaultHandler][do_handlePageFault] page Page(60:1/null) setframe Frame(22)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(31),Device(0),Page(60:1/22),Diskblock(60),FileRead,Openfile(0:1/0),Thread(3:1/W1)) this Page(60:1/22)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(3:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(3:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(22)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(60:1/22)
[PageFaultHandler][do_handlePageFault] thread Thread(3:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 50484 offset = 308 page no = 49 Thread(10:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(10:1/RU) 21 Page(49:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(24) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(49:1/null)
[PageFaultHandler][do_handlePageFault] page Page(49:1/null) setframe Frame(24)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(32),Device(0),Page(49:1/24),Diskblock(49),FileRead,Openfile(0:1/0),Thread(10:1/W1)) this Page(49:1/24)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(10:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(10:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(24)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(49:1/24)
[PageFaultHandler][do_handlePageFault] thread Thread(10:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 57834 offset = 490 page no = 56 Thread(5:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(5:1/RU) 22 Page(56:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(25) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(56:1/null)
[PageFaultHandler][do_handlePageFault] page Page(56:1/null) setframe Frame(25)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(33),Device(0),Page(56:1/25),Diskblock(56),FileRead,Openfile(0:1/0),Thread(5:1/W1)) this Page(56:1/25)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(5:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(5:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(25)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 49347 offset = 195 page no = 48 Thread(11:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(11:2/RU) 22 Page(48:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(26) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(48:2/null)
[PageFaultHandler][do_handlePageFault] page Page(48:2/null) setframe Frame(26)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(34),Device(0),Page(48:2/26),Diskblock(112),FileRead,Openfile(4:2/0),Thread(11:2/W1)) this Page(48:2/26)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(11:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(11:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(56:1/25)
[PageFaultHandler][do_handlePageFault] thread Thread(5:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 6572 offset = 428 page no = 6 Thread(9:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(9:1/RU) 22 Page(6:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(27) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(6:1/null)
[PageFaultHandler][do_handlePageFault] page Page(6:1/null) setframe Frame(27)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(35),Device(0),Page(6:1/27),Diskblock(6),FileRead,Openfile(0:1/0),Thread(9:1/W1)) this Page(6:1/27)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(9:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(9:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 6004/250000[PageTableEntry][do_unlock] this Page(48:2/26)
[PageFaultHandler][do_handlePageFault] thread Thread(11:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 53655 offset = 407 page no = 52 Thread(4:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(4:1/RU) 21 Page(52:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(26) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(52:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(48:2/26)
[PageFaultHandler][do_handlePageFault] Frame(26) is dirty, do swap-out, Thread(4:1/W0)
[PageFaultHandler][SwapOut] page Page(48:2/26) frame Frame(26)file Openfile(0:1/0)
[PageFaultHandler][SwapOut] block no 48
[Info][PageTableEntry][do_lock] iorb IORB(Id(36),Device(0),Page(48:2/26),Diskblock(48),FileWrite,Openfile(0:1/0),Thread(4:1/W1)) this Page(48:2/26)
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(6:1/27)
[PageFaultHandler][do_handlePageFault] thread Thread(9:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 6638 offset = 494 page no = 6 Thread(3:1/RU)
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(48:2/26)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(26) Page(48:2/26)Thread(4:1/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(52:1/null) setframe Frame(26)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(37),Device(0),Page(52:1/26),Diskblock(52),FileRead,Openfile(0:1/0),Thread(4:1/W1)) this Page(52:1/26)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(4:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(4:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 23250 offset = 722 page no = 22 Thread(6:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(6:1/RU) 21 Page(22:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(29) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(22:1/null)
[PageFaultHandler][do_handlePageFault] page Page(22:1/null) setframe Frame(29)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(38),Device(0),Page(22:1/29),Diskblock(22),FileRead,Openfile(0:1/0),Thread(6:1/W1)) this Page(22:1/29)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(6:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(6:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(52:1/26)
[PageFaultHandler][do_handlePageFault] thread Thread(4:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 38817 offset = 929 page no = 37 Thread(10:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(10:1/RU) 22 Page(37:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(0) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(37:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(12:1/0)
[PageFaultHandler][do_handlePageFault] Frame(0) is dirty, do swap-out, Thread(10:1/W0)
[PageFaultHandler][SwapOut] page Page(12:1/0) frame Frame(0)file Openfile(0:1/0)
[PageFaultHandler][SwapOut] block no 12
[Info][PageTableEntry][do_lock] iorb IORB(Id(39),Device(0),Page(12:1/0),Diskblock(12),FileWrite,Openfile(0:1/0),Thread(10:1/W1)) this Page(12:1/0)
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(22:1/29)
[PageFaultHandler][do_handlePageFault] thread Thread(6:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 38569 offset = 681 page no = 37 Thread(5:1/RU)
[PageTableEntry][do_unlock] this Page(12:1/0)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(0) Page(12:1/0)Thread(10:1/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(37:1/null) setframe Frame(0)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(40),Device(0),Page(37:1/0),Diskblock(37),FileRead,Openfile(0:1/0),Thread(10:1/W1)) this Page(37:1/0)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(10:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(10:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(37:1/0)
[PageFaultHandler][do_handlePageFault] thread Thread(10:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 20023 offset = 567 page no = 19 Thread(9:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(9:1/RU) 22 Page(19:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(29) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(19:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(22:1/29)
[PageFaultHandler][do_handlePageFault] page Page(19:1/null) setframe Frame(29)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(41),Device(0),Page(19:1/29),Diskblock(19),FileRead,Openfile(0:1/0),Thread(9:1/W1)) this Page(19:1/29)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(9:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(9:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(19:1/29)
[PageFaultHandler][do_handlePageFault] thread Thread(9:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 34346 offset = 554 page no = 33 Thread(14:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(14:3/RU) 22 Page(33:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(2) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(33:3/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(43:1/2)
[PageFaultHandler][do_handlePageFault] page Page(33:3/null) setframe Frame(2)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(42),Device(0),Page(33:3/2),Diskblock(161),FileRead,Openfile(10:3/0),Thread(14:3/W1)) this Page(33:3/2)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(14:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(14:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 1304 offset = 280 page no = 1 Thread(8:1/RU)
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 37044 offset = 180 page no = 36 Thread(8:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(8:1/RU) 22 Page(36:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(3) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(36:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(29:1/3)
[PageFaultHandler][do_handlePageFault] Frame(3) is dirty, do swap-out, Thread(8:1/W0)
[PageFaultHandler][SwapOut] page Page(29:1/3) frame Frame(3)file Openfile(0:1/0)
[PageFaultHandler][SwapOut] block no 29
[Info][PageTableEntry][do_lock] iorb IORB(Id(43),Device(0),Page(29:1/3),Diskblock(29),FileWrite,Openfile(0:1/0),Thread(8:1/W1)) this Page(29:1/3)
[Info][PageTableEntry][do_lock] Get frame Frame(3)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(33:3/2)
[PageFaultHandler][do_handlePageFault] thread Thread(14:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 62629 offset = 165 page no = 61 Thread(4:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(4:1/RU) 21 Page(61:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(4) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(61:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(1:1/4)
[PageFaultHandler][do_handlePageFault] Frame(4) is dirty, do swap-out, Thread(4:1/W0)
[PageFaultHandler][SwapOut] page Page(1:1/4) frame Frame(4)file Openfile(0:1/0)
[PageFaultHandler][SwapOut] block no 1
[Info][PageTableEntry][do_lock] iorb IORB(Id(44),Device(0),Page(1:1/4),Diskblock(1),FileWrite,Openfile(0:1/0),Thread(4:1/W1)) this Page(1:1/4)
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 28790 offset = 118 page no = 28 Thread(1:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(1:1/RU) 22 Page(28:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(6) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(28:1/null)
[PageFaultHandler][do_handlePageFault] page Page(28:1/null) setframe Frame(6)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(45),Device(0),Page(28:1/6),Diskblock(28),FileRead,Openfile(0:1/0),Thread(1:1/W1)) this Page(28:1/6)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(1:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(1:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(6)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 35437 offset = 621 page no = 34 Thread(6:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(6:1/RU) 21 Page(34:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(5) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(34:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(18:1/5)
[PageFaultHandler][do_handlePageFault] Frame(5) is dirty, do swap-out, Thread(6:1/W0)
[PageFaultHandler][SwapOut] page Page(18:1/5) frame Frame(5)file Openfile(0:1/0)
[PageFaultHandler][SwapOut] block no 18
[Info][PageTableEntry][do_lock] iorb IORB(Id(46),Device(0),Page(18:1/5),Diskblock(18),FileWrite,Openfile(0:1/0),Thread(6:1/W1)) this Page(18:1/5)
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(29:1/3)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(3) Page(29:1/3)Thread(8:1/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(36:1/null) setframe Frame(3)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(47),Device(0),Page(36:1/3),Diskblock(36),FileRead,Openfile(0:1/0),Thread(8:1/W1)) this Page(36:1/3)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(8:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(8:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(3)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 7017/250000[PageTableEntry][do_unlock] this Page(1:1/4)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(4) Page(1:1/4)Thread(4:1/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(61:1/null) setframe Frame(4)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(48),Device(0),Page(61:1/4),Diskblock(61),FileRead,Openfile(0:1/0),Thread(4:1/W1)) this Page(61:1/4)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(4:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(4:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(28:1/6)
[PageFaultHandler][do_handlePageFault] thread Thread(1:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 61680 offset = 240 page no = 60 Thread(10:1/RU)
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(18:1/5)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(5) Page(18:1/5)Thread(6:1/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(34:1/null) setframe Frame(5)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(49),Device(0),Page(34:1/5),Diskblock(34),FileRead,Openfile(0:1/0),Thread(6:1/W1)) this Page(34:1/5)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(6:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(6:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(36:1/3)
[PageFaultHandler][do_handlePageFault] thread Thread(8:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(61:1/4)
[PageFaultHandler][do_handlePageFault] thread Thread(4:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(34:1/5)
[PageFaultHandler][do_handlePageFault] thread Thread(6:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 45015 offset = 983 page no = 43 Thread(2:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(2:1/RU) 22 Page(43:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(3) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(43:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(36:1/3)
[PageFaultHandler][do_handlePageFault] Frame(3) is dirty, do swap-out, Thread(2:1/W0)
[PageFaultHandler][SwapOut] page Page(36:1/3) frame Frame(3)file Openfile(0:1/0)
[PageFaultHandler][SwapOut] block no 36
[Info][PageTableEntry][do_lock] iorb IORB(Id(50),Device(0),Page(36:1/3),Diskblock(36),FileWrite,Openfile(0:1/0),Thread(2:1/W1)) this Page(36:1/3)
[Info][PageTableEntry][do_lock] Get frame Frame(3)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(36:1/3)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(3) Page(36:1/3)Thread(2:1/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(43:1/null) setframe Frame(3)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(51),Device(0),Page(43:1/3),Diskblock(43),FileRead,Openfile(0:1/0),Thread(2:1/W1)) this Page(43:1/3)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(2:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(2:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(3)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 6535 offset = 391 page no = 6 Thread(5:1/RU)
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 32937 offset = 169 page no = 32 Thread(5:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(5:1/RU) 22 Page(32:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(8) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(32:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(14:1/8)
[PageFaultHandler][do_handlePageFault] Frame(8) is dirty, do swap-out, Thread(5:1/W0)
[PageFaultHandler][SwapOut] page Page(14:1/8) frame Frame(8)file Openfile(0:1/0)
[PageFaultHandler][SwapOut] block no 14
[Info][PageTableEntry][do_lock] iorb IORB(Id(52),Device(0),Page(14:1/8),Diskblock(14),FileWrite,Openfile(0:1/0),Thread(5:1/W1)) this Page(14:1/8)
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(53),Device(2),Page(0:1/14),Diskblock(5),FileWrite,Openfile(6:1/2),Thread(10:1/W0)) this Page(0:1/14)
[Info][PageTableEntry][do_lock] Get frame Frame(14)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 57383 offset = 39 page no = 56 Thread(8:1/RU)
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(43:1/3)
[PageFaultHandler][do_handlePageFault] thread Thread(2:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(14:1/8)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(8) Page(14:1/8)Thread(5:1/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(32:1/null) setframe Frame(8)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(54),Device(0),Page(32:1/8),Diskblock(32),FileRead,Openfile(0:1/0),Thread(5:1/W1)) this Page(32:1/8)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(5:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(5:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 8022/250000[PageTableEntry][do_unlock] this Page(32:1/8)
[PageFaultHandler][do_handlePageFault] thread Thread(5:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(0:1/14)
[MMU][do_refer] address = 2351 offset = 303 page no = 2 Thread(6:1/RU)
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 9465 offset = 249 page no = 9 Thread(6:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(6:1/RU) 22 Page(9:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(8) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(9:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(32:1/8)
[PageFaultHandler][do_handlePageFault] Frame(8) is dirty, do swap-out, Thread(6:1/W0)
[PageFaultHandler][SwapOut] page Page(32:1/8) frame Frame(8)file Openfile(0:1/0)
[PageFaultHandler][SwapOut] block no 32
[Info][PageTableEntry][do_lock] iorb IORB(Id(55),Device(0),Page(32:1/8),Diskblock(32),FileWrite,Openfile(0:1/0),Thread(6:1/W1)) this Page(32:1/8)
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 18222 offset = 814 page no = 17 Thread(13:1/RU)
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(32:1/8)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(8) Page(32:1/8)Thread(6:1/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(9:1/null) setframe Frame(8)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(56),Device(0),Page(9:1/8),Diskblock(9),FileRead,Openfile(0:1/0),Thread(6:1/W1)) this Page(9:1/8)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(6:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(6:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(9:1/8)
[PageFaultHandler][do_handlePageFault] thread Thread(6:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 30240 offset = 544 page no = 29 Thread(0:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(0:1/RU) 21 Page(29:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(7) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(29:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(20:1/7)
[PageFaultHandler][do_handlePageFault] page Page(29:1/null) setframe Frame(7)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(57),Device(0),Page(29:1/7),Diskblock(29),FileRead,Openfile(0:1/0),Thread(0:1/W1)) this Page(29:1/7)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(0:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(0:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(7)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(29:1/7)
[PageFaultHandler][do_handlePageFault] thread Thread(0:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 15669 offset = 309 page no = 15 Thread(2:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(2:1/RU) 21 Page(15:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(9) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(15:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(46:1/9)
[PageFaultHandler][do_handlePageFault] Frame(9) is dirty, do swap-out, Thread(2:1/W0)
[PageFaultHandler][SwapOut] page Page(46:1/9) frame Frame(9)file Openfile(0:1/0)
[PageFaultHandler][SwapOut] block no 46
[Info][PageTableEntry][do_lock] iorb IORB(Id(58),Device(0),Page(46:1/9),Diskblock(46),FileWrite,Openfile(0:1/0),Thread(2:1/W1)) this Page(46:1/9)
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(46:1/9)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(9) Page(46:1/9)Thread(2:1/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(15:1/null) setframe Frame(9)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(59),Device(0),Page(15:1/9),Diskblock(15),FileRead,Openfile(0:1/0),Thread(2:1/W1)) this Page(15:1/9)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(2:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(2:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(15:1/9)
[PageFaultHandler][do_handlePageFault] thread Thread(2:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 47848 offset = 744 page no = 46 Thread(5:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(5:1/RU) 21 Page(46:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(12) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(46:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(33:1/12)
[PageFaultHandler][do_handlePageFault] Frame(12) is dirty, do swap-out, Thread(5:1/W0)
[PageFaultHandler][SwapOut] page Page(33:1/12) frame Frame(12)file Openfile(0:1/0)
[PageFaultHandler][SwapOut] block no 33
[Info][PageTableEntry][do_lock] iorb IORB(Id(60),Device(0),Page(33:1/12),Diskblock(33),FileWrite,Openfile(0:1/0),Thread(5:1/W1)) this Page(33:1/12)
[Info][PageTableEntry][do_lock] Get frame Frame(12)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(61),Device(1),Page(0:1/14),Diskblock(7),FileWrite,Openfile(8:1/1),Thread(15:1/W0)) this Page(0:1/14)
[Info][PageTableEntry][do_lock] Get frame Frame(14)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(33:1/12)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(12) Page(33:1/12)Thread(5:1/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(46:1/null) setframe Frame(12)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(62),Device(0),Page(46:1/12),Diskblock(46),FileRead,Openfile(0:1/0),Thread(5:1/W1)) this Page(46:1/12)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(5:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(5:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(12)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(0:1/14)
[PageTableEntry][do_unlock] this Page(46:1/12)
[PageFaultHandler][do_handlePageFault] thread Thread(5:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
Simulation progress: 9100/250000[MMU][do_refer] address = 63478 offset = 1014 page no = 61 Thread(9:1/RU)
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 41584 offset = 624 page no = 40 Thread(6:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(6:1/RU) 21 Page(40:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(13) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(40:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(53:1/13)
[PageFaultHandler][do_handlePageFault] page Page(40:1/null) setframe Frame(13)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(63),Device(0),Page(40:1/13),Diskblock(40),FileRead,Openfile(0:1/0),Thread(6:1/W1)) this Page(40:1/13)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(6:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(6:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(13)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(40:1/13)
[PageFaultHandler][do_handlePageFault] thread Thread(6:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 55012 offset = 740 page no = 53 Thread(0:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(0:1/RU) 22 Page(53:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(14) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(53:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(0:1/14)
[PageFaultHandler][do_handlePageFault] Frame(14) is dirty, do swap-out, Thread(0:1/W0)
[PageFaultHandler][SwapOut] page Page(0:1/14) frame Frame(14)file Openfile(0:1/0)
[PageFaultHandler][SwapOut] block no 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(64),Device(0),Page(0:1/14),Diskblock(0),FileWrite,Openfile(0:1/0),Thread(0:1/W1)) this Page(0:1/14)
[Info][PageTableEntry][do_lock] Get frame Frame(14)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(0:1/14)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(14) Page(0:1/14)Thread(0:1/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(53:1/null) setframe Frame(14)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(65),Device(0),Page(53:1/14),Diskblock(53),FileRead,Openfile(0:1/0),Thread(0:1/W1)) this Page(53:1/14)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(0:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(0:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(14)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(53:1/14)
[PageFaultHandler][do_handlePageFault] thread Thread(0:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 11549 offset = 285 page no = 11 Thread(2:1/RU)
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 22790 offset = 262 page no = 22 Thread(2:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(2:1/RU) 21 Page(22:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(15) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(22:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(17:1/15)
[PageFaultHandler][do_handlePageFault] Frame(15) is dirty, do swap-out, Thread(2:1/W0)
[PageFaultHandler][SwapOut] page Page(17:1/15) frame Frame(15)file Openfile(0:1/0)
[PageFaultHandler][SwapOut] block no 17
[Info][PageTableEntry][do_lock] iorb IORB(Id(66),Device(0),Page(17:1/15),Diskblock(17),FileWrite,Openfile(0:1/0),Thread(2:1/W1)) this Page(17:1/15)
[Info][PageTableEntry][do_lock] Get frame Frame(15)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(17:1/15)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(15) Page(17:1/15)Thread(2:1/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(22:1/null) setframe Frame(15)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(67),Device(0),Page(22:1/15),Diskblock(22),FileRead,Openfile(0:1/0),Thread(2:1/W1)) this Page(22:1/15)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(2:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(2:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(15)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 24400 offset = 848 page no = 23 Thread(15:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(15:1/RU) 21 Page(23:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(16) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(23:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(2:1/16)
[PageFaultHandler][do_handlePageFault] Frame(16) is dirty, do swap-out, Thread(15:1/W0)
[PageFaultHandler][SwapOut] page Page(2:1/16) frame Frame(16)file Openfile(0:1/0)
[PageFaultHandler][SwapOut] block no 2
[Info][PageTableEntry][do_lock] iorb IORB(Id(68),Device(0),Page(2:1/16),Diskblock(2),FileWrite,Openfile(0:1/0),Thread(15:1/W1)) this Page(2:1/16)
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(22:1/15)
[PageFaultHandler][do_handlePageFault] thread Thread(2:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(2:1/16)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(16) Page(2:1/16)Thread(15:1/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(23:1/null) setframe Frame(16)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(69),Device(0),Page(23:1/16),Diskblock(23),FileRead,Openfile(0:1/0),Thread(15:1/W1)) this Page(23:1/16)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(15:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(15:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(23:1/16)
[PageFaultHandler][do_handlePageFault] thread Thread(15:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[Info][PageTableEntry][do_lock] iorb IORB(Id(70),Device(2),Page(5:1/20),Diskblock(0),FileRead,Openfile(6:1/2),Thread(9:1/W0)) this Page(5:1/20)
[Info][PageTableEntry][do_lock] Get frame Frame(20)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 10030/250000[Info][PageTableEntry][do_lock] iorb IORB(Id(71),Device(1),Page(6:1/27),Diskblock(7),FileWrite,Openfile(8:1/1),Thread(6:1/W0)) this Page(6:1/27)
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(6:1/27)
[MMU][do_refer] address = 26415 offset = 815 page no = 25 Thread(11:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(11:2/RU) 22 Page(25:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(16) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(25:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(23:1/16)
[PageFaultHandler][do_handlePageFault] page Page(25:2/null) setframe Frame(16)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(72),Device(0),Page(25:2/16),Diskblock(89),FileRead,Openfile(4:2/0),Thread(11:2/W1)) this Page(25:2/16)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(11:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(11:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 1903 offset = 879 page no = 1 Thread(2:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(2:1/RU) 22 Page(1:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(19) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(1:1/null)
[PageFaultHandler][do_handlePageFault] page Page(1:1/null) setframe Frame(19)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(73),Device(0),Page(1:1/19),Diskblock(1),FileRead,Openfile(0:1/0),Thread(2:1/W1)) this Page(1:1/19)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(2:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(2:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(5:1/20)
[PageTableEntry][do_unlock] this Page(25:2/16)
[PageFaultHandler][do_handlePageFault] thread Thread(11:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(1:1/19)
[PageFaultHandler][do_handlePageFault] thread Thread(2:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 14123 offset = 811 page no = 13 Thread(6:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(6:1/RU) 21 Page(13:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(19) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(13:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(1:1/19)
[PageFaultHandler][do_handlePageFault] Frame(19) is dirty, do swap-out, Thread(6:1/W0)
[PageFaultHandler][SwapOut] page Page(1:1/19) frame Frame(19)file Openfile(0:1/0)
[PageFaultHandler][SwapOut] block no 1
[Info][PageTableEntry][do_lock] iorb IORB(Id(74),Device(0),Page(1:1/19),Diskblock(1),FileWrite,Openfile(0:1/0),Thread(6:1/W1)) this Page(1:1/19)
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(1:1/19)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(19) Page(1:1/19)Thread(6:1/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(13:1/null) setframe Frame(19)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(75),Device(0),Page(13:1/19),Diskblock(13),FileRead,Openfile(0:1/0),Thread(6:1/W1)) this Page(13:1/19)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(6:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(6:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(13:1/19)
[PageFaultHandler][do_handlePageFault] thread Thread(6:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 7173 offset = 5 page no = 7 Thread(0:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(0:1/RU) 21 Page(7:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(18) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(7:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(12:2/18)
[PageFaultHandler][do_handlePageFault] Frame(18) is dirty, do swap-out, Thread(0:1/W0)
[PageFaultHandler][SwapOut] page Page(12:2/18) frame Frame(18)file Openfile(0:1/0)
[PageFaultHandler][SwapOut] block no 12
[Info][PageTableEntry][do_lock] iorb IORB(Id(76),Device(0),Page(12:2/18),Diskblock(12),FileWrite,Openfile(0:1/0),Thread(0:1/W1)) this Page(12:2/18)
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(77),Device(1),Page(5:1/20),Diskblock(9),FileWrite,Openfile(8:1/1),Thread(8:1/W0)) this Page(5:1/20)
[Info][PageTableEntry][do_lock] Get frame Frame(20)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 17074 offset = 690 page no = 16 Thread(9:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(9:1/RU) 22 Page(16:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(23) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(16:1/null)
[PageFaultHandler][do_handlePageFault] page Page(16:1/null) setframe Frame(23)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(78),Device(0),Page(16:1/23),Diskblock(16),FileRead,Openfile(0:1/0),Thread(9:1/W1)) this Page(16:1/23)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(9:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(9:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(23)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(12:2/18)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(18) Page(12:2/18)Thread(0:1/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(7:1/null) setframe Frame(18)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(79),Device(0),Page(7:1/18),Diskblock(7),FileRead,Openfile(0:1/0),Thread(0:1/W1)) this Page(7:1/18)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(0:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(0:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(5:1/20)
[PageTableEntry][do_unlock] this Page(16:1/23)
[PageFaultHandler][do_handlePageFault] thread Thread(9:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
Simulation progress: 11023/250000[PageTableEntry][do_unlock] this Page(7:1/18)
[PageFaultHandler][do_handlePageFault] thread Thread(0:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 52147 offset = 947 page no = 50 Thread(3:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(3:1/RU) 21 Page(50:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(21) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(50:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(47:1/21)
[PageFaultHandler][do_handlePageFault] Frame(21) is dirty, do swap-out, Thread(3:1/W0)
[PageFaultHandler][SwapOut] page Page(47:1/21) frame Frame(21)file Openfile(0:1/0)
[PageFaultHandler][SwapOut] block no 47
[Info][PageTableEntry][do_lock] iorb IORB(Id(80),Device(0),Page(47:1/21),Diskblock(47),FileWrite,Openfile(0:1/0),Thread(3:1/W1)) this Page(47:1/21)
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(47:1/21)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(21) Page(47:1/21)Thread(3:1/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(50:1/null) setframe Frame(21)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(81),Device(0),Page(50:1/21),Diskblock(50),FileRead,Openfile(0:1/0),Thread(3:1/W1)) this Page(50:1/21)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(3:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(3:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(50:1/21)
[PageFaultHandler][do_handlePageFault] thread Thread(3:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 14067 offset = 755 page no = 13 Thread(11:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(11:2/RU) 21 Page(13:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(22) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(13:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(60:1/22)
[PageFaultHandler][do_handlePageFault] Frame(22) is dirty, do swap-out, Thread(11:2/W0)
[PageFaultHandler][SwapOut] page Page(60:1/22) frame Frame(22)file Openfile(4:2/0)
[PageFaultHandler][SwapOut] block no 60
[Info][PageTableEntry][do_lock] iorb IORB(Id(82),Device(0),Page(60:1/22),Diskblock(124),FileWrite,Openfile(4:2/0),Thread(11:2/W1)) this Page(60:1/22)
[Info][PageTableEntry][do_lock] Get frame Frame(22)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 7650 offset = 482 page no = 7 Thread(9:1/RU)
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(60:1/22)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(22) Page(60:1/22)Thread(11:2/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(13:2/null) setframe Frame(22)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(83),Device(0),Page(13:2/22),Diskblock(77),FileRead,Openfile(4:2/0),Thread(11:2/W1)) this Page(13:2/22)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(11:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(11:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(22)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(13:2/22)
[PageFaultHandler][do_handlePageFault] thread Thread(11:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 61249 offset = 833 page no = 59 Thread(2:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(2:1/RU) 22 Page(59:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(24) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(59:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(49:1/24)
[PageFaultHandler][do_handlePageFault] page Page(59:1/null) setframe Frame(24)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(84),Device(0),Page(59:1/24),Diskblock(59),FileRead,Openfile(0:1/0),Thread(2:1/W1)) this Page(59:1/24)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(2:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(2:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(24)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(59:1/24)
[PageFaultHandler][do_handlePageFault] thread Thread(2:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
Simulation progress: 12009/250000[MMU][do_refer] address = 22014 offset = 510 page no = 21 Thread(6:1/RU)
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 37273 offset = 409 page no = 36 Thread(1:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(1:1/RU) 22 Page(36:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(25) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(36:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(56:1/25)
[PageFaultHandler][do_handlePageFault] Frame(25) is dirty, do swap-out, Thread(1:1/W0)
[PageFaultHandler][SwapOut] page Page(56:1/25) frame Frame(25)file Openfile(0:1/0)
[PageFaultHandler][SwapOut] block no 56
[Info][PageTableEntry][do_lock] iorb IORB(Id(85),Device(0),Page(56:1/25),Diskblock(56),FileWrite,Openfile(0:1/0),Thread(1:1/W1)) this Page(56:1/25)
[Info][PageTableEntry][do_lock] Get frame Frame(25)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(56:1/25)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(25) Page(56:1/25)Thread(1:1/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(36:1/null) setframe Frame(25)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(86),Device(0),Page(36:1/25),Diskblock(36),FileRead,Openfile(0:1/0),Thread(1:1/W1)) this Page(36:1/25)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(1:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(1:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(25)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(36:1/25)
[PageFaultHandler][do_handlePageFault] thread Thread(1:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 42482 offset = 498 page no = 41 Thread(8:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(8:1/RU) 21 Page(41:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(27) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(41:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(6:1/27)
[PageFaultHandler][do_handlePageFault] Frame(27) is dirty, do swap-out, Thread(8:1/W0)
[PageFaultHandler][SwapOut] page Page(6:1/27) frame Frame(27)file Openfile(0:1/0)
[PageFaultHandler][SwapOut] block no 6
[Info][PageTableEntry][do_lock] iorb IORB(Id(87),Device(0),Page(6:1/27),Diskblock(6),FileWrite,Openfile(0:1/0),Thread(8:1/W1)) this Page(6:1/27)
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(6:1/27)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(27) Page(6:1/27)Thread(8:1/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(41:1/null) setframe Frame(27)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(88),Device(0),Page(41:1/27),Diskblock(41),FileRead,Openfile(0:1/0),Thread(8:1/W1)) this Page(41:1/27)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(8:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(8:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(41:1/27)
[PageFaultHandler][do_handlePageFault] thread Thread(8:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 9943 offset = 727 page no = 9 Thread(4:1/RU)
[MMU][do_refer] Do memory write.
Simulation progress: 13012/250000[MMU][do_refer] address = 38373 offset = 485 page no = 37 Thread(6:1/RU)
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 37753 offset = 889 page no = 36 Thread(6:1/RU)
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 40453 offset = 517 page no = 39 Thread(9:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(9:1/RU) 21 Page(39:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(28) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(39:1/null)
[PageFaultHandler][do_handlePageFault] page Page(39:1/null) setframe Frame(28)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(89),Device(0),Page(39:1/28),Diskblock(39),FileRead,Openfile(0:1/0),Thread(9:1/W1)) this Page(39:1/28)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(9:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(9:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(39:1/28)
[PageFaultHandler][do_handlePageFault] thread Thread(9:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
Simulation progress: 14025/250000[MMU][do_refer] address = 46037 offset = 981 page no = 44 Thread(8:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(8:1/RU) 22 Page(44:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(26) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(44:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(52:1/26)
[PageFaultHandler][do_handlePageFault] page Page(44:1/null) setframe Frame(26)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(90),Device(0),Page(44:1/26),Diskblock(44),FileRead,Openfile(0:1/0),Thread(8:1/W1)) this Page(44:1/26)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(8:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(8:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(44:1/26)
[PageFaultHandler][do_handlePageFault] thread Thread(8:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 53185 offset = 961 page no = 51 Thread(0:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(0:1/RU) 22 Page(51:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(0) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(51:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(37:1/0)
[PageFaultHandler][do_handlePageFault] Frame(0) is dirty, do swap-out, Thread(0:1/W0)
[PageFaultHandler][SwapOut] page Page(37:1/0) frame Frame(0)file Openfile(0:1/0)
[PageFaultHandler][SwapOut] block no 37
[Info][PageTableEntry][do_lock] iorb IORB(Id(91),Device(0),Page(37:1/0),Diskblock(37),FileWrite,Openfile(0:1/0),Thread(0:1/W1)) this Page(37:1/0)
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(37:1/0)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(0) Page(37:1/0)Thread(0:1/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(51:1/null) setframe Frame(0)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(92),Device(0),Page(51:1/0),Diskblock(51),FileRead,Openfile(0:1/0),Thread(0:1/W1)) this Page(51:1/0)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(0:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(0:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(93),Device(2),Page(5:1/20),Diskblock(6),FileRead,Openfile(14:1/2),Thread(4:1/W0)) this Page(5:1/20)
[Info][PageTableEntry][do_lock] Get frame Frame(20)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(51:1/0)
[PageFaultHandler][do_handlePageFault] thread Thread(0:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 60883 offset = 467 page no = 59 Thread(3:1/RU)
[MMU][do_refer] Do memory write.
[Info][PageTableEntry][do_lock] iorb IORB(Id(94),Device(2),Page(7:1/18),Diskblock(6),FileRead,Openfile(14:1/2),Thread(3:1/W0)) this Page(7:1/18)
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 5796 offset = 676 page no = 5 Thread(9:1/RU)
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(5:1/20)
Simulation progress: 15093/250000[PageTableEntry][do_unlock] this Page(7:1/18)
[MMU][do_refer] address = 30012 offset = 316 page no = 29 Thread(17:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(17:4/RU) 22 Page(29:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(1) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(29:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(11:1/1)
[PageFaultHandler][do_handlePageFault] Frame(1) is dirty, do swap-out, Thread(17:4/W0)
[PageFaultHandler][SwapOut] page Page(11:1/1) frame Frame(1)file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 11
[Info][PageTableEntry][do_lock] iorb IORB(Id(95),Device(0),Page(11:1/1),Diskblock(203),FileWrite,Openfile(12:4/0),Thread(17:4/W1)) this Page(11:1/1)
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 21810 offset = 306 page no = 21 Thread(5:1/RU)
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 18493 offset = 61 page no = 18 Thread(6:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(6:1/RU) 22 Page(18:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(29) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(18:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(19:1/29)
[PageFaultHandler][do_handlePageFault] Frame(29) is dirty, do swap-out, Thread(6:1/W0)
[PageFaultHandler][SwapOut] page Page(19:1/29) frame Frame(29)file Openfile(0:1/0)
[PageFaultHandler][SwapOut] block no 19
[Info][PageTableEntry][do_lock] iorb IORB(Id(96),Device(0),Page(19:1/29),Diskblock(19),FileWrite,Openfile(0:1/0),Thread(6:1/W1)) this Page(19:1/29)
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(11:1/1)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(1) Page(11:1/1)Thread(17:4/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(29:4/null) setframe Frame(1)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(97),Device(0),Page(29:4/1),Diskblock(221),FileRead,Openfile(12:4/0),Thread(17:4/W1)) this Page(29:4/1)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(17:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(17:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(19:1/29)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(29) Page(19:1/29)Thread(6:1/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(18:1/null) setframe Frame(29)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(98),Device(0),Page(18:1/29),Diskblock(18),FileRead,Openfile(0:1/0),Thread(6:1/W1)) this Page(18:1/29)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(6:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(6:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 5828 offset = 708 page no = 5 Thread(4:1/RU)
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 58246 offset = 902 page no = 56 Thread(9:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(9:1/RU) 21 Page(56:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(2) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(56:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(33:3/2)
[PageFaultHandler][do_handlePageFault] Frame(2) is dirty, do swap-out, Thread(9:1/W0)
[PageFaultHandler][SwapOut] page Page(33:3/2) frame Frame(2)file Openfile(0:1/0)
[PageFaultHandler][SwapOut] block no 33
[Info][PageTableEntry][do_lock] iorb IORB(Id(99),Device(0),Page(33:3/2),Diskblock(33),FileWrite,Openfile(0:1/0),Thread(9:1/W1)) this Page(33:3/2)
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 16048/250000[PageTableEntry][do_unlock] this Page(29:4/1)
[PageFaultHandler][do_handlePageFault] thread Thread(17:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 60104 offset = 712 page no = 58 Thread(8:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(8:1/RU) 21 Page(58:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(6) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(58:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(28:1/6)
[PageFaultHandler][do_handlePageFault] Frame(6) is dirty, do swap-out, Thread(8:1/W0)
[PageFaultHandler][SwapOut] page Page(28:1/6) frame Frame(6)file Openfile(0:1/0)
[PageFaultHandler][SwapOut] block no 28
[Info][PageTableEntry][do_lock] iorb IORB(Id(100),Device(0),Page(28:1/6),Diskblock(28),FileWrite,Openfile(0:1/0),Thread(8:1/W1)) this Page(28:1/6)
[Info][PageTableEntry][do_lock] Get frame Frame(6)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 35997 offset = 157 page no = 35 Thread(3:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(3:1/RU) 22 Page(35:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(4) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(35:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(61:1/4)
[PageFaultHandler][do_handlePageFault] Frame(4) is dirty, do swap-out, Thread(3:1/W0)
[PageFaultHandler][SwapOut] page Page(61:1/4) frame Frame(4)file Openfile(0:1/0)
[PageFaultHandler][SwapOut] block no 61
[Info][PageTableEntry][do_lock] iorb IORB(Id(101),Device(0),Page(61:1/4),Diskblock(61),FileWrite,Openfile(0:1/0),Thread(3:1/W1)) this Page(61:1/4)
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 25917 offset = 317 page no = 25 Thread(11:2/RU)
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(18:1/29)
[PageFaultHandler][do_handlePageFault] thread Thread(6:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(33:3/2)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(2) Page(33:3/2)Thread(9:1/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(56:1/null) setframe Frame(2)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(102),Device(0),Page(56:1/2),Diskblock(56),FileRead,Openfile(0:1/0),Thread(9:1/W1)) this Page(56:1/2)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(9:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(9:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 18981 offset = 549 page no = 18 Thread(0:1/RU)
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(28:1/6)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(6) Page(28:1/6)Thread(8:1/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(58:1/null) setframe Frame(6)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(103),Device(0),Page(58:1/6),Diskblock(58),FileRead,Openfile(0:1/0),Thread(8:1/W1)) this Page(58:1/6)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(8:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(8:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(6)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(61:1/4)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(4) Page(61:1/4)Thread(3:1/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(35:1/null) setframe Frame(4)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(104),Device(0),Page(35:1/4),Diskblock(35),FileRead,Openfile(0:1/0),Thread(3:1/W1)) this Page(35:1/4)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(3:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(3:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(105),Device(2),Page(5:1/20),Diskblock(6),FileRead,Openfile(16:1/2),Thread(5:1/W0)) this Page(5:1/20)
[Info][PageTableEntry][do_lock] Get frame Frame(20)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(56:1/2)
[PageFaultHandler][do_handlePageFault] thread Thread(9:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(58:1/6)
[PageFaultHandler][do_handlePageFault] thread Thread(8:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(35:1/4)
[PageFaultHandler][do_handlePageFault] thread Thread(3:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 44187 offset = 155 page no = 43 Thread(17:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(17:4/RU) 21 Page(43:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(29) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(43:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(18:1/29)
[PageFaultHandler][do_handlePageFault] Frame(29) is dirty, do swap-out, Thread(17:4/W0)
[PageFaultHandler][SwapOut] page Page(18:1/29) frame Frame(29)file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 18
[Info][PageTableEntry][do_lock] iorb IORB(Id(106),Device(0),Page(18:1/29),Diskblock(210),FileWrite,Openfile(12:4/0),Thread(17:4/W1)) this Page(18:1/29)
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 7505 offset = 337 page no = 7 Thread(18:1/RU)
[MMU][do_refer] Do memory write.
[Info][PageTableEntry][do_lock] iorb IORB(Id(107),Device(2),Page(7:1/18),Diskblock(8),FileWrite,Openfile(16:1/2),Thread(18:1/W0)) this Page(7:1/18)
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 50249 offset = 73 page no = 49 Thread(6:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(6:1/RU) 21 Page(49:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(6) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(49:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(58:1/6)
[PageFaultHandler][do_handlePageFault] page Page(49:1/null) setframe Frame(6)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(108),Device(0),Page(49:1/6),Diskblock(49),FileRead,Openfile(0:1/0),Thread(6:1/W1)) this Page(49:1/6)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(6:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(6:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(6)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(5:1/20)
[MMU][do_refer] address = 18686 offset = 254 page no = 18 Thread(19:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(19:4/RU) 22 Page(18:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(11) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(18:4/null)
[PageFaultHandler][do_handlePageFault] page Page(18:4/null) setframe Frame(11)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(109),Device(0),Page(18:4/11),Diskblock(210),FileRead,Openfile(12:4/0),Thread(19:4/W1)) this Page(18:4/11)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(19:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(19:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(11)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 7438 offset = 270 page no = 7 Thread(16:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(16:4/RU) 22 Page(7:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(10) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(7:4/null)
[PageFaultHandler][do_handlePageFault] page Page(7:4/null) setframe Frame(10)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(110),Device(0),Page(7:4/10),Diskblock(199),FileRead,Openfile(12:4/0),Thread(16:4/W1)) this Page(7:4/10)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(16:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(16:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(10)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(18:1/29)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(29) Page(18:1/29)Thread(17:4/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(43:4/null) setframe Frame(29)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(111),Device(0),Page(43:4/29),Diskblock(235),FileRead,Openfile(12:4/0),Thread(17:4/W1)) this Page(43:4/29)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(17:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(17:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 17044/250000[PageTableEntry][do_unlock] this Page(49:1/6)
[PageFaultHandler][do_handlePageFault] thread Thread(6:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 22820 offset = 292 page no = 22 Thread(8:1/RU)
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 9889 offset = 673 page no = 9 Thread(8:1/RU)
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 64832 offset = 320 page no = 63 Thread(8:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(8:1/RU) 22 Page(63:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(8) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(63:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(9:1/8)
[PageFaultHandler][do_handlePageFault] Frame(8) is dirty, do swap-out, Thread(8:1/W0)
[PageFaultHandler][SwapOut] page Page(9:1/8) frame Frame(8)file Openfile(0:1/0)
[PageFaultHandler][SwapOut] block no 9
[Info][PageTableEntry][do_lock] iorb IORB(Id(112),Device(0),Page(9:1/8),Diskblock(9),FileWrite,Openfile(0:1/0),Thread(8:1/W1)) this Page(9:1/8)
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 33447 offset = 679 page no = 32 Thread(10:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(10:1/RU) 21 Page(32:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(7) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(32:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(29:1/7)
[PageFaultHandler][do_handlePageFault] page Page(32:1/null) setframe Frame(7)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(113),Device(0),Page(32:1/7),Diskblock(32),FileRead,Openfile(0:1/0),Thread(10:1/W1)) this Page(32:1/7)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(10:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(10:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(7)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(7:1/18)
[MMU][do_refer] address = 33385 offset = 617 page no = 32 Thread(4:1/RU)
[PageTableEntry][do_unlock] this Page(18:4/11)
[PageFaultHandler][do_handlePageFault] thread Thread(19:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(7:4/10)
[PageFaultHandler][do_handlePageFault] thread Thread(16:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(43:4/29)
[PageFaultHandler][do_handlePageFault] thread Thread(17:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 31729 offset = 1009 page no = 30 Thread(6:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(6:1/RU) 22 Page(30:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(11) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(30:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(18:4/11)
[PageFaultHandler][do_handlePageFault] Frame(11) is dirty, do swap-out, Thread(6:1/W0)
[PageFaultHandler][SwapOut] page Page(18:4/11) frame Frame(11)file Openfile(0:1/0)
[PageFaultHandler][SwapOut] block no 18
[Info][PageTableEntry][do_lock] iorb IORB(Id(114),Device(0),Page(18:4/11),Diskblock(18),FileWrite,Openfile(0:1/0),Thread(6:1/W1)) this Page(18:4/11)
[Info][PageTableEntry][do_lock] Get frame Frame(11)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 18698 offset = 266 page no = 18 Thread(18:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(18:1/RU) 21 Page(18:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(9) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(18:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(15:1/9)
[PageFaultHandler][do_handlePageFault] page Page(18:1/null) setframe Frame(9)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(115),Device(0),Page(18:1/9),Diskblock(18),FileRead,Openfile(0:1/0),Thread(18:1/W1)) this Page(18:1/9)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(18:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(18:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(9:1/8)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(8) Page(9:1/8)Thread(8:1/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(63:1/null) setframe Frame(8)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(116),Device(0),Page(63:1/8),Diskblock(63),FileRead,Openfile(0:1/0),Thread(8:1/W1)) this Page(63:1/8)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(8:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(8:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 28670 offset = 1022 page no = 27 Thread(5:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(5:1/RU) 22 Page(27:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(12) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(27:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(46:1/12)
[PageFaultHandler][do_handlePageFault] page Page(27:1/null) setframe Frame(12)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(117),Device(0),Page(27:1/12),Diskblock(27),FileRead,Openfile(0:1/0),Thread(5:1/W1)) this Page(27:1/12)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(5:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(5:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(12)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(32:1/7)
[PageFaultHandler][do_handlePageFault] thread Thread(10:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 2562 offset = 514 page no = 2 Thread(16:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(16:4/RU) 21 Page(2:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(14) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(2:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(53:1/14)
[PageFaultHandler][do_handlePageFault] Frame(14) is dirty, do swap-out, Thread(16:4/W0)
[PageFaultHandler][SwapOut] page Page(53:1/14) frame Frame(14)file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 53
[Info][PageTableEntry][do_lock] iorb IORB(Id(118),Device(0),Page(53:1/14),Diskblock(245),FileWrite,Openfile(12:4/0),Thread(16:4/W1)) this Page(53:1/14)
[Info][PageTableEntry][do_lock] Get frame Frame(14)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(18:4/11)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(11) Page(18:4/11)Thread(6:1/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(30:1/null) setframe Frame(11)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(119),Device(0),Page(30:1/11),Diskblock(30),FileRead,Openfile(0:1/0),Thread(6:1/W1)) this Page(30:1/11)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(6:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(6:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(11)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 15914 offset = 554 page no = 15 Thread(2:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(2:1/RU) 21 Page(15:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(15) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(15:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(22:1/15)
[PageFaultHandler][do_handlePageFault] Frame(15) is dirty, do swap-out, Thread(2:1/W0)
[PageFaultHandler][SwapOut] page Page(22:1/15) frame Frame(15)file Openfile(0:1/0)
[PageFaultHandler][SwapOut] block no 22
[Info][PageTableEntry][do_lock] iorb IORB(Id(120),Device(0),Page(22:1/15),Diskblock(22),FileWrite,Openfile(0:1/0),Thread(2:1/W1)) this Page(22:1/15)
[Info][PageTableEntry][do_lock] Get frame Frame(15)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(18:1/9)
[PageFaultHandler][do_handlePageFault] thread Thread(18:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 46250 offset = 170 page no = 45 Thread(9:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(9:1/RU) 21 Page(45:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(17) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(45:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(21:1/17)
[PageFaultHandler][do_handlePageFault] Frame(17) is dirty, do swap-out, Thread(9:1/W0)
[PageFaultHandler][SwapOut] page Page(21:1/17) frame Frame(17)file Openfile(0:1/0)
[PageFaultHandler][SwapOut] block no 21
[Info][PageTableEntry][do_lock] iorb IORB(Id(121),Device(0),Page(21:1/17),Diskblock(21),FileWrite,Openfile(0:1/0),Thread(9:1/W1)) this Page(21:1/17)
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 18049/250000[PageTableEntry][do_unlock] this Page(63:1/8)
[PageFaultHandler][do_handlePageFault] thread Thread(8:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(27:1/12)
[PageFaultHandler][do_handlePageFault] thread Thread(5:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 64143 offset = 655 page no = 62 Thread(19:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(19:4/RU) 22 Page(62:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(8) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(62:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(63:1/8)
[PageFaultHandler][do_handlePageFault] Frame(8) is dirty, do swap-out, Thread(19:4/W0)
[PageFaultHandler][SwapOut] page Page(63:1/8) frame Frame(8)file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 63
[Info][PageTableEntry][do_lock] iorb IORB(Id(122),Device(0),Page(63:1/8),Diskblock(255),FileWrite,Openfile(12:4/0),Thread(19:4/W1)) this Page(63:1/8)
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(123),Device(2),Page(5:1/20),Diskblock(8),FileWrite,Openfile(16:1/2),Thread(4:1/W0)) this Page(5:1/20)
[Info][PageTableEntry][do_lock] Get frame Frame(20)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(124),Device(2),Page(7:1/18),Diskblock(6),FileRead,Openfile(16:1/2),Thread(10:1/W0)) this Page(7:1/18)
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(53:1/14)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(14) Page(53:1/14)Thread(16:4/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(2:4/null) setframe Frame(14)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(125),Device(0),Page(2:4/14),Diskblock(194),FileRead,Openfile(12:4/0),Thread(16:4/W1)) this Page(2:4/14)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(16:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(16:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(14)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(30:1/11)
[PageFaultHandler][do_handlePageFault] thread Thread(6:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(5:1/20)
[PageTableEntry][do_unlock] this Page(22:1/15)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(15) Page(22:1/15)Thread(2:1/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(15:1/null) setframe Frame(15)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(126),Device(0),Page(15:1/15),Diskblock(15),FileRead,Openfile(0:1/0),Thread(2:1/W1)) this Page(15:1/15)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(2:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(2:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(15)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(21:1/17)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(17) Page(21:1/17)Thread(9:1/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(45:1/null) setframe Frame(17)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(127),Device(0),Page(45:1/17),Diskblock(45),FileRead,Openfile(0:1/0),Thread(9:1/W1)) this Page(45:1/17)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(9:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(9:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 20389 offset = 933 page no = 19 Thread(3:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(3:1/RU) 21 Page(19:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(12) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(19:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(27:1/12)
[PageFaultHandler][do_handlePageFault] Frame(12) is dirty, do swap-out, Thread(3:1/W0)
[PageFaultHandler][SwapOut] page Page(27:1/12) frame Frame(12)file Openfile(0:1/0)
[PageFaultHandler][SwapOut] block no 27
[Info][PageTableEntry][do_lock] iorb IORB(Id(128),Device(0),Page(27:1/12),Diskblock(27),FileWrite,Openfile(0:1/0),Thread(3:1/W1)) this Page(27:1/12)
[Info][PageTableEntry][do_lock] Get frame Frame(12)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 5200 offset = 80 page no = 5 Thread(11:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(11:2/RU) 22 Page(5:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(16) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(5:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(25:2/16)
[PageFaultHandler][do_handlePageFault] Frame(16) is dirty, do swap-out, Thread(11:2/W0)
[PageFaultHandler][SwapOut] page Page(25:2/16) frame Frame(16)file Openfile(4:2/0)
[PageFaultHandler][SwapOut] block no 25
[Info][PageTableEntry][do_lock] iorb IORB(Id(129),Device(0),Page(25:2/16),Diskblock(89),FileWrite,Openfile(4:2/0),Thread(11:2/W1)) this Page(25:2/16)
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 42833 offset = 849 page no = 41 Thread(20:1/RU)
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 49804 offset = 652 page no = 48 Thread(6:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(6:1/RU) 21 Page(48:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(20) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(48:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(5:1/20)
[PageFaultHandler][do_handlePageFault] Frame(20) is dirty, do swap-out, Thread(6:1/W0)
[PageFaultHandler][SwapOut] page Page(5:1/20) frame Frame(20)file Openfile(0:1/0)
[PageFaultHandler][SwapOut] block no 5
[Info][PageTableEntry][do_lock] iorb IORB(Id(130),Device(0),Page(5:1/20),Diskblock(5),FileWrite,Openfile(0:1/0),Thread(6:1/W1)) this Page(5:1/20)
[Info][PageTableEntry][do_lock] Get frame Frame(20)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(63:1/8)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(8) Page(63:1/8)Thread(19:4/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(62:4/null) setframe Frame(8)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(131),Device(0),Page(62:4/8),Diskblock(254),FileRead,Openfile(12:4/0),Thread(19:4/W1)) this Page(62:4/8)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(19:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(19:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 19017/250000[PageTableEntry][do_unlock] this Page(7:1/18)
[MMU][do_refer] address = 55554 offset = 258 page no = 54 Thread(17:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(17:4/RU) 21 Page(54:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(19) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(54:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(13:1/19)
[PageFaultHandler][do_handlePageFault] page Page(54:4/null) setframe Frame(19)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(132),Device(0),Page(54:4/19),Diskblock(246),FileRead,Openfile(12:4/0),Thread(17:4/W1)) this Page(54:4/19)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(17:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(17:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(2:4/14)
[PageFaultHandler][do_handlePageFault] thread Thread(16:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 6703 offset = 559 page no = 6 Thread(14:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(14:3/RU) 21 Page(6:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(23) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(6:3/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(16:1/23)
[PageFaultHandler][do_handlePageFault] Frame(23) is dirty, do swap-out, Thread(14:3/W0)
[PageFaultHandler][SwapOut] page Page(16:1/23) frame Frame(23)file Openfile(10:3/0)
[PageFaultHandler][SwapOut] block no 16
[Info][PageTableEntry][do_lock] iorb IORB(Id(133),Device(0),Page(16:1/23),Diskblock(144),FileWrite,Openfile(10:3/0),Thread(14:3/W1)) this Page(16:1/23)
[Info][PageTableEntry][do_lock] Get frame Frame(23)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(15:1/15)
[PageFaultHandler][do_handlePageFault] thread Thread(2:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 13568 offset = 256 page no = 13 Thread(20:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(20:1/RU) 22 Page(13:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(18) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(13:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(7:1/18)
[PageFaultHandler][do_handlePageFault] Frame(18) is dirty, do swap-out, Thread(20:1/W0)
[PageFaultHandler][SwapOut] page Page(7:1/18) frame Frame(18)file Openfile(0:1/0)
[PageFaultHandler][SwapOut] block no 7
[Info][PageTableEntry][do_lock] iorb IORB(Id(134),Device(0),Page(7:1/18),Diskblock(7),FileWrite,Openfile(0:1/0),Thread(20:1/W1)) this Page(7:1/18)
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(45:1/17)
[PageFaultHandler][do_handlePageFault] thread Thread(9:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(27:1/12)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(12) Page(27:1/12)Thread(3:1/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(19:1/null) setframe Frame(12)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(135),Device(0),Page(19:1/12),Diskblock(19),FileRead,Openfile(0:1/0),Thread(3:1/W1)) this Page(19:1/12)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(3:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(3:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(12)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 9671 offset = 455 page no = 9 Thread(4:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(4:1/RU) 21 Page(9:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(17) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(9:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(45:1/17)
[PageFaultHandler][do_handlePageFault] page Page(9:1/null) setframe Frame(17)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(136),Device(0),Page(9:1/17),Diskblock(9),FileRead,Openfile(0:1/0),Thread(4:1/W1)) this Page(9:1/17)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(4:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(4:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 10145 offset = 929 page no = 9 Thread(2:1/RU)
[MMU][do_refer] address = 16317 offset = 957 page no = 15 Thread(5:1/RU)
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(25:2/16)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(16) Page(25:2/16)Thread(11:2/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(5:2/null) setframe Frame(16)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(137),Device(0),Page(5:2/16),Diskblock(69),FileRead,Openfile(4:2/0),Thread(11:2/W1)) this Page(5:2/16)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(11:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(11:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(5:1/20)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(20) Page(5:1/20)Thread(6:1/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(48:1/null) setframe Frame(20)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(138),Device(0),Page(48:1/20),Diskblock(48),FileRead,Openfile(0:1/0),Thread(6:1/W1)) this Page(48:1/20)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(6:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(6:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(20)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 40510 offset = 574 page no = 39 Thread(18:1/RU)
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(62:4/8)
[PageFaultHandler][do_handlePageFault] thread Thread(19:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 12876 offset = 588 page no = 12 Thread(5:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(5:1/RU) 22 Page(12:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(8) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(12:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(62:4/8)
[PageFaultHandler][do_handlePageFault] Frame(8) is dirty, do swap-out, Thread(5:1/W0)
[PageFaultHandler][SwapOut] page Page(62:4/8) frame Frame(8)file Openfile(0:1/0)
[PageFaultHandler][SwapOut] block no 62
[Info][PageTableEntry][do_lock] iorb IORB(Id(139),Device(0),Page(62:4/8),Diskblock(62),FileWrite,Openfile(0:1/0),Thread(5:1/W1)) this Page(62:4/8)
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageCleanDaemon][unleash] osp.Memory.PageCleanDaemon@e14d43 execute time 20000
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(24)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(25)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(27)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(26)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(0)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(1)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(24)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(24) Page(59:1/24) isDirty true
[PageFaultHandler][SwapOut] file Openfile(0:1/0)
[PageFaultHandler][SwapOut] block no 59
[Info][PageTableEntry][do_lock] iorb IORB(Id(140),Device(0),Page(59:1/24),Diskblock(59),FileWrite,Openfile(0:1/0),Thread(21:0/W1)) this Page(59:1/24)
[Info][PageTableEntry][do_lock] Get frame Frame(24)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 20020/250000[MMU][do_refer] address = 53520 offset = 272 page no = 52 Thread(18:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(18:1/RU) 22 Page(52:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(21) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(52:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(50:1/21)
[PageFaultHandler][do_handlePageFault] page Page(52:1/null) setframe Frame(21)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(141),Device(0),Page(52:1/21),Diskblock(52),FileRead,Openfile(0:1/0),Thread(18:1/W1)) this Page(52:1/21)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(18:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(18:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(54:4/19)
[PageFaultHandler][do_handlePageFault] thread Thread(17:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(16:1/23)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(23) Page(16:1/23)Thread(14:3/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(6:3/null) setframe Frame(23)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(142),Device(0),Page(6:3/23),Diskblock(134),FileRead,Openfile(10:3/0),Thread(14:3/W1)) this Page(6:3/23)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(14:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(14:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(23)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(143),Device(2),Page(15:1/15),Diskblock(8),FileRead,Openfile(20:1/2),Thread(10:1/W0)) this Page(15:1/15)
[Info][PageTableEntry][do_lock] Get frame Frame(15)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 50415 offset = 239 page no = 49 Thread(19:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(19:4/RU) 21 Page(49:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(19) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(49:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(54:4/19)
[PageFaultHandler][do_handlePageFault] page Page(49:4/null) setframe Frame(19)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(144),Device(0),Page(49:4/19),Diskblock(241),FileRead,Openfile(12:4/0),Thread(19:4/W1)) this Page(49:4/19)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(19:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(19:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(7:1/18)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(18) Page(7:1/18)Thread(20:1/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(13:1/null) setframe Frame(18)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(145),Device(0),Page(13:1/18),Diskblock(13),FileRead,Openfile(0:1/0),Thread(20:1/W1)) this Page(13:1/18)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(20:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(20:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(19:1/12)
[PageFaultHandler][do_handlePageFault] thread Thread(3:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[Info][PageTableEntry][do_lock] iorb IORB(Id(146),Device(2),Page(0:4/null),Diskblock(8),FileRead,Openfile(16:1/2),Thread(17:4/W0)) this Page(0:4/null)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] requrest_thread = Thread(17:4/W0)
[Info][PageTableEntry][do_lock] validating_thread is null, handlePageFault
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(17:4/W0) 23 Page(0:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(28) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(0:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(39:1/28)
[PageFaultHandler][do_handlePageFault] page Page(0:4/null) setframe Frame(28)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(147),Device(0),Page(0:4/28),Diskblock(192),FileRead,Openfile(12:4/0),Thread(17:4/W2)) this Page(0:4/28)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(17:4/W2)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(17:4/W2)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(9:1/17)
[PageFaultHandler][do_handlePageFault] thread Thread(4:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(5:2/16)
[PageFaultHandler][do_handlePageFault] thread Thread(11:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(48:1/20)
[PageFaultHandler][do_handlePageFault] thread Thread(6:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 42623 offset = 639 page no = 41 Thread(2:1/RU)
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(62:4/8)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(8) Page(62:4/8)Thread(5:1/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(12:1/null) setframe Frame(8)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(148),Device(0),Page(12:1/8),Diskblock(12),FileRead,Openfile(0:1/0),Thread(5:1/W1)) this Page(12:1/8)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(5:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(5:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(59:1/24)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(24) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(25)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(25) Page(36:1/25) isDirty true
[PageFaultHandler][SwapOut] file Openfile(0:1/0)
[PageFaultHandler][SwapOut] block no 36
[Info][PageTableEntry][do_lock] iorb IORB(Id(149),Device(0),Page(36:1/25),Diskblock(36),FileWrite,Openfile(0:1/0),Thread(21:0/W1)) this Page(36:1/25)
[Info][PageTableEntry][do_lock] Get frame Frame(25)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(15:1/15)
[PageTableEntry][do_unlock] this Page(52:1/21)
[PageFaultHandler][do_handlePageFault] thread Thread(18:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[Info][PageTableEntry][do_lock] iorb IORB(Id(150),Device(2),Page(9:1/17),Diskblock(6),FileRead,Openfile(16:1/2),Thread(3:1/W0)) this Page(9:1/17)
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(6:3/23)
[PageFaultHandler][do_handlePageFault] thread Thread(14:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 9033 offset = 841 page no = 8 Thread(4:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(4:1/RU) 22 Page(8:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(16) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(8:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(5:2/16)
[PageFaultHandler][do_handlePageFault] Frame(16) is dirty, do swap-out, Thread(4:1/W0)
[PageFaultHandler][SwapOut] page Page(5:2/16) frame Frame(16)file Openfile(0:1/0)
[PageFaultHandler][SwapOut] block no 5
[Info][PageTableEntry][do_lock] iorb IORB(Id(151),Device(0),Page(5:2/16),Diskblock(5),FileWrite,Openfile(0:1/0),Thread(4:1/W1)) this Page(5:2/16)
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 21001/250000[PageTableEntry][do_unlock] this Page(49:4/19)
[PageFaultHandler][do_handlePageFault] thread Thread(19:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(13:1/18)
[PageFaultHandler][do_handlePageFault] thread Thread(20:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(9:1/17)
[MMU][do_refer] address = 38286 offset = 398 page no = 37 Thread(6:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(6:1/RU) 21 Page(37:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(21) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(37:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(52:1/21)
[PageFaultHandler][do_handlePageFault] Frame(21) is dirty, do swap-out, Thread(6:1/W0)
[PageFaultHandler][SwapOut] page Page(52:1/21) frame Frame(21)file Openfile(0:1/0)
[PageFaultHandler][SwapOut] block no 52
[Info][PageTableEntry][do_lock] iorb IORB(Id(152),Device(0),Page(52:1/21),Diskblock(52),FileWrite,Openfile(0:1/0),Thread(6:1/W1)) this Page(52:1/21)
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(0:4/28)
[PageFaultHandler][do_handlePageFault] thread Thread(17:4/W1) status = 31
 Thread do_handlePageFault Success
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(12:1/8)
[PageFaultHandler][do_handlePageFault] thread Thread(5:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 51309 offset = 109 page no = 50 Thread(10:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(10:1/RU) 21 Page(50:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(4) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(50:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(35:1/4)
[PageFaultHandler][do_handlePageFault] Frame(4) is dirty, do swap-out, Thread(10:1/W0)
[PageFaultHandler][SwapOut] page Page(35:1/4) frame Frame(4)file Openfile(0:1/0)
[PageFaultHandler][SwapOut] block no 35
[Info][PageTableEntry][do_lock] iorb IORB(Id(153),Device(0),Page(35:1/4),Diskblock(35),FileWrite,Openfile(0:1/0),Thread(10:1/W1)) this Page(35:1/4)
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(36:1/25)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(25) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(27)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(27) Page(41:1/27) isDirty true
[PageFaultHandler][SwapOut] file Openfile(0:1/0)
[PageFaultHandler][SwapOut] block no 41
[Info][PageTableEntry][do_lock] iorb IORB(Id(154),Device(0),Page(41:1/27),Diskblock(41),FileWrite,Openfile(0:1/0),Thread(21:0/W1)) this Page(41:1/27)
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(5:2/16)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(16) Page(5:2/16)Thread(4:1/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(8:1/null) setframe Frame(16)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(155),Device(0),Page(8:1/16),Diskblock(8),FileRead,Openfile(0:1/0),Thread(4:1/W1)) this Page(8:1/16)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(4:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(4:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(156),Device(2),Page(9:1/17),Diskblock(11),FileWrite,Openfile(20:1/2),Thread(3:1/W0)) this Page(9:1/17)
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(52:1/21)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(21) Page(52:1/21)Thread(6:1/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(37:1/null) setframe Frame(21)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(157),Device(0),Page(37:1/21),Diskblock(37),FileRead,Openfile(0:1/0),Thread(6:1/W1)) this Page(37:1/21)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(6:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(6:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(35:1/4)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(4) Page(35:1/4)Thread(10:1/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(50:1/null) setframe Frame(4)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(158),Device(0),Page(50:1/4),Diskblock(50),FileRead,Openfile(0:1/0),Thread(10:1/W1)) this Page(50:1/4)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(10:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(10:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(41:1/27)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(27) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(26)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(26) Page(44:1/26) isDirty true
[PageFaultHandler][SwapOut] file Openfile(0:1/0)
[PageFaultHandler][SwapOut] block no 44
[Info][PageTableEntry][do_lock] iorb IORB(Id(159),Device(0),Page(44:1/26),Diskblock(44),FileWrite,Openfile(0:1/0),Thread(21:0/W1)) this Page(44:1/26)
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(0:4/28)
Simulation progress: 22009/250000[PageTableEntry][do_unlock] this Page(8:1/16)
[PageFaultHandler][do_handlePageFault] thread Thread(4:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(37:1/21)
[PageFaultHandler][do_handlePageFault] thread Thread(6:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(50:1/4)
[PageFaultHandler][do_handlePageFault] thread Thread(10:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(44:1/26)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(26) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(0)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(0) Page(51:1/0) isDirty true
[PageFaultHandler][SwapOut] file Openfile(0:1/0)
[PageFaultHandler][SwapOut] block no 51
[Info][PageTableEntry][do_lock] iorb IORB(Id(160),Device(0),Page(51:1/0),Diskblock(51),FileWrite,Openfile(0:1/0),Thread(21:0/W1)) this Page(51:1/0)
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 6003 offset = 883 page no = 5 Thread(9:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(9:1/RU) 22 Page(5:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(16) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(5:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(8:1/16)
[PageFaultHandler][do_handlePageFault] Frame(16) is dirty, do swap-out, Thread(9:1/W0)
[PageFaultHandler][SwapOut] page Page(8:1/16) frame Frame(16)file Openfile(0:1/0)
[PageFaultHandler][SwapOut] block no 8
[Info][PageTableEntry][do_lock] iorb IORB(Id(161),Device(0),Page(8:1/16),Diskblock(8),FileWrite,Openfile(0:1/0),Thread(9:1/W1)) this Page(8:1/16)
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(51:1/0)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(0) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(1)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(1) Page(29:4/1) isDirty true
[PageFaultHandler][SwapOut] file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 29
[Info][PageTableEntry][do_lock] iorb IORB(Id(162),Device(0),Page(29:4/1),Diskblock(221),FileWrite,Openfile(12:4/0),Thread(21:0/W1)) this Page(29:4/1)
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 52336 offset = 112 page no = 51 Thread(5:1/RU)
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(8:1/16)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(16) Page(8:1/16)Thread(9:1/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(5:1/null) setframe Frame(16)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(163),Device(0),Page(5:1/16),Diskblock(5),FileRead,Openfile(0:1/0),Thread(9:1/W1)) this Page(5:1/16)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(9:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(9:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 47473 offset = 369 page no = 46 Thread(4:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(4:1/RU) 22 Page(46:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(26) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(46:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(44:1/26)
[PageFaultHandler][do_handlePageFault] page Page(46:1/null) setframe Frame(26)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(164),Device(0),Page(46:1/26),Diskblock(46),FileRead,Openfile(0:1/0),Thread(4:1/W1)) this Page(46:1/26)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(4:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(4:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(9:1/17)
[PageTableEntry][do_unlock] this Page(29:4/1)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(1) finish
[MMU][do_refer] address = 9733 offset = 517 page no = 9 Thread(10:1/RU)
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 27259 offset = 635 page no = 26 Thread(10:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(10:1/RU) 21 Page(26:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(4) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(26:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(50:1/4)
[PageFaultHandler][do_handlePageFault] page Page(26:1/null) setframe Frame(4)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(165),Device(0),Page(26:1/4),Diskblock(26),FileRead,Openfile(0:1/0),Thread(10:1/W1)) this Page(26:1/4)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(10:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(10:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(5:1/16)
[PageFaultHandler][do_handlePageFault] thread Thread(9:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 63576 offset = 88 page no = 62 Thread(14:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(14:3/RU) 22 Page(62:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(5) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(62:3/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(34:1/5)
[PageFaultHandler][do_handlePageFault] page Page(62:3/null) setframe Frame(5)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(166),Device(0),Page(62:3/5),Diskblock(190),FileRead,Openfile(10:3/0),Thread(14:3/W1)) this Page(62:3/5)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(14:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(14:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(46:1/26)
[PageFaultHandler][do_handlePageFault] thread Thread(4:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 14226 offset = 914 page no = 13 Thread(5:1/RU)
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(26:1/4)
[PageFaultHandler][do_handlePageFault] thread Thread(10:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 60897 offset = 481 page no = 59 Thread(3:1/RU)
[MMU][do_refer] Do memory read.
Simulation progress: 23074/250000[Info][PageTableEntry][do_lock] iorb IORB(Id(167),Device(2),Page(0:4/28),Diskblock(13),FileWrite,Openfile(16:1/2),Thread(19:4/W0)) this Page(0:4/28)
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 14327 offset = 1015 page no = 13 Thread(6:1/RU)
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(62:3/5)
[PageFaultHandler][do_handlePageFault] thread Thread(14:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 43478 offset = 470 page no = 42 Thread(22:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(22:1/RU) 21 Page(42:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(26) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(42:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(46:1/26)
[PageFaultHandler][do_handlePageFault] Frame(26) is dirty, do swap-out, Thread(22:1/W0)
[PageFaultHandler][SwapOut] page Page(46:1/26) frame Frame(26)file Openfile(0:1/0)
[PageFaultHandler][SwapOut] block no 46
[Info][PageTableEntry][do_lock] iorb IORB(Id(168),Device(0),Page(46:1/26),Diskblock(46),FileWrite,Openfile(0:1/0),Thread(22:1/W1)) this Page(46:1/26)
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(46:1/26)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(26) Page(46:1/26)Thread(22:1/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(42:1/null) setframe Frame(26)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(169),Device(0),Page(42:1/26),Diskblock(42),FileRead,Openfile(0:1/0),Thread(22:1/W1)) this Page(42:1/26)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(22:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(22:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 34517 offset = 725 page no = 33 Thread(11:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(11:2/RU) 21 Page(33:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(5) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(33:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(62:3/5)
[PageFaultHandler][do_handlePageFault] Frame(5) is dirty, do swap-out, Thread(11:2/W0)
[PageFaultHandler][SwapOut] page Page(62:3/5) frame Frame(5)file Openfile(4:2/0)
[PageFaultHandler][SwapOut] block no 62
[Info][PageTableEntry][do_lock] iorb IORB(Id(170),Device(0),Page(62:3/5),Diskblock(126),FileWrite,Openfile(4:2/0),Thread(11:2/W1)) this Page(62:3/5)
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(0:4/28)
[PageTableEntry][do_unlock] this Page(42:1/26)
[PageFaultHandler][do_handlePageFault] thread Thread(22:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[Info][PageTableEntry][do_lock] iorb IORB(Id(171),Device(2),Page(5:1/16),Diskblock(8),FileRead,Openfile(16:1/2),Thread(10:1/W0)) this Page(5:1/16)
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(62:3/5)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(5) Page(62:3/5)Thread(11:2/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(33:2/null) setframe Frame(5)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(172),Device(0),Page(33:2/5),Diskblock(97),FileRead,Openfile(4:2/0),Thread(11:2/W1)) this Page(33:2/5)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(11:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(11:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 25663 offset = 63 page no = 25 Thread(3:1/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(3:1/RU) 22 Page(25:1/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(29) Reserved by Task(1/L)
[PageFaultHandler][do_handlePageFault] page Page(25:1/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(43:4/29)
[PageFaultHandler][do_handlePageFault] page Page(25:1/null) setframe Frame(29)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(173),Device(0),Page(25:1/29),Diskblock(25),FileRead,Openfile(0:1/0),Thread(3:1/W1)) this Page(25:1/29)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(3:1/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(3:1/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 29795 offset = 99 page no = 29 Thread(14:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(14:3/RU) 22 Page(29:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(13) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(29:3/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(40:1/13)
[PageFaultHandler][do_handlePageFault] page Page(29:3/null) setframe Frame(13)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(174),Device(0),Page(29:3/13),Diskblock(157),FileRead,Openfile(10:3/0),Thread(14:3/W1)) this Page(29:3/13)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(14:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(14:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(13)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(33:2/5)
[PageFaultHandler][do_handlePageFault] thread Thread(11:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(25:1/29)
[PageFaultHandler][do_handlePageFault] thread Thread(3:1/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTable][do_deallocateMemory] this Pagetable(Task(1/T))
[PageTable][do_deallocateMemory]  page_table_entry Page(5:1/16) frame_table_entry Frame(16)
[PageTable][do_deallocateMemory]  page_table_entry Page(9:1/17) frame_table_entry Frame(17)
[PageTable][do_deallocateMemory]  page_table_entry Page(12:1/8) frame_table_entry Frame(8)
[PageTable][do_deallocateMemory]  page_table_entry Page(13:1/18) frame_table_entry Frame(18)
[PageTable][do_deallocateMemory]  page_table_entry Page(15:1/15) frame_table_entry Frame(15)
[PageTable][do_deallocateMemory]  page_table_entry Page(18:1/9) frame_table_entry Frame(9)
[PageTable][do_deallocateMemory]  page_table_entry Page(19:1/12) frame_table_entry Frame(12)
[PageTable][do_deallocateMemory]  page_table_entry Page(25:1/29) frame_table_entry Frame(29)
[PageTable][do_deallocateMemory]  page_table_entry Page(26:1/4) frame_table_entry Frame(4)
[PageTable][do_deallocateMemory]  page_table_entry Page(30:1/11) frame_table_entry Frame(11)
[PageTable][do_deallocateMemory]  page_table_entry Page(32:1/7) frame_table_entry Frame(7)
[PageTable][do_deallocateMemory]  page_table_entry Page(36:1/25) frame_table_entry Frame(25)
[PageTable][do_deallocateMemory]  page_table_entry Page(37:1/21) frame_table_entry Frame(21)
[PageTable][do_deallocateMemory]  page_table_entry Page(41:1/27) frame_table_entry Frame(27)
[PageTable][do_deallocateMemory]  page_table_entry Page(42:1/26) frame_table_entry Frame(26)
[PageTable][do_deallocateMemory]  page_table_entry Page(43:1/3) frame_table_entry Frame(3)
[PageTable][do_deallocateMemory]  page_table_entry Page(48:1/20) frame_table_entry Frame(20)
[PageTable][do_deallocateMemory]  page_table_entry Page(49:1/6) frame_table_entry Frame(6)
[PageTable][do_deallocateMemory]  page_table_entry Page(51:1/0) frame_table_entry Frame(0)
[PageTable][do_deallocateMemory]  page_table_entry Page(56:1/2) frame_table_entry Frame(2)
[PageTable][do_deallocateMemory]  page_table_entry Page(59:1/24) frame_table_entry Frame(24)
Simulation progress: 24040/250000[PageTableEntry][do_unlock] this Page(29:3/13)
[PageFaultHandler][do_handlePageFault] thread Thread(14:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(5:1/16)
[MMU][do_refer] address = 16742 offset = 358 page no = 16 Thread(23:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(23:4/RU) 22 Page(16:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(5) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(16:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(33:2/5)
[PageFaultHandler][do_handlePageFault] page Page(16:4/null) setframe Frame(5)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(175),Device(0),Page(16:4/5),Diskblock(208),FileRead,Openfile(12:4/0),Thread(23:4/W1)) this Page(16:4/5)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(23:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(23:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 1224 offset = 200 page no = 1 Thread(19:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(19:4/RU) 21 Page(1:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(9) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(1:4/null)
[PageFaultHandler][do_handlePageFault] page Page(1:4/null) setframe Frame(9)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(176),Device(0),Page(1:4/9),Diskblock(193),FileRead,Openfile(12:4/0),Thread(19:4/W1)) this Page(1:4/9)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(19:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(19:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 33147 offset = 379 page no = 32 Thread(11:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(11:2/RU) 22 Page(32:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(15) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(32:2/null)
[PageFaultHandler][do_handlePageFault] page Page(32:2/null) setframe Frame(15)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(177),Device(0),Page(32:2/15),Diskblock(96),FileRead,Openfile(4:2/0),Thread(11:2/W1)) this Page(32:2/15)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(11:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(11:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(15)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(16:4/5)
[PageFaultHandler][do_handlePageFault] thread Thread(23:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 54759 offset = 487 page no = 53 Thread(14:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(14:3/RU) 22 Page(53:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(11) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(53:3/null)
[PageFaultHandler][do_handlePageFault] page Page(53:3/null) setframe Frame(11)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(178),Device(0),Page(53:3/11),Diskblock(181),FileRead,Openfile(10:3/0),Thread(14:3/W1)) this Page(53:3/11)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(14:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(14:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(11)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(1:4/9)
[PageFaultHandler][do_handlePageFault] thread Thread(19:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 25007 offset = 431 page no = 24 Thread(17:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(17:4/RU) 22 Page(24:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(9) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(24:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(1:4/9)
[PageFaultHandler][do_handlePageFault] page Page(24:4/null) setframe Frame(9)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(179),Device(0),Page(24:4/9),Diskblock(216),FileRead,Openfile(12:4/0),Thread(17:4/W1)) this Page(24:4/9)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(17:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(17:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(32:2/15)
[PageFaultHandler][do_handlePageFault] thread Thread(11:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 39612 offset = 700 page no = 38 Thread(24:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(24:4/RU) 22 Page(38:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(23) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(38:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(6:3/23)
[PageFaultHandler][do_handlePageFault] page Page(38:4/null) setframe Frame(23)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(180),Device(0),Page(38:4/23),Diskblock(230),FileRead,Openfile(12:4/0),Thread(24:4/W1)) this Page(38:4/23)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(24:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(24:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(23)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 52866 offset = 642 page no = 51 Thread(25:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(25:4/RU) 21 Page(51:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(18) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(51:4/null)
[PageFaultHandler][do_handlePageFault] page Page(51:4/null) setframe Frame(18)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(181),Device(0),Page(51:4/18),Diskblock(243),FileRead,Openfile(12:4/0),Thread(25:4/W1)) this Page(51:4/18)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(25:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(25:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(53:3/11)
[PageFaultHandler][do_handlePageFault] thread Thread(14:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
Simulation progress: 25003/250000[PageTableEntry][do_unlock] this Page(24:4/9)
[PageFaultHandler][do_handlePageFault] thread Thread(17:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(38:4/23)
[PageFaultHandler][do_handlePageFault] thread Thread(24:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 31278 offset = 558 page no = 30 Thread(11:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(11:2/RU) 22 Page(30:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(11) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(30:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(53:3/11)
[PageFaultHandler][do_handlePageFault] Frame(11) is dirty, do swap-out, Thread(11:2/W0)
[PageFaultHandler][SwapOut] page Page(53:3/11) frame Frame(11)file Openfile(4:2/0)
[PageFaultHandler][SwapOut] block no 53
[Info][PageTableEntry][do_lock] iorb IORB(Id(182),Device(0),Page(53:3/11),Diskblock(117),FileWrite,Openfile(4:2/0),Thread(11:2/W1)) this Page(53:3/11)
[Info][PageTableEntry][do_lock] Get frame Frame(11)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 37910 offset = 22 page no = 37 Thread(17:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(17:4/RU) 22 Page(37:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(22) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(37:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(13:2/22)
[PageFaultHandler][do_handlePageFault] page Page(37:4/null) setframe Frame(22)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(183),Device(0),Page(37:4/22),Diskblock(229),FileRead,Openfile(12:4/0),Thread(17:4/W1)) this Page(37:4/22)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(17:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(17:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(22)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(51:4/18)
[PageFaultHandler][do_handlePageFault] thread Thread(25:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(53:3/11)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(11) Page(53:3/11)Thread(11:2/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(30:2/null) setframe Frame(11)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(184),Device(0),Page(30:2/11),Diskblock(94),FileRead,Openfile(4:2/0),Thread(11:2/W1)) this Page(30:2/11)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(11:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(11:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(11)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(37:4/22)
[PageFaultHandler][do_handlePageFault] thread Thread(17:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(30:2/11)
[PageFaultHandler][do_handlePageFault] thread Thread(11:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 40598 offset = 662 page no = 39 Thread(25:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(25:4/RU) 22 Page(39:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(18) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(39:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(51:4/18)
[PageFaultHandler][do_handlePageFault] page Page(39:4/null) setframe Frame(18)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(185),Device(0),Page(39:4/18),Diskblock(231),FileRead,Openfile(12:4/0),Thread(25:4/W1)) this Page(39:4/18)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(25:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(25:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 26040/250000[PageTableEntry][do_unlock] this Page(39:4/18)
[PageFaultHandler][do_handlePageFault] thread Thread(25:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 28152 offset = 504 page no = 27 Thread(27:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(27:2/RU) 21 Page(27:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(19) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(27:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(49:4/19)
[PageFaultHandler][do_handlePageFault] page Page(27:2/null) setframe Frame(19)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(186),Device(0),Page(27:2/19),Diskblock(91),FileRead,Openfile(4:2/0),Thread(27:2/W1)) this Page(27:2/19)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(27:2/19)
[PageFaultHandler][do_handlePageFault] thread Thread(27:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 58634 offset = 266 page no = 57 Thread(29:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(29:4/RU) 21 Page(57:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(24) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(57:4/null)
[PageFaultHandler][do_handlePageFault] page Page(57:4/null) setframe Frame(24)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(187),Device(0),Page(57:4/24),Diskblock(249),FileRead,Openfile(12:4/0),Thread(29:4/W1)) this Page(57:4/24)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(29:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(29:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(24)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 41360 offset = 400 page no = 40 Thread(14:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(14:3/RU) 21 Page(40:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(27) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(40:3/null)
[PageFaultHandler][do_handlePageFault] page Page(40:3/null) setframe Frame(27)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(188),Device(0),Page(40:3/27),Diskblock(168),FileRead,Openfile(10:3/0),Thread(14:3/W1)) this Page(40:3/27)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(14:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(14:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 19652 offset = 196 page no = 19 Thread(25:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(25:4/RU) 22 Page(19:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(28) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(19:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(0:4/28)
[PageFaultHandler][do_handlePageFault] Frame(28) is dirty, do swap-out, Thread(25:4/W0)
[PageFaultHandler][SwapOut] page Page(0:4/28) frame Frame(28)file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(189),Device(0),Page(0:4/28),Diskblock(192),FileWrite,Openfile(12:4/0),Thread(25:4/W1)) this Page(0:4/28)
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(57:4/24)
[PageFaultHandler][do_handlePageFault] thread Thread(29:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 54478 offset = 206 page no = 53 Thread(30:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(30:4/RU) 22 Page(53:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(0) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(53:4/null)
[PageFaultHandler][do_handlePageFault] page Page(53:4/null) setframe Frame(0)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(190),Device(0),Page(53:4/0),Diskblock(245),FileRead,Openfile(12:4/0),Thread(30:4/W1)) this Page(53:4/0)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(30:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(30:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(40:3/27)
[PageFaultHandler][do_handlePageFault] thread Thread(14:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(0:4/28)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(28) Page(0:4/28)Thread(25:4/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(19:4/null) setframe Frame(28)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(191),Device(0),Page(19:4/28),Diskblock(211),FileRead,Openfile(12:4/0),Thread(25:4/W1)) this Page(19:4/28)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(25:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(25:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 59995 offset = 603 page no = 58 Thread(26:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(26:2/RU) 21 Page(58:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(27) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(58:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(40:3/27)
[PageFaultHandler][do_handlePageFault] page Page(58:2/null) setframe Frame(27)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(192),Device(0),Page(58:2/27),Diskblock(122),FileRead,Openfile(4:2/0),Thread(26:2/W1)) this Page(58:2/27)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(26:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(26:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 27020/250000[MMU][do_refer] address = 29062 offset = 390 page no = 28 Thread(31:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(31:4/RU) 22 Page(28:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(25) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(28:4/null)
[PageFaultHandler][do_handlePageFault] page Page(28:4/null) setframe Frame(25)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(193),Device(0),Page(28:4/25),Diskblock(220),FileRead,Openfile(12:4/0),Thread(31:4/W1)) this Page(28:4/25)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(31:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(31:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(25)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(53:4/0)
[PageFaultHandler][do_handlePageFault] thread Thread(30:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(19:4/28)
[PageFaultHandler][do_handlePageFault] thread Thread(25:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 383 offset = 383 page no = 0 Thread(24:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(24:4/RU) 22 Page(0:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(0) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(0:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(53:4/0)
[PageFaultHandler][do_handlePageFault] Frame(0) is dirty, do swap-out, Thread(24:4/W0)
[PageFaultHandler][SwapOut] page Page(53:4/0) frame Frame(0)file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 53
[Info][PageTableEntry][do_lock] iorb IORB(Id(194),Device(0),Page(53:4/0),Diskblock(245),FileWrite,Openfile(12:4/0),Thread(24:4/W1)) this Page(53:4/0)
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(58:2/27)
[PageFaultHandler][do_handlePageFault] thread Thread(26:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 23061 offset = 533 page no = 22 Thread(27:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(27:2/RU) 21 Page(22:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(3) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(22:2/null)
[PageFaultHandler][do_handlePageFault] page Page(22:2/null) setframe Frame(3)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(195),Device(0),Page(22:2/3),Diskblock(86),FileRead,Openfile(4:2/0),Thread(27:2/W1)) this Page(22:2/3)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(3)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 54689 offset = 417 page no = 53 Thread(11:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(11:2/RU) 21 Page(53:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(8) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(53:2/null)
[PageFaultHandler][do_handlePageFault] page Page(53:2/null) setframe Frame(8)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(196),Device(0),Page(53:2/8),Diskblock(117),FileRead,Openfile(4:2/0),Thread(11:2/W1)) this Page(53:2/8)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(11:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(11:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 7737 offset = 569 page no = 7 Thread(30:4/RU)
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(28:4/25)
[PageFaultHandler][do_handlePageFault] thread Thread(31:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 11931 offset = 667 page no = 11 Thread(19:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(19:4/RU) 22 Page(11:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(21) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(11:4/null)
[PageFaultHandler][do_handlePageFault] page Page(11:4/null) setframe Frame(21)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(197),Device(0),Page(11:4/21),Diskblock(203),FileRead,Openfile(12:4/0),Thread(19:4/W1)) this Page(11:4/21)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(19:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(19:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 29406 offset = 734 page no = 28 Thread(29:4/RU)
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(53:4/0)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(0) Page(53:4/0)Thread(24:4/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(0:4/null) setframe Frame(0)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(198),Device(0),Page(0:4/0),Diskblock(192),FileRead,Openfile(12:4/0),Thread(24:4/W1)) this Page(0:4/0)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(24:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(24:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 8494 offset = 302 page no = 8 Thread(28:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(28:4/RU) 21 Page(8:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(1) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(8:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(29:4/1)
[PageFaultHandler][do_handlePageFault] page Page(8:4/null) setframe Frame(1)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(199),Device(0),Page(8:4/1),Diskblock(200),FileRead,Openfile(12:4/0),Thread(28:4/W1)) this Page(8:4/1)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(28:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(28:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(22:2/3)
[PageFaultHandler][do_handlePageFault] thread Thread(27:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 13453 offset = 141 page no = 13 Thread(14:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(14:3/RU) 21 Page(13:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(6) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(13:3/null)
[PageFaultHandler][do_handlePageFault] page Page(13:3/null) setframe Frame(6)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(200),Device(0),Page(13:3/6),Diskblock(141),FileRead,Openfile(10:3/0),Thread(14:3/W1)) this Page(13:3/6)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(14:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(14:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(6)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(53:2/8)
[PageFaultHandler][do_handlePageFault] thread Thread(11:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
Simulation progress: 28068/250000[MMU][do_refer] address = 61064 offset = 648 page no = 59 Thread(31:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(31:4/RU) 21 Page(59:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(16) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(59:4/null)
[PageFaultHandler][do_handlePageFault] page Page(59:4/null) setframe Frame(16)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(201),Device(0),Page(59:4/16),Diskblock(251),FileRead,Openfile(12:4/0),Thread(31:4/W1)) this Page(59:4/16)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(31:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(31:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(11:4/21)
[PageFaultHandler][do_handlePageFault] thread Thread(19:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(0:4/0)
[PageFaultHandler][do_handlePageFault] thread Thread(24:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(8:4/1)
[PageFaultHandler][do_handlePageFault] thread Thread(28:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(13:3/6)
[PageFaultHandler][do_handlePageFault] thread Thread(14:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 31127 offset = 407 page no = 30 Thread(17:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(17:4/RU) 22 Page(30:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(0) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(30:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(0:4/0)
[PageFaultHandler][do_handlePageFault] Frame(0) is dirty, do swap-out, Thread(17:4/W0)
[PageFaultHandler][SwapOut] page Page(0:4/0) frame Frame(0)file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(202),Device(0),Page(0:4/0),Diskblock(192),FileWrite,Openfile(12:4/0),Thread(17:4/W1)) this Page(0:4/0)
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(59:4/16)
[PageFaultHandler][do_handlePageFault] thread Thread(31:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(0:4/0)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(0) Page(0:4/0)Thread(17:4/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(30:4/null) setframe Frame(0)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(203),Device(0),Page(30:4/0),Diskblock(222),FileRead,Openfile(12:4/0),Thread(17:4/W1)) this Page(30:4/0)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(17:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(17:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 29036/250000[Info][PageTableEntry][do_lock] iorb IORB(Id(204),Device(1),Page(2:4/14),Diskblock(5),FileRead,Openfile(26:4/1),Thread(24:4/W0)) this Page(2:4/14)
[Info][PageTableEntry][do_lock] Get frame Frame(14)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(2:4/14)
[PageTableEntry][do_unlock] this Page(30:4/0)
[PageFaultHandler][do_handlePageFault] thread Thread(17:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 11526 offset = 262 page no = 11 Thread(28:4/RU)
[MMU][do_refer] Do memory read.
[Info][PageTableEntry][do_lock] iorb IORB(Id(205),Device(1),Page(2:4/14),Diskblock(9),FileWrite,Openfile(26:4/1),Thread(28:4/W0)) this Page(2:4/14)
[Info][PageTableEntry][do_lock] Get frame Frame(14)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 62088 offset = 648 page no = 60 Thread(26:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(26:2/RU) 22 Page(60:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(16) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(60:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(59:4/16)
[PageFaultHandler][do_handlePageFault] page Page(60:2/null) setframe Frame(16)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(206),Device(0),Page(60:2/16),Diskblock(124),FileRead,Openfile(4:2/0),Thread(26:2/W1)) this Page(60:2/16)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(26:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(26:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(2:4/14)
[PageTableEntry][do_unlock] this Page(60:2/16)
[PageFaultHandler][do_handlePageFault] thread Thread(26:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 3191 offset = 119 page no = 3 Thread(19:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(19:4/RU) 21 Page(3:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(4) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(3:4/null)
[PageFaultHandler][do_handlePageFault] page Page(3:4/null) setframe Frame(4)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(207),Device(0),Page(3:4/4),Diskblock(195),FileRead,Openfile(12:4/0),Thread(19:4/W1)) this Page(3:4/4)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(19:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(19:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 7600 offset = 432 page no = 7 Thread(30:4/RU)
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 58424 offset = 56 page no = 57 Thread(24:4/RU)
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(3:4/4)
[PageFaultHandler][do_handlePageFault] thread Thread(19:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 7577 offset = 409 page no = 7 Thread(25:4/RU)
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 37432 offset = 568 page no = 36 Thread(27:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(27:2/RU) 21 Page(36:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(29) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(36:2/null)
[PageFaultHandler][do_handlePageFault] page Page(36:2/null) setframe Frame(29)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(208),Device(0),Page(36:2/29),Diskblock(100),FileRead,Openfile(4:2/0),Thread(27:2/W1)) this Page(36:2/29)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(36:2/29)
[PageFaultHandler][do_handlePageFault] thread Thread(27:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 44408 offset = 376 page no = 43 Thread(23:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(23:4/RU) 21 Page(43:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(13) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(43:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(29:3/13)
[PageFaultHandler][do_handlePageFault] Frame(13) is dirty, do swap-out, Thread(23:4/W0)
[PageFaultHandler][SwapOut] page Page(29:3/13) frame Frame(13)file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 29
[Info][PageTableEntry][do_lock] iorb IORB(Id(209),Device(0),Page(29:3/13),Diskblock(221),FileWrite,Openfile(12:4/0),Thread(23:4/W1)) this Page(29:3/13)
[Info][PageTableEntry][do_lock] Get frame Frame(13)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 50629 offset = 453 page no = 49 Thread(28:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(28:4/RU) 21 Page(49:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(14) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(49:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(2:4/14)
[PageFaultHandler][do_handlePageFault] Frame(14) is dirty, do swap-out, Thread(28:4/W0)
[PageFaultHandler][SwapOut] page Page(2:4/14) frame Frame(14)file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 2
[Info][PageTableEntry][do_lock] iorb IORB(Id(210),Device(0),Page(2:4/14),Diskblock(194),FileWrite,Openfile(12:4/0),Thread(28:4/W1)) this Page(2:4/14)
[Info][PageTableEntry][do_lock] Get frame Frame(14)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(29:3/13)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(13) Page(29:3/13)Thread(23:4/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(43:4/null) setframe Frame(13)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(211),Device(0),Page(43:4/13),Diskblock(235),FileRead,Openfile(12:4/0),Thread(23:4/W1)) this Page(43:4/13)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(23:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(23:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(13)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 30069/250000[PageTableEntry][do_unlock] this Page(2:4/14)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(14) Page(2:4/14)Thread(28:4/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(49:4/null) setframe Frame(14)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(212),Device(0),Page(49:4/14),Diskblock(241),FileRead,Openfile(12:4/0),Thread(28:4/W1)) this Page(49:4/14)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(28:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(28:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(14)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(43:4/13)
[PageFaultHandler][do_handlePageFault] thread Thread(23:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 27055 offset = 431 page no = 26 Thread(24:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(24:4/RU) 22 Page(26:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(5) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(26:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(16:4/5)
[PageFaultHandler][do_handlePageFault] Frame(5) is dirty, do swap-out, Thread(24:4/W0)
[PageFaultHandler][SwapOut] page Page(16:4/5) frame Frame(5)file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 16
[Info][PageTableEntry][do_lock] iorb IORB(Id(213),Device(0),Page(16:4/5),Diskblock(208),FileWrite,Openfile(12:4/0),Thread(24:4/W1)) this Page(16:4/5)
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 13951 offset = 639 page no = 13 Thread(27:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(27:2/RU) 22 Page(13:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(15) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(13:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(32:2/15)
[PageFaultHandler][do_handlePageFault] Frame(15) is dirty, do swap-out, Thread(27:2/W0)
[PageFaultHandler][SwapOut] page Page(32:2/15) frame Frame(15)file Openfile(4:2/0)
[PageFaultHandler][SwapOut] block no 32
[Info][PageTableEntry][do_lock] iorb IORB(Id(214),Device(0),Page(32:2/15),Diskblock(96),FileWrite,Openfile(4:2/0),Thread(27:2/W1)) this Page(32:2/15)
[Info][PageTableEntry][do_lock] Get frame Frame(15)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 56944 offset = 624 page no = 55 Thread(17:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(17:4/RU) 22 Page(55:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(20) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(55:4/null)
[PageFaultHandler][do_handlePageFault] page Page(55:4/null) setframe Frame(20)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(215),Device(0),Page(55:4/20),Diskblock(247),FileRead,Openfile(12:4/0),Thread(17:4/W1)) this Page(55:4/20)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(17:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(17:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(20)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(49:4/14)
[PageFaultHandler][do_handlePageFault] thread Thread(28:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 64465 offset = 977 page no = 62 Thread(26:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(26:2/RU) 22 Page(62:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(14) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(62:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(49:4/14)
[PageFaultHandler][do_handlePageFault] page Page(62:2/null) setframe Frame(14)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(216),Device(0),Page(62:2/14),Diskblock(126),FileRead,Openfile(4:2/0),Thread(26:2/W1)) this Page(62:2/14)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(26:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(26:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(14)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 22391 offset = 887 page no = 21 Thread(11:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(11:2/RU) 22 Page(21:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(23) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(21:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(38:4/23)
[PageFaultHandler][do_handlePageFault] Frame(23) is dirty, do swap-out, Thread(11:2/W0)
[PageFaultHandler][SwapOut] page Page(38:4/23) frame Frame(23)file Openfile(4:2/0)
[PageFaultHandler][SwapOut] block no 38
[Info][PageTableEntry][do_lock] iorb IORB(Id(217),Device(0),Page(38:4/23),Diskblock(102),FileWrite,Openfile(4:2/0),Thread(11:2/W1)) this Page(38:4/23)
[Info][PageTableEntry][do_lock] Get frame Frame(23)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(16:4/5)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(5) Page(16:4/5)Thread(24:4/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(26:4/null) setframe Frame(5)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(218),Device(0),Page(26:4/5),Diskblock(218),FileRead,Openfile(12:4/0),Thread(24:4/W1)) this Page(26:4/5)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(24:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(24:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(32:2/15)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(15) Page(32:2/15)Thread(27:2/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(13:2/null) setframe Frame(15)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(219),Device(0),Page(13:2/15),Diskblock(77),FileRead,Openfile(4:2/0),Thread(27:2/W1)) this Page(13:2/15)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(15)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 36196 offset = 356 page no = 35 Thread(28:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(28:4/RU) 21 Page(35:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(9) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(35:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(24:4/9)
[PageFaultHandler][do_handlePageFault] Frame(9) is dirty, do swap-out, Thread(28:4/W0)
[PageFaultHandler][SwapOut] page Page(24:4/9) frame Frame(9)file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 24
[Info][PageTableEntry][do_lock] iorb IORB(Id(220),Device(0),Page(24:4/9),Diskblock(216),FileWrite,Openfile(12:4/0),Thread(28:4/W1)) this Page(24:4/9)
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 65527 offset = 1015 page no = 63 Thread(14:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(14:3/RU) 22 Page(63:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(12) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(63:3/null)
[PageFaultHandler][do_handlePageFault] page Page(63:3/null) setframe Frame(12)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(221),Device(0),Page(63:3/12),Diskblock(191),FileRead,Openfile(10:3/0),Thread(14:3/W1)) this Page(63:3/12)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(14:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(14:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(12)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(222),Device(2),Page(3:4/4),Diskblock(9),FileRead,Openfile(28:4/2),Thread(23:4/W0)) this Page(3:4/4)
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(55:4/20)
[PageFaultHandler][do_handlePageFault] thread Thread(17:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(62:2/14)
[PageFaultHandler][do_handlePageFault] thread Thread(26:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
Simulation progress: 31031/250000[PageTableEntry][do_unlock] this Page(38:4/23)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(23) Page(38:4/23)Thread(11:2/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(21:2/null) setframe Frame(23)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(223),Device(0),Page(21:2/23),Diskblock(85),FileRead,Openfile(4:2/0),Thread(11:2/W1)) this Page(21:2/23)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(11:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(11:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(23)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 36799 offset = 959 page no = 35 Thread(26:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(26:2/RU) 21 Page(35:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(20) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(35:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(55:4/20)
[PageFaultHandler][do_handlePageFault] Frame(20) is dirty, do swap-out, Thread(26:2/W0)
[PageFaultHandler][SwapOut] page Page(55:4/20) frame Frame(20)file Openfile(4:2/0)
[PageFaultHandler][SwapOut] block no 55
[Info][PageTableEntry][do_lock] iorb IORB(Id(224),Device(0),Page(55:4/20),Diskblock(119),FileWrite,Openfile(4:2/0),Thread(26:2/W1)) this Page(55:4/20)
[Info][PageTableEntry][do_lock] Get frame Frame(20)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(3:4/4)
[PageTableEntry][do_unlock] this Page(26:4/5)
[PageFaultHandler][do_handlePageFault] thread Thread(24:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 16576 offset = 192 page no = 16 Thread(19:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(19:4/RU) 22 Page(16:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(17) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(16:4/null)
[PageFaultHandler][do_handlePageFault] page Page(16:4/null) setframe Frame(17)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(225),Device(0),Page(16:4/17),Diskblock(208),FileRead,Openfile(12:4/0),Thread(19:4/W1)) this Page(16:4/17)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(19:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(19:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(13:2/15)
[PageFaultHandler][do_handlePageFault] thread Thread(27:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 23643 offset = 91 page no = 23 Thread(24:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(24:4/RU) 21 Page(23:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(15) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(23:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(13:2/15)
[PageFaultHandler][do_handlePageFault] Frame(15) is dirty, do swap-out, Thread(24:4/W0)
[PageFaultHandler][SwapOut] page Page(13:2/15) frame Frame(15)file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 13
[Info][PageTableEntry][do_lock] iorb IORB(Id(226),Device(0),Page(13:2/15),Diskblock(205),FileWrite,Openfile(12:4/0),Thread(24:4/W1)) this Page(13:2/15)
[Info][PageTableEntry][do_lock] Get frame Frame(15)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 23000 offset = 472 page no = 22 Thread(23:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(23:4/RU) 21 Page(22:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(22) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(22:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(37:4/22)
[PageFaultHandler][do_handlePageFault] Frame(22) is dirty, do swap-out, Thread(23:4/W0)
[PageFaultHandler][SwapOut] page Page(37:4/22) frame Frame(22)file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 37
[Info][PageTableEntry][do_lock] iorb IORB(Id(227),Device(0),Page(37:4/22),Diskblock(229),FileWrite,Openfile(12:4/0),Thread(23:4/W1)) this Page(37:4/22)
[Info][PageTableEntry][do_lock] Get frame Frame(22)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 16691 offset = 307 page no = 16 Thread(27:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(27:2/RU) 21 Page(16:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(11) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(16:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(30:2/11)
[PageFaultHandler][do_handlePageFault] Frame(11) is dirty, do swap-out, Thread(27:2/W0)
[PageFaultHandler][SwapOut] page Page(30:2/11) frame Frame(11)file Openfile(4:2/0)
[PageFaultHandler][SwapOut] block no 30
[Info][PageTableEntry][do_lock] iorb IORB(Id(228),Device(0),Page(30:2/11),Diskblock(94),FileWrite,Openfile(4:2/0),Thread(27:2/W1)) this Page(30:2/11)
[Info][PageTableEntry][do_lock] Get frame Frame(11)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 23277 offset = 749 page no = 22 Thread(17:4/RU)
[PageTableEntry][do_unlock] this Page(24:4/9)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(9) Page(24:4/9)Thread(28:4/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(35:4/null) setframe Frame(9)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(229),Device(0),Page(35:4/9),Diskblock(227),FileRead,Openfile(12:4/0),Thread(28:4/W1)) this Page(35:4/9)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(28:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(28:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(63:3/12)
[PageFaultHandler][do_handlePageFault] thread Thread(14:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(21:2/23)
[PageFaultHandler][do_handlePageFault] thread Thread(11:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 60623 offset = 207 page no = 59 Thread(11:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(11:2/RU) 22 Page(59:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(19) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(59:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(27:2/19)
[PageFaultHandler][do_handlePageFault] page Page(59:2/null) setframe Frame(19)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(230),Device(0),Page(59:2/19),Diskblock(123),FileRead,Openfile(4:2/0),Thread(11:2/W1)) this Page(59:2/19)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(11:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(11:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(55:4/20)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(20) Page(55:4/20)Thread(26:2/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(35:2/null) setframe Frame(20)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(231),Device(0),Page(35:2/20),Diskblock(99),FileRead,Openfile(4:2/0),Thread(26:2/W1)) this Page(35:2/20)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(26:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(26:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(20)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 32021/250000[PageTableEntry][do_unlock] this Page(16:4/17)
[PageFaultHandler][do_handlePageFault] thread Thread(19:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(13:2/15)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(15) Page(13:2/15)Thread(24:4/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(23:4/null) setframe Frame(15)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(232),Device(0),Page(23:4/15),Diskblock(215),FileRead,Openfile(12:4/0),Thread(24:4/W1)) this Page(23:4/15)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(24:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(24:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(15)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 1790 offset = 766 page no = 1 Thread(19:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(19:4/RU) 21 Page(1:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(17) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(1:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(16:4/17)
[PageFaultHandler][do_handlePageFault] Frame(17) is dirty, do swap-out, Thread(19:4/W0)
[PageFaultHandler][SwapOut] page Page(16:4/17) frame Frame(17)file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 16
[Info][PageTableEntry][do_lock] iorb IORB(Id(233),Device(0),Page(16:4/17),Diskblock(208),FileWrite,Openfile(12:4/0),Thread(19:4/W1)) this Page(16:4/17)
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(37:4/22)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(22) Page(37:4/22)Thread(23:4/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(22:4/null) setframe Frame(22)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(234),Device(0),Page(22:4/22),Diskblock(214),FileRead,Openfile(12:4/0),Thread(23:4/W1)) this Page(22:4/22)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(23:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(23:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(22)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(30:2/11)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(11) Page(30:2/11)Thread(27:2/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(16:2/null) setframe Frame(11)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(235),Device(0),Page(16:2/11),Diskblock(80),FileRead,Openfile(4:2/0),Thread(27:2/W1)) this Page(16:2/11)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(11)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(35:4/9)
[PageFaultHandler][do_handlePageFault] thread Thread(28:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(59:2/19)
[PageFaultHandler][do_handlePageFault] thread Thread(11:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 3860 offset = 788 page no = 3 Thread(11:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(11:2/RU) 22 Page(3:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(9) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(3:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(35:4/9)
[PageFaultHandler][do_handlePageFault] page Page(3:2/null) setframe Frame(9)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(236),Device(0),Page(3:2/9),Diskblock(67),FileRead,Openfile(4:2/0),Thread(11:2/W1)) this Page(3:2/9)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(11:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(11:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 18057 offset = 649 page no = 17 Thread(28:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(28:4/RU) 22 Page(17:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(19) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(17:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(59:2/19)
[PageFaultHandler][do_handlePageFault] Frame(19) is dirty, do swap-out, Thread(28:4/W0)
[PageFaultHandler][SwapOut] page Page(59:2/19) frame Frame(19)file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 59
[Info][PageTableEntry][do_lock] iorb IORB(Id(237),Device(0),Page(59:2/19),Diskblock(251),FileWrite,Openfile(12:4/0),Thread(28:4/W1)) this Page(59:2/19)
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(35:2/20)
[PageFaultHandler][do_handlePageFault] thread Thread(26:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 42494 offset = 510 page no = 41 Thread(26:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(26:2/RU) 22 Page(41:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(25) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(41:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(28:4/25)
[PageFaultHandler][do_handlePageFault] Frame(25) is dirty, do swap-out, Thread(26:2/W0)
[PageFaultHandler][SwapOut] page Page(28:4/25) frame Frame(25)file Openfile(4:2/0)
[PageFaultHandler][SwapOut] block no 28
[Info][PageTableEntry][do_lock] iorb IORB(Id(238),Device(0),Page(28:4/25),Diskblock(92),FileWrite,Openfile(4:2/0),Thread(26:2/W1)) this Page(28:4/25)
[Info][PageTableEntry][do_lock] Get frame Frame(25)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 33040/250000[PageTableEntry][do_unlock] this Page(23:4/15)
[PageFaultHandler][do_handlePageFault] thread Thread(24:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(16:4/17)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(17) Page(16:4/17)Thread(19:4/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(1:4/null) setframe Frame(17)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(239),Device(0),Page(1:4/17),Diskblock(193),FileRead,Openfile(12:4/0),Thread(19:4/W1)) this Page(1:4/17)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(19:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(19:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(22:4/22)
[PageFaultHandler][do_handlePageFault] thread Thread(23:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 2591 offset = 543 page no = 2 Thread(17:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(17:4/RU) 21 Page(2:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(27) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(2:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(58:2/27)
[PageFaultHandler][do_handlePageFault] page Page(2:4/null) setframe Frame(27)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(240),Device(0),Page(2:4/27),Diskblock(194),FileRead,Openfile(12:4/0),Thread(17:4/W1)) this Page(2:4/27)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(17:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(17:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(16:2/11)
[PageFaultHandler][do_handlePageFault] thread Thread(27:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 23126 offset = 598 page no = 22 Thread(24:4/RU)
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 6305 offset = 161 page no = 6 Thread(27:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(27:2/RU) 21 Page(6:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(3) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(6:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(22:2/3)
[PageFaultHandler][do_handlePageFault] page Page(6:2/null) setframe Frame(3)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(241),Device(0),Page(6:2/3),Diskblock(70),FileRead,Openfile(4:2/0),Thread(27:2/W1)) this Page(6:2/3)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(3)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(3:2/9)
[PageFaultHandler][do_handlePageFault] thread Thread(11:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(59:2/19)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(19) Page(59:2/19)Thread(28:4/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(17:4/null) setframe Frame(19)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(242),Device(0),Page(17:4/19),Diskblock(209),FileRead,Openfile(12:4/0),Thread(28:4/W1)) this Page(17:4/19)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(28:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(28:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 40014 offset = 78 page no = 39 Thread(23:4/RU)
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(28:4/25)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(25) Page(28:4/25)Thread(26:2/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(41:2/null) setframe Frame(25)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(243),Device(0),Page(41:2/25),Diskblock(105),FileRead,Openfile(4:2/0),Thread(26:2/W1)) this Page(41:2/25)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(26:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(26:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(25)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 34020/250000[PageTableEntry][do_unlock] this Page(1:4/17)
[PageFaultHandler][do_handlePageFault] thread Thread(19:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(2:4/27)
[PageFaultHandler][do_handlePageFault] thread Thread(17:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(6:2/3)
[PageFaultHandler][do_handlePageFault] thread Thread(27:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 5643 offset = 523 page no = 5 Thread(24:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(24:4/RU) 22 Page(5:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(17) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(5:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(1:4/17)
[PageFaultHandler][do_handlePageFault] page Page(5:4/null) setframe Frame(17)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(244),Device(0),Page(5:4/17),Diskblock(197),FileRead,Openfile(12:4/0),Thread(24:4/W1)) this Page(5:4/17)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(24:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(24:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(17:4/19)
[PageFaultHandler][do_handlePageFault] thread Thread(28:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 32153 offset = 409 page no = 31 Thread(23:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(23:4/RU) 22 Page(31:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(3) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(31:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(6:2/3)
[PageFaultHandler][do_handlePageFault] page Page(31:4/null) setframe Frame(3)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(245),Device(0),Page(31:4/3),Diskblock(223),FileRead,Openfile(12:4/0),Thread(23:4/W1)) this Page(31:4/3)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(23:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(23:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(3)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(41:2/25)
[PageFaultHandler][do_handlePageFault] thread Thread(26:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(5:4/17)
[PageFaultHandler][do_handlePageFault] thread Thread(24:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 16471 offset = 87 page no = 16 Thread(11:2/RU)
[MMU][do_refer] Do memory read.
Simulation progress: 35031/250000[PageTableEntry][do_unlock] this Page(31:4/3)
[PageFaultHandler][do_handlePageFault] thread Thread(23:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 41021 offset = 61 page no = 40 Thread(17:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(17:4/RU) 21 Page(40:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(25) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(40:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(41:2/25)
[PageFaultHandler][do_handlePageFault] Frame(25) is dirty, do swap-out, Thread(17:4/W0)
[PageFaultHandler][SwapOut] page Page(41:2/25) frame Frame(25)file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 41
[Info][PageTableEntry][do_lock] iorb IORB(Id(246),Device(0),Page(41:2/25),Diskblock(233),FileWrite,Openfile(12:4/0),Thread(17:4/W1)) this Page(41:2/25)
[Info][PageTableEntry][do_lock] Get frame Frame(25)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(41:2/25)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(25) Page(41:2/25)Thread(17:4/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(40:4/null) setframe Frame(25)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(247),Device(0),Page(40:4/25),Diskblock(232),FileRead,Openfile(12:4/0),Thread(17:4/W1)) this Page(40:4/25)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(17:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(17:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(25)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(40:4/25)
[PageFaultHandler][do_handlePageFault] thread Thread(17:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 30256 offset = 560 page no = 29 Thread(23:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(23:4/RU) 22 Page(29:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(3) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(29:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(31:4/3)
[PageFaultHandler][do_handlePageFault] Frame(3) is dirty, do swap-out, Thread(23:4/W0)
[PageFaultHandler][SwapOut] page Page(31:4/3) frame Frame(3)file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 31
[Info][PageTableEntry][do_lock] iorb IORB(Id(248),Device(0),Page(31:4/3),Diskblock(223),FileWrite,Openfile(12:4/0),Thread(23:4/W1)) this Page(31:4/3)
[Info][PageTableEntry][do_lock] Get frame Frame(3)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 36001/250000[PageTableEntry][do_unlock] this Page(31:4/3)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(3) Page(31:4/3)Thread(23:4/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(29:4/null) setframe Frame(3)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(249),Device(0),Page(29:4/3),Diskblock(221),FileRead,Openfile(12:4/0),Thread(23:4/W1)) this Page(29:4/3)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(23:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(23:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(3)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 3608 offset = 536 page no = 3 Thread(27:2/RU)
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(29:4/3)
[PageFaultHandler][do_handlePageFault] thread Thread(23:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 59570 offset = 178 page no = 58 Thread(17:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(17:4/RU) 21 Page(58:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(26) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(58:4/null)
[PageFaultHandler][do_handlePageFault] page Page(58:4/null) setframe Frame(26)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(250),Device(0),Page(58:4/26),Diskblock(250),FileRead,Openfile(12:4/0),Thread(17:4/W1)) this Page(58:4/26)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(17:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(17:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 62672 offset = 208 page no = 61 Thread(24:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(24:4/RU) 22 Page(61:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(0) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(61:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(30:4/0)
[PageFaultHandler][do_handlePageFault] Frame(0) is dirty, do swap-out, Thread(24:4/W0)
[PageFaultHandler][SwapOut] page Page(30:4/0) frame Frame(0)file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 30
[Info][PageTableEntry][do_lock] iorb IORB(Id(251),Device(0),Page(30:4/0),Diskblock(222),FileWrite,Openfile(12:4/0),Thread(24:4/W1)) this Page(30:4/0)
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 25750 offset = 150 page no = 25 Thread(11:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(11:2/RU) 22 Page(25:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(16) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(25:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(60:2/16)
[PageFaultHandler][do_handlePageFault] Frame(16) is dirty, do swap-out, Thread(11:2/W0)
[PageFaultHandler][SwapOut] page Page(60:2/16) frame Frame(16)file Openfile(4:2/0)
[PageFaultHandler][SwapOut] block no 60
[Info][PageTableEntry][do_lock] iorb IORB(Id(252),Device(0),Page(60:2/16),Diskblock(124),FileWrite,Openfile(4:2/0),Thread(11:2/W1)) this Page(60:2/16)
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(58:4/26)
[PageFaultHandler][do_handlePageFault] thread Thread(17:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 12236 offset = 972 page no = 11 Thread(26:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(26:2/RU) 21 Page(11:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(4) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(11:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(3:4/4)
[PageFaultHandler][do_handlePageFault] Frame(4) is dirty, do swap-out, Thread(26:2/W0)
[PageFaultHandler][SwapOut] page Page(3:4/4) frame Frame(4)file Openfile(4:2/0)
[PageFaultHandler][SwapOut] block no 3
[Info][PageTableEntry][do_lock] iorb IORB(Id(253),Device(0),Page(3:4/4),Diskblock(67),FileWrite,Openfile(4:2/0),Thread(26:2/W1)) this Page(3:4/4)
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 45522 offset = 466 page no = 44 Thread(27:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(27:2/RU) 22 Page(44:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(29) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(44:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(36:2/29)
[PageFaultHandler][do_handlePageFault] page Page(44:2/null) setframe Frame(29)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(254),Device(0),Page(44:2/29),Diskblock(108),FileRead,Openfile(4:2/0),Thread(27:2/W1)) this Page(44:2/29)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(30:4/0)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(0) Page(30:4/0)Thread(24:4/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(61:4/null) setframe Frame(0)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(255),Device(0),Page(61:4/0),Diskblock(253),FileRead,Openfile(12:4/0),Thread(24:4/W1)) this Page(61:4/0)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(24:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(24:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(60:2/16)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(16) Page(60:2/16)Thread(11:2/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(25:2/null) setframe Frame(16)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(256),Device(0),Page(25:2/16),Diskblock(89),FileRead,Openfile(4:2/0),Thread(11:2/W1)) this Page(25:2/16)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(11:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(11:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(3:4/4)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(4) Page(3:4/4)Thread(26:2/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(11:2/null) setframe Frame(4)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(257),Device(0),Page(11:2/4),Diskblock(75),FileRead,Openfile(4:2/0),Thread(26:2/W1)) this Page(11:2/4)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(26:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(26:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(44:2/29)
[PageFaultHandler][do_handlePageFault] thread Thread(27:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 15421 offset = 61 page no = 15 Thread(28:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(28:4/RU) 21 Page(15:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(13) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(15:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(43:4/13)
[PageFaultHandler][do_handlePageFault] page Page(15:4/null) setframe Frame(13)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(258),Device(0),Page(15:4/13),Diskblock(207),FileRead,Openfile(12:4/0),Thread(28:4/W1)) this Page(15:4/13)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(28:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(28:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(13)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 25436 offset = 860 page no = 24 Thread(23:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(23:4/RU) 22 Page(24:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(5) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(24:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(26:4/5)
[PageFaultHandler][do_handlePageFault] Frame(5) is dirty, do swap-out, Thread(23:4/W0)
[PageFaultHandler][SwapOut] page Page(26:4/5) frame Frame(5)file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 26
[Info][PageTableEntry][do_lock] iorb IORB(Id(259),Device(0),Page(26:4/5),Diskblock(218),FileWrite,Openfile(12:4/0),Thread(23:4/W1)) this Page(26:4/5)
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 37002/250000[MMU][do_refer] address = 11676 offset = 412 page no = 11 Thread(19:4/RU)
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(61:4/0)
[PageFaultHandler][do_handlePageFault] thread Thread(24:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(25:2/16)
[PageFaultHandler][do_handlePageFault] thread Thread(11:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(11:2/4)
[PageFaultHandler][do_handlePageFault] thread Thread(26:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 38366 offset = 478 page no = 37 Thread(24:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(24:4/RU) 21 Page(37:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(0) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(37:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(61:4/0)
[PageFaultHandler][do_handlePageFault] Frame(0) is dirty, do swap-out, Thread(24:4/W0)
[PageFaultHandler][SwapOut] page Page(61:4/0) frame Frame(0)file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 61
[Info][PageTableEntry][do_lock] iorb IORB(Id(260),Device(0),Page(61:4/0),Diskblock(253),FileWrite,Openfile(12:4/0),Thread(24:4/W1)) this Page(61:4/0)
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(15:4/13)
[PageFaultHandler][do_handlePageFault] thread Thread(28:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(26:4/5)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(5) Page(26:4/5)Thread(23:4/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(24:4/null) setframe Frame(5)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(261),Device(0),Page(24:4/5),Diskblock(216),FileRead,Openfile(12:4/0),Thread(23:4/W1)) this Page(24:4/5)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(23:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(23:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 10353 offset = 113 page no = 10 Thread(19:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(19:4/RU) 21 Page(10:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(4) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(10:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(11:2/4)
[PageFaultHandler][do_handlePageFault] page Page(10:4/null) setframe Frame(4)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(262),Device(0),Page(10:4/4),Diskblock(202),FileRead,Openfile(12:4/0),Thread(19:4/W1)) this Page(10:4/4)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(19:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(19:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 43796 offset = 788 page no = 42 Thread(27:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(27:2/RU) 22 Page(42:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(23) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(42:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(21:2/23)
[PageFaultHandler][do_handlePageFault] Frame(23) is dirty, do swap-out, Thread(27:2/W0)
[PageFaultHandler][SwapOut] page Page(21:2/23) frame Frame(23)file Openfile(4:2/0)
[PageFaultHandler][SwapOut] block no 21
[Info][PageTableEntry][do_lock] iorb IORB(Id(263),Device(0),Page(21:2/23),Diskblock(85),FileWrite,Openfile(4:2/0),Thread(27:2/W1)) this Page(21:2/23)
[Info][PageTableEntry][do_lock] Get frame Frame(23)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 5782 offset = 662 page no = 5 Thread(11:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(11:2/RU) 22 Page(5:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(20) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(5:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(35:2/20)
[PageFaultHandler][do_handlePageFault] page Page(5:2/null) setframe Frame(20)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(264),Device(0),Page(5:2/20),Diskblock(69),FileRead,Openfile(4:2/0),Thread(11:2/W1)) this Page(5:2/20)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(11:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(11:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(20)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(61:4/0)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(0) Page(61:4/0)Thread(24:4/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(37:4/null) setframe Frame(0)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(265),Device(0),Page(37:4/0),Diskblock(229),FileRead,Openfile(12:4/0),Thread(24:4/W1)) this Page(37:4/0)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(24:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(24:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 38045/250000[PageTableEntry][do_unlock] this Page(24:4/5)
[PageFaultHandler][do_handlePageFault] thread Thread(23:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 23647 offset = 95 page no = 23 Thread(32:5/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(32:5/RU) 21 Page(23:5/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(18) Reserved by Task(5/L)
[PageFaultHandler][do_handlePageFault] page Page(23:5/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(39:4/18)
[PageFaultHandler][do_handlePageFault] Frame(18) is dirty, do swap-out, Thread(32:5/W0)
[PageFaultHandler][SwapOut] page Page(39:4/18) frame Frame(18)file Openfile(30:5/0)
[PageFaultHandler][SwapOut] block no 39
[Info][PageTableEntry][do_lock] iorb IORB(Id(266),Device(0),Page(39:4/18),Diskblock(39),FileWrite,Openfile(30:5/0),Thread(32:5/W1)) this Page(39:4/18)
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 26377 offset = 777 page no = 25 Thread(26:2/RU)
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 41246 offset = 286 page no = 40 Thread(26:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(26:2/RU) 21 Page(40:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(22) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(40:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(22:4/22)
[PageFaultHandler][do_handlePageFault] Frame(22) is dirty, do swap-out, Thread(26:2/W0)
[PageFaultHandler][SwapOut] page Page(22:4/22) frame Frame(22)file Openfile(4:2/0)
[PageFaultHandler][SwapOut] block no 22
[Info][PageTableEntry][do_lock] iorb IORB(Id(267),Device(0),Page(22:4/22),Diskblock(86),FileWrite,Openfile(4:2/0),Thread(26:2/W1)) this Page(22:4/22)
[Info][PageTableEntry][do_lock] Get frame Frame(22)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(10:4/4)
[PageFaultHandler][do_handlePageFault] thread Thread(19:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(21:2/23)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(23) Page(21:2/23)Thread(27:2/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(42:2/null) setframe Frame(23)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(268),Device(0),Page(42:2/23),Diskblock(106),FileRead,Openfile(4:2/0),Thread(27:2/W1)) this Page(42:2/23)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(23)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(269),Device(1),Page(2:4/27),Diskblock(7),FileWrite,Openfile(32:4/1),Thread(23:4/W0)) this Page(2:4/27)
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(5:2/20)
[PageFaultHandler][do_handlePageFault] thread Thread(11:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(2:4/27)
[PageTableEntry][do_unlock] this Page(37:4/0)
[PageFaultHandler][do_handlePageFault] thread Thread(24:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(39:4/18)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(18) Page(39:4/18)Thread(32:5/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(23:5/null) setframe Frame(18)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(270),Device(0),Page(23:5/18),Diskblock(23),FileRead,Openfile(30:5/0),Thread(32:5/W1)) this Page(23:5/18)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(32:5/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(32:5/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(271),Device(1),Page(3:2/9),Diskblock(10),FileRead,Openfile(34:2/1),Thread(11:2/W0)) this Page(3:2/9)
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(22:4/22)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(22) Page(22:4/22)Thread(26:2/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(40:2/null) setframe Frame(22)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(272),Device(0),Page(40:2/22),Diskblock(104),FileRead,Openfile(4:2/0),Thread(26:2/W1)) this Page(40:2/22)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(26:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(26:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(22)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(3:2/9)
[MMU][do_refer] address = 42154 offset = 170 page no = 41 Thread(11:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(11:2/RU) 22 Page(41:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(20) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(41:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(5:2/20)
[PageFaultHandler][do_handlePageFault] Frame(20) is dirty, do swap-out, Thread(11:2/W0)
[PageFaultHandler][SwapOut] page Page(5:2/20) frame Frame(20)file Openfile(4:2/0)
[PageFaultHandler][SwapOut] block no 5
[Info][PageTableEntry][do_lock] iorb IORB(Id(273),Device(0),Page(5:2/20),Diskblock(69),FileWrite,Openfile(4:2/0),Thread(11:2/W1)) this Page(5:2/20)
[Info][PageTableEntry][do_lock] Get frame Frame(20)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(274),Device(1),Page(2:4/27),Diskblock(11),FileWrite,Openfile(34:2/1),Thread(24:4/W0)) this Page(2:4/27)
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(42:2/23)
[PageFaultHandler][do_handlePageFault] thread Thread(27:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(2:4/27)
[PageTableEntry][do_unlock] this Page(23:5/18)
[PageFaultHandler][do_handlePageFault] thread Thread(32:5/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
Simulation progress: 39060/250000[PageTableEntry][do_unlock] this Page(40:2/22)
[PageFaultHandler][do_handlePageFault] thread Thread(26:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(5:2/20)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(20) Page(5:2/20)Thread(11:2/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(41:2/null) setframe Frame(20)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(275),Device(0),Page(41:2/20),Diskblock(105),FileRead,Openfile(4:2/0),Thread(11:2/W1)) this Page(41:2/20)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(11:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(11:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(20)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(41:2/20)
[PageFaultHandler][do_handlePageFault] thread Thread(11:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 38352 offset = 464 page no = 37 Thread(24:4/RU)
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 39976 offset = 40 page no = 39 Thread(24:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(24:4/RU) 21 Page(39:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(23) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(39:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(42:2/23)
[PageFaultHandler][do_handlePageFault] Frame(23) is dirty, do swap-out, Thread(24:4/W0)
[PageFaultHandler][SwapOut] page Page(42:2/23) frame Frame(23)file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 42
[Info][PageTableEntry][do_lock] iorb IORB(Id(276),Device(0),Page(42:2/23),Diskblock(234),FileWrite,Openfile(12:4/0),Thread(24:4/W1)) this Page(42:2/23)
[Info][PageTableEntry][do_lock] Get frame Frame(23)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 52513 offset = 289 page no = 51 Thread(27:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(27:2/RU) 21 Page(51:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(11) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(51:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(16:2/11)
[PageFaultHandler][do_handlePageFault] page Page(51:2/null) setframe Frame(11)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(277),Device(0),Page(51:2/11),Diskblock(115),FileRead,Openfile(4:2/0),Thread(27:2/W1)) this Page(51:2/11)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(11)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(42:2/23)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(23) Page(42:2/23)Thread(24:4/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(39:4/null) setframe Frame(23)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(278),Device(0),Page(39:4/23),Diskblock(231),FileRead,Openfile(12:4/0),Thread(24:4/W1)) this Page(39:4/23)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(24:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(24:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(23)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 52371 offset = 147 page no = 51 Thread(32:5/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(32:5/RU) 21 Page(51:5/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(24) Reserved by Task(5/L)
[PageFaultHandler][do_handlePageFault] page Page(51:5/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(57:4/24)
[PageFaultHandler][do_handlePageFault] Frame(24) is dirty, do swap-out, Thread(32:5/W0)
[PageFaultHandler][SwapOut] page Page(57:4/24) frame Frame(24)file Openfile(30:5/0)
[PageFaultHandler][SwapOut] block no 57
[Info][PageTableEntry][do_lock] iorb IORB(Id(279),Device(0),Page(57:4/24),Diskblock(57),FileWrite,Openfile(30:5/0),Thread(32:5/W1)) this Page(57:4/24)
[Info][PageTableEntry][do_lock] Get frame Frame(24)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(51:2/11)
[PageFaultHandler][do_handlePageFault] thread Thread(27:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 57368 offset = 24 page no = 56 Thread(26:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(26:2/RU) 22 Page(56:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(9) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(56:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(3:2/9)
[PageFaultHandler][do_handlePageFault] Frame(9) is dirty, do swap-out, Thread(26:2/W0)
[PageFaultHandler][SwapOut] page Page(3:2/9) frame Frame(9)file Openfile(4:2/0)
[PageFaultHandler][SwapOut] block no 3
[Info][PageTableEntry][do_lock] iorb IORB(Id(280),Device(0),Page(3:2/9),Diskblock(67),FileWrite,Openfile(4:2/0),Thread(26:2/W1)) this Page(3:2/9)
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 52660 offset = 436 page no = 51 Thread(33:2/RU)
[MMU][do_refer] Do memory read.
[PageCleanDaemon][unleash] osp.Memory.PageCleanDaemon@e14d43 execute time 40000
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(19)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(21)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(10)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(17)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(3)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(29)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(19)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(19) Page(17:4/19) isDirty true
[PageFaultHandler][SwapOut] file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 17
[Info][PageTableEntry][do_lock] iorb IORB(Id(281),Device(0),Page(17:4/19),Diskblock(209),FileWrite,Openfile(12:4/0),Thread(34:0/W1)) this Page(17:4/19)
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 40036/250000[MMU][do_refer] address = 12863 offset = 575 page no = 12 Thread(27:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(27:2/RU) 21 Page(12:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(2) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(12:2/null)
[PageFaultHandler][do_handlePageFault] page Page(12:2/null) setframe Frame(2)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(282),Device(0),Page(12:2/2),Diskblock(76),FileRead,Openfile(4:2/0),Thread(27:2/W1)) this Page(12:2/2)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(39:4/23)
[PageFaultHandler][do_handlePageFault] thread Thread(24:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 12834 offset = 546 page no = 12 Thread(33:2/RU)
[PageTableEntry][do_unlock] this Page(57:4/24)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(24) Page(57:4/24)Thread(32:5/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(51:5/null) setframe Frame(24)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(283),Device(0),Page(51:5/24),Diskblock(51),FileRead,Openfile(30:5/0),Thread(32:5/W1)) this Page(51:5/24)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(32:5/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(32:5/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(24)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(3:2/9)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(9) Page(3:2/9)Thread(26:2/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(56:2/null) setframe Frame(9)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(284),Device(0),Page(56:2/9),Diskblock(120),FileRead,Openfile(4:2/0),Thread(26:2/W1)) this Page(56:2/9)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(26:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(26:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(17:4/19)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(19) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(21)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(21) Page(11:4/21) isDirty true
[PageFaultHandler][SwapOut] file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 11
[Info][PageTableEntry][do_lock] iorb IORB(Id(285),Device(0),Page(11:4/21),Diskblock(203),FileWrite,Openfile(12:4/0),Thread(34:0/W1)) this Page(11:4/21)
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 25095 offset = 519 page no = 24 Thread(11:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(11:2/RU) 21 Page(24:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(8) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(24:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(53:2/8)
[PageFaultHandler][do_handlePageFault] page Page(24:2/null) setframe Frame(8)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(286),Device(0),Page(24:2/8),Diskblock(88),FileRead,Openfile(4:2/0),Thread(11:2/W1)) this Page(24:2/8)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(11:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(11:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 52907 offset = 683 page no = 51 Thread(24:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(24:4/RU) 22 Page(51:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(19) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(51:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(17:4/19)
[PageFaultHandler][do_handlePageFault] page Page(51:4/null) setframe Frame(19)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(287),Device(0),Page(51:4/19),Diskblock(243),FileRead,Openfile(12:4/0),Thread(24:4/W1)) this Page(51:4/19)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(24:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(24:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(12:2/2)
[PageFaultHandler][do_handlePageFault] thread Thread(27:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(51:5/24)
[PageFaultHandler][do_handlePageFault] thread Thread(32:5/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[Info][PageTableEntry][do_lock] iorb IORB(Id(288),Device(1),Page(12:2/2),Diskblock(13),FileWrite,Openfile(36:2/1),Thread(33:2/W0)) this Page(12:2/2)
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 65161 offset = 649 page no = 63 Thread(27:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(27:2/RU) 22 Page(63:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(24) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(63:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(51:5/24)
[PageFaultHandler][do_handlePageFault] page Page(63:2/null) setframe Frame(24)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(289),Device(0),Page(63:2/24),Diskblock(127),FileRead,Openfile(4:2/0),Thread(27:2/W1)) this Page(63:2/24)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(24)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(12:2/2)
[Info][PageTableEntry][do_lock] iorb IORB(Id(290),Device(1),Page(23:5/18),Diskblock(14),FileWrite,Openfile(36:2/1),Thread(32:5/W0)) this Page(23:5/18)
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(56:2/9)
[PageFaultHandler][do_handlePageFault] thread Thread(26:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(23:5/18)
[PageTableEntry][do_unlock] this Page(11:4/21)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(21) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(10)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(10) Page(7:4/10) isDirty true
[PageFaultHandler][SwapOut] file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 7
[Info][PageTableEntry][do_lock] iorb IORB(Id(291),Device(0),Page(7:4/10),Diskblock(199),FileWrite,Openfile(12:4/0),Thread(34:0/W1)) this Page(7:4/10)
[Info][PageTableEntry][do_lock] Get frame Frame(10)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(24:2/8)
[PageFaultHandler][do_handlePageFault] thread Thread(11:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 22500 offset = 996 page no = 21 Thread(35:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(35:2/RU) 22 Page(21:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(9) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(21:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(56:2/9)
[PageFaultHandler][do_handlePageFault] Frame(9) is dirty, do swap-out, Thread(35:2/W0)
[PageFaultHandler][SwapOut] page Page(56:2/9) frame Frame(9)file Openfile(4:2/0)
[PageFaultHandler][SwapOut] block no 56
[Info][PageTableEntry][do_lock] iorb IORB(Id(292),Device(0),Page(56:2/9),Diskblock(120),FileWrite,Openfile(4:2/0),Thread(35:2/W1)) this Page(56:2/9)
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 41020/250000[MMU][do_refer] address = 63033 offset = 569 page no = 61 Thread(32:5/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(32:5/RU) 22 Page(61:5/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(27) Reserved by Task(5/L)
[PageFaultHandler][do_handlePageFault] page Page(61:5/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(2:4/27)
[PageFaultHandler][do_handlePageFault] page Page(61:5/null) setframe Frame(27)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(293),Device(0),Page(61:5/27),Diskblock(61),FileRead,Openfile(30:5/0),Thread(32:5/W1)) this Page(61:5/27)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(32:5/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(32:5/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 21448 offset = 968 page no = 20 Thread(33:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(33:2/RU) 21 Page(20:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(21) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(20:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(11:4/21)
[PageFaultHandler][do_handlePageFault] page Page(20:2/null) setframe Frame(21)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(294),Device(0),Page(20:2/21),Diskblock(84),FileRead,Openfile(4:2/0),Thread(33:2/W1)) this Page(20:2/21)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(33:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(33:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(51:4/19)
[PageFaultHandler][do_handlePageFault] thread Thread(24:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(63:2/24)
[PageFaultHandler][do_handlePageFault] thread Thread(27:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 45609 offset = 553 page no = 44 Thread(26:2/RU)
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(7:4/10)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(10) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(17)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(17) Page(5:4/17) isDirty true
[PageFaultHandler][SwapOut] file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 5
[Info][PageTableEntry][do_lock] iorb IORB(Id(295),Device(0),Page(5:4/17),Diskblock(197),FileWrite,Openfile(12:4/0),Thread(34:0/W1)) this Page(5:4/17)
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 43009 offset = 1 page no = 42 Thread(23:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(23:4/RU) 22 Page(42:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(10) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(42:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(7:4/10)
[PageFaultHandler][do_handlePageFault] page Page(42:4/null) setframe Frame(10)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(296),Device(0),Page(42:4/10),Diskblock(234),FileRead,Openfile(12:4/0),Thread(23:4/W1)) this Page(42:4/10)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(23:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(23:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(10)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(297),Device(1),Page(12:2/2),Diskblock(14),FileRead,Openfile(36:2/1),Thread(27:2/W0)) this Page(12:2/2)
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(56:2/9)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(9) Page(56:2/9)Thread(35:2/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(21:2/null) setframe Frame(9)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(298),Device(0),Page(21:2/9),Diskblock(85),FileRead,Openfile(4:2/0),Thread(35:2/W1)) this Page(21:2/9)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(35:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(35:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(12:2/2)
[PageTableEntry][do_unlock] this Page(61:5/27)
[PageFaultHandler][do_handlePageFault] thread Thread(32:5/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 21393 offset = 913 page no = 20 Thread(11:2/RU)
[PageTableEntry][do_unlock] this Page(20:2/21)
[PageFaultHandler][do_handlePageFault] thread Thread(33:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 19857 offset = 401 page no = 19 Thread(26:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(26:2/RU) 21 Page(19:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(27) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(19:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(61:5/27)
[PageFaultHandler][do_handlePageFault] Frame(27) is dirty, do swap-out, Thread(26:2/W0)
[PageFaultHandler][SwapOut] page Page(61:5/27) frame Frame(27)file Openfile(4:2/0)
[PageFaultHandler][SwapOut] block no 61
[Info][PageTableEntry][do_lock] iorb IORB(Id(299),Device(0),Page(61:5/27),Diskblock(125),FileWrite,Openfile(4:2/0),Thread(26:2/W1)) this Page(61:5/27)
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 29260 offset = 588 page no = 28 Thread(24:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(24:4/RU) 21 Page(28:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(7) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(28:4/null)
[PageFaultHandler][do_handlePageFault] page Page(28:4/null) setframe Frame(7)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(300),Device(0),Page(28:4/7),Diskblock(220),FileRead,Openfile(12:4/0),Thread(24:4/W1)) this Page(28:4/7)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(24:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(24:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(7)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(5:4/17)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(17) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(3)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(3) Page(29:4/3) isDirty true
[PageFaultHandler][SwapOut] file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 29
[Info][PageTableEntry][do_lock] iorb IORB(Id(301),Device(0),Page(29:4/3),Diskblock(221),FileWrite,Openfile(12:4/0),Thread(34:0/W1)) this Page(29:4/3)
[Info][PageTableEntry][do_lock] Get frame Frame(3)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(302),Device(1),Page(12:2/2),Diskblock(12),FileWrite,Openfile(36:2/1),Thread(33:2/W0)) this Page(12:2/2)
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 49227 offset = 75 page no = 48 Thread(27:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(27:2/RU) 22 Page(48:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(25) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(48:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(40:4/25)
[PageFaultHandler][do_handlePageFault] page Page(48:2/null) setframe Frame(25)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(303),Device(0),Page(48:2/25),Diskblock(112),FileRead,Openfile(4:2/0),Thread(27:2/W1)) this Page(48:2/25)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(25)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(12:2/2)
Simulation progress: 42099/250000[PageTableEntry][do_unlock] this Page(42:4/10)
[PageFaultHandler][do_handlePageFault] thread Thread(23:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(21:2/9)
[PageFaultHandler][do_handlePageFault] thread Thread(35:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 25736 offset = 136 page no = 25 Thread(32:5/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(32:5/RU) 21 Page(25:5/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(9) Reserved by Task(5/L)
[PageFaultHandler][do_handlePageFault] page Page(25:5/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(21:2/9)
[PageFaultHandler][do_handlePageFault] Frame(9) is dirty, do swap-out, Thread(32:5/W0)
[PageFaultHandler][SwapOut] page Page(21:2/9) frame Frame(9)file Openfile(30:5/0)
[PageFaultHandler][SwapOut] block no 21
[Info][PageTableEntry][do_lock] iorb IORB(Id(304),Device(0),Page(21:2/9),Diskblock(21),FileWrite,Openfile(30:5/0),Thread(32:5/W1)) this Page(21:2/9)
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 47942 offset = 838 page no = 46 Thread(23:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(23:4/RU) 22 Page(46:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(10) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(46:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(42:4/10)
[PageFaultHandler][do_handlePageFault] Frame(10) is dirty, do swap-out, Thread(23:4/W0)
[PageFaultHandler][SwapOut] page Page(42:4/10) frame Frame(10)file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 42
[Info][PageTableEntry][do_lock] iorb IORB(Id(305),Device(0),Page(42:4/10),Diskblock(234),FileWrite,Openfile(12:4/0),Thread(23:4/W1)) this Page(42:4/10)
[Info][PageTableEntry][do_lock] Get frame Frame(10)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(61:5/27)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(27) Page(61:5/27)Thread(26:2/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(19:2/null) setframe Frame(27)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(306),Device(0),Page(19:2/27),Diskblock(83),FileRead,Openfile(4:2/0),Thread(26:2/W1)) this Page(19:2/27)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(26:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(26:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(307),Device(1),Page(12:2/2),Diskblock(14),FileRead,Openfile(38:2/1),Thread(35:2/W0)) this Page(12:2/2)
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 55449 offset = 153 page no = 54 Thread(33:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(33:2/RU) 22 Page(54:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(26) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(54:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(58:4/26)
[PageFaultHandler][do_handlePageFault] page Page(54:2/null) setframe Frame(26)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(308),Device(0),Page(54:2/26),Diskblock(118),FileRead,Openfile(4:2/0),Thread(33:2/W1)) this Page(54:2/26)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(33:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(33:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(12:2/2)
[PageTableEntry][do_unlock] this Page(28:4/7)
[PageFaultHandler][do_handlePageFault] thread Thread(24:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[Info][PageTableEntry][do_lock] iorb IORB(Id(309),Device(1),Page(12:2/2),Diskblock(14),FileWrite,Openfile(38:2/1),Thread(11:2/W0)) this Page(12:2/2)
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(12:2/2)
[PageTableEntry][do_unlock] this Page(29:4/3)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(3) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(29)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(29) Page(44:2/29) isDirty true
[PageFaultHandler][SwapOut] file Openfile(4:2/0)
[PageFaultHandler][SwapOut] block no 44
[Info][PageTableEntry][do_lock] iorb IORB(Id(310),Device(0),Page(44:2/29),Diskblock(108),FileWrite,Openfile(4:2/0),Thread(34:0/W1)) this Page(44:2/29)
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(48:2/25)
[PageFaultHandler][do_handlePageFault] thread Thread(27:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 9249 offset = 33 page no = 9 Thread(24:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(24:4/RU) 22 Page(9:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(25) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(9:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(48:2/25)
[PageFaultHandler][do_handlePageFault] Frame(25) is dirty, do swap-out, Thread(24:4/W0)
[PageFaultHandler][SwapOut] page Page(48:2/25) frame Frame(25)file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 48
[Info][PageTableEntry][do_lock] iorb IORB(Id(311),Device(0),Page(48:2/25),Diskblock(240),FileWrite,Openfile(12:4/0),Thread(24:4/W1)) this Page(48:2/25)
[Info][PageTableEntry][do_lock] Get frame Frame(25)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(21:2/9)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(9) Page(21:2/9)Thread(32:5/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(25:5/null) setframe Frame(9)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(312),Device(0),Page(25:5/9),Diskblock(25),FileRead,Openfile(30:5/0),Thread(32:5/W1)) this Page(25:5/9)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(32:5/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(32:5/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 14027 offset = 715 page no = 13 Thread(27:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(27:2/RU) 21 Page(13:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(16) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(13:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(25:2/16)
[PageFaultHandler][do_handlePageFault] Frame(16) is dirty, do swap-out, Thread(27:2/W0)
[PageFaultHandler][SwapOut] page Page(25:2/16) frame Frame(16)file Openfile(4:2/0)
[PageFaultHandler][SwapOut] block no 25
[Info][PageTableEntry][do_lock] iorb IORB(Id(313),Device(0),Page(25:2/16),Diskblock(89),FileWrite,Openfile(4:2/0),Thread(27:2/W1)) this Page(25:2/16)
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 1161 offset = 137 page no = 1 Thread(11:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(11:2/RU) 21 Page(1:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(13) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(1:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(15:4/13)
[PageFaultHandler][do_handlePageFault] page Page(1:2/null) setframe Frame(13)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(314),Device(0),Page(1:2/13),Diskblock(65),FileRead,Openfile(4:2/0),Thread(11:2/W1)) this Page(1:2/13)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(11:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(11:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(13)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 43008/250000[PageTableEntry][do_unlock] this Page(42:4/10)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(10) Page(42:4/10)Thread(23:4/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(46:4/null) setframe Frame(10)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(315),Device(0),Page(46:4/10),Diskblock(238),FileRead,Openfile(12:4/0),Thread(23:4/W1)) this Page(46:4/10)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(23:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(23:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(10)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 1588 offset = 564 page no = 1 Thread(17:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(17:4/RU) 21 Page(1:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(5) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(1:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(24:4/5)
[PageFaultHandler][do_handlePageFault] Frame(5) is dirty, do swap-out, Thread(17:4/W0)
[PageFaultHandler][SwapOut] page Page(24:4/5) frame Frame(5)file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 24
[Info][PageTableEntry][do_lock] iorb IORB(Id(316),Device(0),Page(24:4/5),Diskblock(216),FileWrite,Openfile(12:4/0),Thread(17:4/W1)) this Page(24:4/5)
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(19:2/27)
[PageFaultHandler][do_handlePageFault] thread Thread(26:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(54:2/26)
[PageFaultHandler][do_handlePageFault] thread Thread(33:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(44:2/29)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(29) finish
[MMU][do_refer] address = 47790 offset = 686 page no = 46 Thread(33:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(33:2/RU) 22 Page(46:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(26) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(46:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(54:2/26)
[PageFaultHandler][do_handlePageFault] Frame(26) is dirty, do swap-out, Thread(33:2/W0)
[PageFaultHandler][SwapOut] page Page(54:2/26) frame Frame(26)file Openfile(4:2/0)
[PageFaultHandler][SwapOut] block no 54
[Info][PageTableEntry][do_lock] iorb IORB(Id(317),Device(0),Page(54:2/26),Diskblock(118),FileWrite,Openfile(4:2/0),Thread(33:2/W1)) this Page(54:2/26)
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 32325 offset = 581 page no = 31 Thread(35:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(35:2/RU) 21 Page(31:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(14) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(31:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(62:2/14)
[PageFaultHandler][do_handlePageFault] Frame(14) is dirty, do swap-out, Thread(35:2/W0)
[PageFaultHandler][SwapOut] page Page(62:2/14) frame Frame(14)file Openfile(4:2/0)
[PageFaultHandler][SwapOut] block no 62
[Info][PageTableEntry][do_lock] iorb IORB(Id(318),Device(0),Page(62:2/14),Diskblock(126),FileWrite,Openfile(4:2/0),Thread(35:2/W1)) this Page(62:2/14)
[Info][PageTableEntry][do_lock] Get frame Frame(14)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(48:2/25)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(25) Page(48:2/25)Thread(24:4/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(9:4/null) setframe Frame(25)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(319),Device(0),Page(9:4/25),Diskblock(201),FileRead,Openfile(12:4/0),Thread(24:4/W1)) this Page(9:4/25)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(24:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(24:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(25)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(25:5/9)
[PageFaultHandler][do_handlePageFault] thread Thread(32:5/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 13841 offset = 529 page no = 13 Thread(32:5/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(32:5/RU) 22 Page(13:5/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(12) Reserved by Task(5/L)
[PageFaultHandler][do_handlePageFault] page Page(13:5/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(63:3/12)
[PageFaultHandler][do_handlePageFault] Frame(12) is dirty, do swap-out, Thread(32:5/W0)
[PageFaultHandler][SwapOut] page Page(63:3/12) frame Frame(12)file Openfile(30:5/0)
[PageFaultHandler][SwapOut] block no 63
[Info][PageTableEntry][do_lock] iorb IORB(Id(320),Device(0),Page(63:3/12),Diskblock(63),FileWrite,Openfile(30:5/0),Thread(32:5/W1)) this Page(63:3/12)
[Info][PageTableEntry][do_lock] Get frame Frame(12)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(25:2/16)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(16) Page(25:2/16)Thread(27:2/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(13:2/null) setframe Frame(16)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(321),Device(0),Page(13:2/16),Diskblock(77),FileRead,Openfile(4:2/0),Thread(27:2/W1)) this Page(13:2/16)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 44011/250000[PageTableEntry][do_unlock] this Page(1:2/13)
[PageFaultHandler][do_handlePageFault] thread Thread(11:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(46:4/10)
[PageFaultHandler][do_handlePageFault] thread Thread(23:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(24:4/5)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(5) Page(24:4/5)Thread(17:4/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(1:4/null) setframe Frame(5)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(322),Device(0),Page(1:4/5),Diskblock(193),FileRead,Openfile(12:4/0),Thread(17:4/W1)) this Page(1:4/5)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(17:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(17:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(54:2/26)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(26) Page(54:2/26)Thread(33:2/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(46:2/null) setframe Frame(26)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(323),Device(0),Page(46:2/26),Diskblock(110),FileRead,Openfile(4:2/0),Thread(33:2/W1)) this Page(46:2/26)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(33:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(33:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(62:2/14)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(14) Page(62:2/14)Thread(35:2/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(31:2/null) setframe Frame(14)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(324),Device(0),Page(31:2/14),Diskblock(95),FileRead,Openfile(4:2/0),Thread(35:2/W1)) this Page(31:2/14)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(35:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(35:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(14)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 48945 offset = 817 page no = 47 Thread(23:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(23:4/RU) 22 Page(47:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(4) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(47:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(10:4/4)
[PageFaultHandler][do_handlePageFault] page Page(47:4/null) setframe Frame(4)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(325),Device(0),Page(47:4/4),Diskblock(239),FileRead,Openfile(12:4/0),Thread(23:4/W1)) this Page(47:4/4)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(23:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(23:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(9:4/25)
[PageFaultHandler][do_handlePageFault] thread Thread(24:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 19783 offset = 327 page no = 19 Thread(24:4/RU)
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(63:3/12)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(12) Page(63:3/12)Thread(32:5/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(13:5/null) setframe Frame(12)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(326),Device(0),Page(13:5/12),Diskblock(13),FileRead,Openfile(30:5/0),Thread(32:5/W1)) this Page(13:5/12)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(32:5/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(32:5/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(12)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 9640 offset = 424 page no = 9 Thread(11:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(11:2/RU) 21 Page(9:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(25) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(9:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(9:4/25)
[PageFaultHandler][do_handlePageFault] Frame(25) is dirty, do swap-out, Thread(11:2/W0)
[PageFaultHandler][SwapOut] page Page(9:4/25) frame Frame(25)file Openfile(4:2/0)
[PageFaultHandler][SwapOut] block no 9
[Info][PageTableEntry][do_lock] iorb IORB(Id(327),Device(0),Page(9:4/25),Diskblock(73),FileWrite,Openfile(4:2/0),Thread(11:2/W1)) this Page(9:4/25)
[Info][PageTableEntry][do_lock] Get frame Frame(25)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(13:2/16)
[PageFaultHandler][do_handlePageFault] thread Thread(27:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
Simulation progress: 45070/250000[MMU][do_refer] address = 13211 offset = 923 page no = 12 Thread(24:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(24:4/RU) 22 Page(12:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(16) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(12:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(13:2/16)
[PageFaultHandler][do_handlePageFault] page Page(12:4/null) setframe Frame(16)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(328),Device(0),Page(12:4/16),Diskblock(204),FileRead,Openfile(12:4/0),Thread(24:4/W1)) this Page(12:4/16)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(24:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(24:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(1:4/5)
[PageFaultHandler][do_handlePageFault] thread Thread(17:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(46:2/26)
[PageFaultHandler][do_handlePageFault] thread Thread(33:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(31:2/14)
[PageFaultHandler][do_handlePageFault] thread Thread(35:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 44438 offset = 406 page no = 43 Thread(27:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(27:2/RU) 21 Page(43:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(0) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(43:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(37:4/0)
[PageFaultHandler][do_handlePageFault] Frame(0) is dirty, do swap-out, Thread(27:2/W0)
[PageFaultHandler][SwapOut] page Page(37:4/0) frame Frame(0)file Openfile(4:2/0)
[PageFaultHandler][SwapOut] block no 37
[Info][PageTableEntry][do_lock] iorb IORB(Id(329),Device(0),Page(37:4/0),Diskblock(101),FileWrite,Openfile(4:2/0),Thread(27:2/W1)) this Page(37:4/0)
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 62710 offset = 246 page no = 61 Thread(35:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(35:2/RU) 21 Page(61:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(22) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(61:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(40:2/22)
[PageFaultHandler][do_handlePageFault] page Page(61:2/null) setframe Frame(22)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(330),Device(0),Page(61:2/22),Diskblock(125),FileRead,Openfile(4:2/0),Thread(35:2/W1)) this Page(61:2/22)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(35:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(35:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(22)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(47:4/4)
[PageFaultHandler][do_handlePageFault] thread Thread(23:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(13:5/12)
[PageFaultHandler][do_handlePageFault] thread Thread(32:5/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(9:4/25)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(25) Page(9:4/25)Thread(11:2/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(9:2/null) setframe Frame(25)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(331),Device(0),Page(9:2/25),Diskblock(73),FileRead,Openfile(4:2/0),Thread(11:2/W1)) this Page(9:2/25)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(11:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(11:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(25)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 8745 offset = 553 page no = 8 Thread(32:5/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(32:5/RU) 22 Page(8:5/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(4) Reserved by Task(5/L)
[PageFaultHandler][do_handlePageFault] page Page(8:5/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(47:4/4)
[PageFaultHandler][do_handlePageFault] Frame(4) is dirty, do swap-out, Thread(32:5/W0)
[PageFaultHandler][SwapOut] page Page(47:4/4) frame Frame(4)file Openfile(30:5/0)
[PageFaultHandler][SwapOut] block no 47
[Info][PageTableEntry][do_lock] iorb IORB(Id(332),Device(0),Page(47:4/4),Diskblock(47),FileWrite,Openfile(30:5/0),Thread(32:5/W1)) this Page(47:4/4)
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 46006/250000[PageTableEntry][do_unlock] this Page(12:4/16)
[PageFaultHandler][do_handlePageFault] thread Thread(24:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(37:4/0)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(0) Page(37:4/0)Thread(27:2/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(43:2/null) setframe Frame(0)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(333),Device(0),Page(43:2/0),Diskblock(107),FileRead,Openfile(4:2/0),Thread(27:2/W1)) this Page(43:2/0)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 17224 offset = 840 page no = 16 Thread(24:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(24:4/RU) 21 Page(16:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(20) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(16:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(41:2/20)
[PageFaultHandler][do_handlePageFault] Frame(20) is dirty, do swap-out, Thread(24:4/W0)
[PageFaultHandler][SwapOut] page Page(41:2/20) frame Frame(20)file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 41
[Info][PageTableEntry][do_lock] iorb IORB(Id(334),Device(0),Page(41:2/20),Diskblock(233),FileWrite,Openfile(12:4/0),Thread(24:4/W1)) this Page(41:2/20)
[Info][PageTableEntry][do_lock] Get frame Frame(20)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(61:2/22)
[PageFaultHandler][do_handlePageFault] thread Thread(35:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(9:2/25)
[PageFaultHandler][do_handlePageFault] thread Thread(11:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(47:4/4)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(4) Page(47:4/4)Thread(32:5/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(8:5/null) setframe Frame(4)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(335),Device(0),Page(8:5/4),Diskblock(8),FileRead,Openfile(30:5/0),Thread(32:5/W1)) this Page(8:5/4)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(32:5/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(32:5/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 4404 offset = 308 page no = 4 Thread(35:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(35:2/RU) 22 Page(4:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(8) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(4:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(24:2/8)
[PageFaultHandler][do_handlePageFault] page Page(4:2/null) setframe Frame(8)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(336),Device(0),Page(4:2/8),Diskblock(68),FileRead,Openfile(4:2/0),Thread(35:2/W1)) this Page(4:2/8)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(35:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(35:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(43:2/0)
[PageFaultHandler][do_handlePageFault] thread Thread(27:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 23596 offset = 44 page no = 23 Thread(27:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(27:2/RU) 22 Page(23:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(0) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(23:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(43:2/0)
[PageFaultHandler][do_handlePageFault] page Page(23:2/null) setframe Frame(0)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(337),Device(0),Page(23:2/0),Diskblock(87),FileRead,Openfile(4:2/0),Thread(27:2/W1)) this Page(23:2/0)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(338),Device(2),Page(1:2/13),Diskblock(15),FileRead,Openfile(42:2/2),Thread(11:2/W0)) this Page(1:2/13)
[Info][PageTableEntry][do_lock] Get frame Frame(13)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(41:2/20)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(20) Page(41:2/20)Thread(24:4/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(16:4/null) setframe Frame(20)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(339),Device(0),Page(16:4/20),Diskblock(208),FileRead,Openfile(12:4/0),Thread(24:4/W1)) this Page(16:4/20)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(24:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(24:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(20)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(8:5/4)
[PageFaultHandler][do_handlePageFault] thread Thread(32:5/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(4:2/8)
[PageFaultHandler][do_handlePageFault] thread Thread(35:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 28570 offset = 922 page no = 27 Thread(35:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(35:2/RU) 21 Page(27:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(4) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(27:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(8:5/4)
[PageFaultHandler][do_handlePageFault] Frame(4) is dirty, do swap-out, Thread(35:2/W0)
[PageFaultHandler][SwapOut] page Page(8:5/4) frame Frame(4)file Openfile(4:2/0)
[PageFaultHandler][SwapOut] block no 8
[Info][PageTableEntry][do_lock] iorb IORB(Id(340),Device(0),Page(8:5/4),Diskblock(72),FileWrite,Openfile(4:2/0),Thread(35:2/W1)) this Page(8:5/4)
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 47002/250000[MMU][do_refer] address = 3914 offset = 842 page no = 3 Thread(32:5/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(32:5/RU) 22 Page(3:5/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(2) Reserved by Task(5/L)
[PageFaultHandler][do_handlePageFault] page Page(3:5/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(12:2/2)
[PageFaultHandler][do_handlePageFault] Frame(2) is dirty, do swap-out, Thread(32:5/W0)
[PageFaultHandler][SwapOut] page Page(12:2/2) frame Frame(2)file Openfile(30:5/0)
[PageFaultHandler][SwapOut] block no 12
[Info][PageTableEntry][do_lock] iorb IORB(Id(341),Device(0),Page(12:2/2),Diskblock(12),FileWrite,Openfile(30:5/0),Thread(32:5/W1)) this Page(12:2/2)
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(23:2/0)
[PageFaultHandler][do_handlePageFault] thread Thread(27:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 30895 offset = 175 page no = 30 Thread(27:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(27:2/RU) 22 Page(30:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(1) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(30:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(8:4/1)
[PageFaultHandler][do_handlePageFault] page Page(30:2/null) setframe Frame(1)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(342),Device(0),Page(30:2/1),Diskblock(94),FileRead,Openfile(4:2/0),Thread(27:2/W1)) this Page(30:2/1)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(16:4/20)
[PageFaultHandler][do_handlePageFault] thread Thread(24:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(8:5/4)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(4) Page(8:5/4)Thread(35:2/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(27:2/null) setframe Frame(4)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(343),Device(0),Page(27:2/4),Diskblock(91),FileRead,Openfile(4:2/0),Thread(35:2/W1)) this Page(27:2/4)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(35:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(35:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(1:2/13)
[PageTableEntry][do_unlock] this Page(12:2/2)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(2) Page(12:2/2)Thread(32:5/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(3:5/null) setframe Frame(2)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(344),Device(0),Page(3:5/2),Diskblock(3),FileRead,Openfile(30:5/0),Thread(32:5/W1)) this Page(3:5/2)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(32:5/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(32:5/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(30:2/1)
[PageFaultHandler][do_handlePageFault] thread Thread(27:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(27:2/4)
[PageFaultHandler][do_handlePageFault] thread Thread(35:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(3:5/2)
[PageFaultHandler][do_handlePageFault] thread Thread(32:5/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 28558 offset = 910 page no = 27 Thread(35:2/RU)
[MMU][do_refer] Do memory write.
Simulation progress: 48020/250000[MMU][do_refer] address = 27450 offset = 826 page no = 26 Thread(32:5/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(32:5/RU) 22 Page(26:5/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(2) Reserved by Task(5/L)
[PageFaultHandler][do_handlePageFault] page Page(26:5/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(3:5/2)
[PageFaultHandler][do_handlePageFault] Frame(2) is dirty, do swap-out, Thread(32:5/W0)
[PageFaultHandler][SwapOut] page Page(3:5/2) frame Frame(2)file Openfile(30:5/0)
[PageFaultHandler][SwapOut] block no 3
[Info][PageTableEntry][do_lock] iorb IORB(Id(345),Device(0),Page(3:5/2),Diskblock(3),FileWrite,Openfile(30:5/0),Thread(32:5/W1)) this Page(3:5/2)
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(3:5/2)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(2) Page(3:5/2)Thread(32:5/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(26:5/null) setframe Frame(2)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(346),Device(0),Page(26:5/2),Diskblock(26),FileRead,Openfile(30:5/0),Thread(32:5/W1)) this Page(26:5/2)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(32:5/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(32:5/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(26:5/2)
[PageFaultHandler][do_handlePageFault] thread Thread(32:5/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[Info][PageTableEntry][do_lock] iorb IORB(Id(347),Device(1),Page(1:2/13),Diskblock(0),FileWrite,Openfile(44:2/1),Thread(27:2/W0)) this Page(1:2/13)
[Info][PageTableEntry][do_lock] Get frame Frame(13)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(1:2/13)
[MMU][do_refer] address = 48792 offset = 664 page no = 47 Thread(36:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(36:4/RU) 22 Page(47:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(24) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(47:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(63:2/24)
[PageFaultHandler][do_handlePageFault] Frame(24) is dirty, do swap-out, Thread(36:4/W0)
[PageFaultHandler][SwapOut] page Page(63:2/24) frame Frame(24)file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 63
[Info][PageTableEntry][do_lock] iorb IORB(Id(348),Device(0),Page(63:2/24),Diskblock(255),FileWrite,Openfile(12:4/0),Thread(36:4/W1)) this Page(63:2/24)
[Info][PageTableEntry][do_lock] Get frame Frame(24)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 10984 offset = 744 page no = 10 Thread(28:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(28:4/RU) 21 Page(10:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(17) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(10:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(5:4/17)
[PageFaultHandler][do_handlePageFault] page Page(10:4/null) setframe Frame(17)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(349),Device(0),Page(10:4/17),Diskblock(202),FileRead,Openfile(12:4/0),Thread(28:4/W1)) this Page(10:4/17)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(28:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(28:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 49003/250000[PageTableEntry][do_unlock] this Page(63:2/24)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(24) Page(63:2/24)Thread(36:4/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(47:4/null) setframe Frame(24)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(350),Device(0),Page(47:4/24),Diskblock(239),FileRead,Openfile(12:4/0),Thread(36:4/W1)) this Page(47:4/24)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(36:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(36:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(24)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(10:4/17)
[PageFaultHandler][do_handlePageFault] thread Thread(28:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 47009 offset = 929 page no = 45 Thread(19:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(19:4/RU) 22 Page(45:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(7) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(45:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(28:4/7)
[PageFaultHandler][do_handlePageFault] page Page(45:4/null) setframe Frame(7)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(351),Device(0),Page(45:4/7),Diskblock(237),FileRead,Openfile(12:4/0),Thread(19:4/W1)) this Page(45:4/7)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(19:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(19:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(7)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(47:4/24)
[PageFaultHandler][do_handlePageFault] thread Thread(36:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[Info][PageTableEntry][do_lock] iorb IORB(Id(352),Device(1),Page(1:4/5),Diskblock(17),FileWrite,Openfile(44:2/1),Thread(37:4/W0)) this Page(1:4/5)
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 13586 offset = 274 page no = 13 Thread(28:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(28:4/RU) 22 Page(13:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(27) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(13:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(19:2/27)
[PageFaultHandler][do_handlePageFault] page Page(13:4/null) setframe Frame(27)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(353),Device(0),Page(13:4/27),Diskblock(205),FileRead,Openfile(12:4/0),Thread(28:4/W1)) this Page(13:4/27)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(28:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(28:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(1:4/5)
[PageTableEntry][do_unlock] this Page(45:4/7)
[PageFaultHandler][do_handlePageFault] thread Thread(19:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(13:4/27)
[PageFaultHandler][do_handlePageFault] thread Thread(28:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[Info][PageTableEntry][do_lock] iorb IORB(Id(354),Device(1),Page(1:4/5),Diskblock(17),FileRead,Openfile(44:2/1),Thread(19:4/W0)) this Page(1:4/5)
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(1:4/5)
Simulation progress: 50056/250000[MMU][do_refer] address = 35644 offset = 828 page no = 34 Thread(37:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(37:4/RU) 21 Page(34:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(7) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(34:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(45:4/7)
[PageFaultHandler][do_handlePageFault] Frame(7) is dirty, do swap-out, Thread(37:4/W0)
[PageFaultHandler][SwapOut] page Page(45:4/7) frame Frame(7)file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 45
[Info][PageTableEntry][do_lock] iorb IORB(Id(355),Device(0),Page(45:4/7),Diskblock(237),FileWrite,Openfile(12:4/0),Thread(37:4/W1)) this Page(45:4/7)
[Info][PageTableEntry][do_lock] Get frame Frame(7)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 14265 offset = 953 page no = 13 Thread(35:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(35:2/RU) 21 Page(13:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(29) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(13:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(44:2/29)
[PageFaultHandler][do_handlePageFault] page Page(13:2/null) setframe Frame(29)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(356),Device(0),Page(13:2/29),Diskblock(77),FileRead,Openfile(4:2/0),Thread(35:2/W1)) this Page(13:2/29)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(35:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(35:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 56235 offset = 939 page no = 54 Thread(36:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(36:4/RU) 21 Page(54:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(10) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(54:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(46:4/10)
[PageFaultHandler][do_handlePageFault] Frame(10) is dirty, do swap-out, Thread(36:4/W0)
[PageFaultHandler][SwapOut] page Page(46:4/10) frame Frame(10)file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 46
[Info][PageTableEntry][do_lock] iorb IORB(Id(357),Device(0),Page(46:4/10),Diskblock(238),FileWrite,Openfile(12:4/0),Thread(36:4/W1)) this Page(46:4/10)
[Info][PageTableEntry][do_lock] Get frame Frame(10)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(45:4/7)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(7) Page(45:4/7)Thread(37:4/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(34:4/null) setframe Frame(7)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(358),Device(0),Page(34:4/7),Diskblock(226),FileRead,Openfile(12:4/0),Thread(37:4/W1)) this Page(34:4/7)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(37:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(37:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(7)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 35341 offset = 525 page no = 34 Thread(28:4/RU)
[PageTableEntry][do_unlock] this Page(13:2/29)
[PageFaultHandler][do_handlePageFault] thread Thread(35:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 39911 offset = 999 page no = 38 Thread(27:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(27:2/RU) 22 Page(38:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(13) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(38:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(1:2/13)
[PageFaultHandler][do_handlePageFault] Frame(13) is dirty, do swap-out, Thread(27:2/W0)
[PageFaultHandler][SwapOut] page Page(1:2/13) frame Frame(13)file Openfile(4:2/0)
[PageFaultHandler][SwapOut] block no 1
[Info][PageTableEntry][do_lock] iorb IORB(Id(359),Device(0),Page(1:2/13),Diskblock(65),FileWrite,Openfile(4:2/0),Thread(27:2/W1)) this Page(1:2/13)
[Info][PageTableEntry][do_lock] Get frame Frame(13)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 59626 offset = 234 page no = 58 Thread(35:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(35:2/RU) 21 Page(58:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(9) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(58:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(25:5/9)
[PageFaultHandler][do_handlePageFault] page Page(58:2/null) setframe Frame(9)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(360),Device(0),Page(58:2/9),Diskblock(122),FileRead,Openfile(4:2/0),Thread(35:2/W1)) this Page(58:2/9)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(35:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(35:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(46:4/10)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(10) Page(46:4/10)Thread(36:4/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(54:4/null) setframe Frame(10)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(361),Device(0),Page(54:4/10),Diskblock(246),FileRead,Openfile(12:4/0),Thread(36:4/W1)) this Page(54:4/10)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(36:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(36:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(10)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(34:4/7)
[PageFaultHandler][do_handlePageFault] thread Thread(37:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] Do memory write.
Simulation progress: 51021/250000[PageTableEntry][do_unlock] this Page(1:2/13)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(13) Page(1:2/13)Thread(27:2/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(38:2/null) setframe Frame(13)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(362),Device(0),Page(38:2/13),Diskblock(102),FileRead,Openfile(4:2/0),Thread(27:2/W1)) this Page(38:2/13)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(13)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 43451 offset = 443 page no = 42 Thread(37:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(37:4/RU) 22 Page(42:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(12) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(42:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(13:5/12)
[PageFaultHandler][do_handlePageFault] Frame(12) is dirty, do swap-out, Thread(37:4/W0)
[PageFaultHandler][SwapOut] page Page(13:5/12) frame Frame(12)file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 13
[Info][PageTableEntry][do_lock] iorb IORB(Id(363),Device(0),Page(13:5/12),Diskblock(205),FileWrite,Openfile(12:4/0),Thread(37:4/W1)) this Page(13:5/12)
[Info][PageTableEntry][do_lock] Get frame Frame(12)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 19479 offset = 23 page no = 19 Thread(28:4/RU)
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(58:2/9)
[PageFaultHandler][do_handlePageFault] thread Thread(35:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 1960 offset = 936 page no = 1 Thread(26:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(26:2/RU) 22 Page(1:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(9) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(1:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(58:2/9)
[PageFaultHandler][do_handlePageFault] page Page(1:2/null) setframe Frame(9)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(364),Device(0),Page(1:2/9),Diskblock(65),FileRead,Openfile(4:2/0),Thread(26:2/W1)) this Page(1:2/9)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(26:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(26:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 58421 offset = 53 page no = 57 Thread(35:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(35:2/RU) 22 Page(57:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(26) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(57:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(46:2/26)
[PageFaultHandler][do_handlePageFault] Frame(26) is dirty, do swap-out, Thread(35:2/W0)
[PageFaultHandler][SwapOut] page Page(46:2/26) frame Frame(26)file Openfile(4:2/0)
[PageFaultHandler][SwapOut] block no 46
[Info][PageTableEntry][do_lock] iorb IORB(Id(365),Device(0),Page(46:2/26),Diskblock(110),FileWrite,Openfile(4:2/0),Thread(35:2/W1)) this Page(46:2/26)
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(54:4/10)
[PageFaultHandler][do_handlePageFault] thread Thread(36:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(38:2/13)
[PageFaultHandler][do_handlePageFault] thread Thread(27:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[Info][PageTableEntry][do_lock] iorb IORB(Id(366),Device(1),Page(4:2/8),Diskblock(0),FileWrite,Openfile(44:2/1),Thread(27:2/W0)) this Page(4:2/8)
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 27035 offset = 411 page no = 26 Thread(36:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(36:4/RU) 21 Page(26:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(10) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(26:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(54:4/10)
[PageFaultHandler][do_handlePageFault] page Page(26:4/null) setframe Frame(10)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(367),Device(0),Page(26:4/10),Diskblock(218),FileRead,Openfile(12:4/0),Thread(36:4/W1)) this Page(26:4/10)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(36:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(36:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(10)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(4:2/8)
[PageTableEntry][do_unlock] this Page(13:5/12)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(12) Page(13:5/12)Thread(37:4/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(42:4/null) setframe Frame(12)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(368),Device(0),Page(42:4/12),Diskblock(234),FileRead,Openfile(12:4/0),Thread(37:4/W1)) this Page(42:4/12)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(37:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(37:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(12)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(1:2/9)
[PageFaultHandler][do_handlePageFault] thread Thread(26:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 1873 offset = 849 page no = 1 Thread(27:2/RU)
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(46:2/26)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(26) Page(46:2/26)Thread(35:2/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(57:2/null) setframe Frame(26)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(369),Device(0),Page(57:2/26),Diskblock(121),FileRead,Openfile(4:2/0),Thread(35:2/W1)) this Page(57:2/26)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(35:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(35:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 52041/250000[Info][PageTableEntry][do_lock] iorb IORB(Id(370),Device(1),Page(1:2/9),Diskblock(0),FileRead,Openfile(44:2/1),Thread(27:2/W0)) this Page(1:2/9)
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(1:2/9)
[MMU][do_refer] address = 37021 offset = 157 page no = 36 Thread(27:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(27:2/RU) 21 Page(36:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(13) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(36:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(38:2/13)
[PageFaultHandler][do_handlePageFault] Frame(13) is dirty, do swap-out, Thread(27:2/W0)
[PageFaultHandler][SwapOut] page Page(38:2/13) frame Frame(13)file Openfile(4:2/0)
[PageFaultHandler][SwapOut] block no 38
[Info][PageTableEntry][do_lock] iorb IORB(Id(371),Device(0),Page(38:2/13),Diskblock(102),FileWrite,Openfile(4:2/0),Thread(27:2/W1)) this Page(38:2/13)
[Info][PageTableEntry][do_lock] Get frame Frame(13)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(26:4/10)
[PageFaultHandler][do_handlePageFault] thread Thread(36:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 12193 offset = 929 page no = 11 Thread(36:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(36:4/RU) 22 Page(11:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(18) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(11:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(23:5/18)
[PageFaultHandler][do_handlePageFault] page Page(11:4/null) setframe Frame(18)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(372),Device(0),Page(11:4/18),Diskblock(203),FileRead,Openfile(12:4/0),Thread(36:4/W1)) this Page(11:4/18)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(36:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(36:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(42:4/12)
[PageFaultHandler][do_handlePageFault] thread Thread(37:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(57:2/26)
[PageFaultHandler][do_handlePageFault] thread Thread(35:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(38:2/13)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(13) Page(38:2/13)Thread(27:2/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(36:2/null) setframe Frame(13)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(373),Device(0),Page(36:2/13),Diskblock(100),FileRead,Openfile(4:2/0),Thread(27:2/W1)) this Page(36:2/13)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(13)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 60282 offset = 890 page no = 58 Thread(35:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(35:2/RU) 22 Page(58:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(28) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(58:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(19:4/28)
[PageFaultHandler][do_handlePageFault] Frame(28) is dirty, do swap-out, Thread(35:2/W0)
[PageFaultHandler][SwapOut] page Page(19:4/28) frame Frame(28)file Openfile(4:2/0)
[PageFaultHandler][SwapOut] block no 19
[Info][PageTableEntry][do_lock] iorb IORB(Id(374),Device(0),Page(19:4/28),Diskblock(83),FileWrite,Openfile(4:2/0),Thread(35:2/W1)) this Page(19:4/28)
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(11:4/18)
[PageFaultHandler][do_handlePageFault] thread Thread(36:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(36:2/13)
[PageFaultHandler][do_handlePageFault] thread Thread(27:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(19:4/28)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(28) Page(19:4/28)Thread(35:2/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(58:2/null) setframe Frame(28)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(375),Device(0),Page(58:2/28),Diskblock(122),FileRead,Openfile(4:2/0),Thread(35:2/W1)) this Page(58:2/28)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(35:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(35:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(58:2/28)
[PageFaultHandler][do_handlePageFault] thread Thread(35:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
Simulation progress: 53032/250000[MMU][do_refer] address = 18908 offset = 476 page no = 18 Thread(36:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(36:4/RU) 21 Page(18:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(13) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(18:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(36:2/13)
[PageFaultHandler][do_handlePageFault] page Page(18:4/null) setframe Frame(13)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(376),Device(0),Page(18:4/13),Diskblock(210),FileRead,Openfile(12:4/0),Thread(36:4/W1)) this Page(18:4/13)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(36:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(36:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(13)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 51631 offset = 431 page no = 50 Thread(37:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(37:4/RU) 22 Page(50:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(22) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(50:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(61:2/22)
[PageFaultHandler][do_handlePageFault] page Page(50:4/null) setframe Frame(22)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(377),Device(0),Page(50:4/22),Diskblock(242),FileRead,Openfile(12:4/0),Thread(37:4/W1)) this Page(50:4/22)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(37:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(37:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(22)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 21426 offset = 946 page no = 20 Thread(35:2/RU)
[MMU][do_refer] Do memory write.
[Info][PageTableEntry][do_lock] iorb IORB(Id(378),Device(1),Page(1:2/9),Diskblock(4),FileRead,Openfile(46:2/1),Thread(35:2/W0)) this Page(1:2/9)
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(18:4/13)
[PageFaultHandler][do_handlePageFault] thread Thread(36:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(1:2/9)
[PageTableEntry][do_unlock] this Page(50:4/22)
[PageFaultHandler][do_handlePageFault] thread Thread(37:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 64497 offset = 1009 page no = 62 Thread(35:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(35:2/RU) 21 Page(62:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(22) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(62:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(50:4/22)
[PageFaultHandler][do_handlePageFault] Frame(22) is dirty, do swap-out, Thread(35:2/W0)
[PageFaultHandler][SwapOut] page Page(50:4/22) frame Frame(22)file Openfile(4:2/0)
[PageFaultHandler][SwapOut] block no 50
[Info][PageTableEntry][do_lock] iorb IORB(Id(379),Device(0),Page(50:4/22),Diskblock(114),FileWrite,Openfile(4:2/0),Thread(35:2/W1)) this Page(50:4/22)
[Info][PageTableEntry][do_lock] Get frame Frame(22)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 54010/250000[PageTableEntry][do_unlock] this Page(50:4/22)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(22) Page(50:4/22)Thread(35:2/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(62:2/null) setframe Frame(22)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(380),Device(0),Page(62:2/22),Diskblock(126),FileRead,Openfile(4:2/0),Thread(35:2/W1)) this Page(62:2/22)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(35:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(35:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(22)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 43270 offset = 262 page no = 42 Thread(27:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(27:2/RU) 22 Page(42:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(23) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(42:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(39:4/23)
[PageFaultHandler][do_handlePageFault] page Page(42:2/null) setframe Frame(23)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(381),Device(0),Page(42:2/23),Diskblock(106),FileRead,Openfile(4:2/0),Thread(27:2/W1)) this Page(42:2/23)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(23)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(62:2/22)
[PageFaultHandler][do_handlePageFault] thread Thread(35:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(42:2/23)
[PageFaultHandler][do_handlePageFault] thread Thread(27:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 28705 offset = 33 page no = 28 Thread(35:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(35:2/RU) 21 Page(28:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(23) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(28:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(42:2/23)
[PageFaultHandler][do_handlePageFault] Frame(23) is dirty, do swap-out, Thread(35:2/W0)
[PageFaultHandler][SwapOut] page Page(42:2/23) frame Frame(23)file Openfile(4:2/0)
[PageFaultHandler][SwapOut] block no 42
[Info][PageTableEntry][do_lock] iorb IORB(Id(382),Device(0),Page(42:2/23),Diskblock(106),FileWrite,Openfile(4:2/0),Thread(35:2/W1)) this Page(42:2/23)
[Info][PageTableEntry][do_lock] Get frame Frame(23)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(42:2/23)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(23) Page(42:2/23)Thread(35:2/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(28:2/null) setframe Frame(23)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(383),Device(0),Page(28:2/23),Diskblock(92),FileRead,Openfile(4:2/0),Thread(35:2/W1)) this Page(28:2/23)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(35:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(35:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(23)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(28:2/23)
[PageFaultHandler][do_handlePageFault] thread Thread(35:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 9508 offset = 292 page no = 9 Thread(36:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(36:4/RU) 22 Page(9:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(8) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(9:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(4:2/8)
[PageFaultHandler][do_handlePageFault] Frame(8) is dirty, do swap-out, Thread(36:4/W0)
[PageFaultHandler][SwapOut] page Page(4:2/8) frame Frame(8)file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 4
[Info][PageTableEntry][do_lock] iorb IORB(Id(384),Device(0),Page(4:2/8),Diskblock(196),FileWrite,Openfile(12:4/0),Thread(36:4/W1)) this Page(4:2/8)
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 10739 offset = 499 page no = 10 Thread(37:4/RU)
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 55793 offset = 497 page no = 54 Thread(37:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(37:4/RU) 22 Page(54:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(20) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(54:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(16:4/20)
[PageFaultHandler][do_handlePageFault] page Page(54:4/null) setframe Frame(20)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(385),Device(0),Page(54:4/20),Diskblock(246),FileRead,Openfile(12:4/0),Thread(37:4/W1)) this Page(54:4/20)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(37:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(37:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(20)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 63604 offset = 116 page no = 62 Thread(35:2/RU)
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(4:2/8)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(8) Page(4:2/8)Thread(36:4/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(9:4/null) setframe Frame(8)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(386),Device(0),Page(9:4/8),Diskblock(201),FileRead,Openfile(12:4/0),Thread(36:4/W1)) this Page(9:4/8)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(36:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(36:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 43264 offset = 256 page no = 42 Thread(27:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(27:2/RU) 21 Page(42:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(19) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(42:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(51:4/19)
[PageFaultHandler][do_handlePageFault] Frame(19) is dirty, do swap-out, Thread(27:2/W0)
[PageFaultHandler][SwapOut] page Page(51:4/19) frame Frame(19)file Openfile(4:2/0)
[PageFaultHandler][SwapOut] block no 51
[Info][PageTableEntry][do_lock] iorb IORB(Id(387),Device(0),Page(51:4/19),Diskblock(115),FileWrite,Openfile(4:2/0),Thread(27:2/W1)) this Page(51:4/19)
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(388),Device(1),Page(1:2/9),Diskblock(18),FileWrite,Openfile(48:4/1),Thread(35:2/W0)) this Page(1:2/9)
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(1:2/9)
[PageTableEntry][do_unlock] this Page(54:4/20)
[PageFaultHandler][do_handlePageFault] thread Thread(37:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
Simulation progress: 55020/250000[PageTableEntry][do_unlock] this Page(9:4/8)
[PageFaultHandler][do_handlePageFault] thread Thread(36:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(51:4/19)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(19) Page(51:4/19)Thread(27:2/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(42:2/null) setframe Frame(19)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(389),Device(0),Page(42:2/19),Diskblock(106),FileRead,Openfile(4:2/0),Thread(27:2/W1)) this Page(42:2/19)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 36542 offset = 702 page no = 35 Thread(36:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(36:4/RU) 22 Page(35:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(0) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(35:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(23:2/0)
[PageFaultHandler][do_handlePageFault] Frame(0) is dirty, do swap-out, Thread(36:4/W0)
[PageFaultHandler][SwapOut] page Page(23:2/0) frame Frame(0)file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 23
[Info][PageTableEntry][do_lock] iorb IORB(Id(390),Device(0),Page(23:2/0),Diskblock(215),FileWrite,Openfile(12:4/0),Thread(36:4/W1)) this Page(23:2/0)
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(42:2/19)
[PageFaultHandler][do_handlePageFault] thread Thread(27:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 64432 offset = 944 page no = 62 Thread(35:2/RU)
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(23:2/0)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(0) Page(23:2/0)Thread(36:4/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(35:4/null) setframe Frame(0)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(391),Device(0),Page(35:4/0),Diskblock(227),FileRead,Openfile(12:4/0),Thread(36:4/W1)) this Page(35:4/0)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(36:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(36:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(35:4/0)
[PageFaultHandler][do_handlePageFault] thread Thread(36:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 26312 offset = 712 page no = 25 Thread(38:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(38:2/RU) 22 Page(25:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(19) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(25:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(42:2/19)
[PageFaultHandler][do_handlePageFault] page Page(25:2/null) setframe Frame(19)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(392),Device(0),Page(25:2/19),Diskblock(89),FileRead,Openfile(4:2/0),Thread(38:2/W1)) this Page(25:2/19)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(38:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(38:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 51528 offset = 328 page no = 50 Thread(36:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(36:4/RU) 21 Page(50:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(1) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(50:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(30:2/1)
[PageFaultHandler][do_handlePageFault] Frame(1) is dirty, do swap-out, Thread(36:4/W0)
[PageFaultHandler][SwapOut] page Page(30:2/1) frame Frame(1)file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 30
[Info][PageTableEntry][do_lock] iorb IORB(Id(393),Device(0),Page(30:2/1),Diskblock(222),FileWrite,Openfile(12:4/0),Thread(36:4/W1)) this Page(30:2/1)
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(25:2/19)
[PageFaultHandler][do_handlePageFault] thread Thread(38:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
Simulation progress: 56033/250000[PageTableEntry][do_unlock] this Page(30:2/1)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(1) Page(30:2/1)Thread(36:4/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(50:4/null) setframe Frame(1)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(394),Device(0),Page(50:4/1),Diskblock(242),FileRead,Openfile(12:4/0),Thread(36:4/W1)) this Page(50:4/1)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(36:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(36:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 8305 offset = 113 page no = 8 Thread(27:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(27:2/RU) 22 Page(8:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(4) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(8:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(27:2/4)
[PageFaultHandler][do_handlePageFault] Frame(4) is dirty, do swap-out, Thread(27:2/W0)
[PageFaultHandler][SwapOut] page Page(27:2/4) frame Frame(4)file Openfile(4:2/0)
[PageFaultHandler][SwapOut] block no 27
[Info][PageTableEntry][do_lock] iorb IORB(Id(395),Device(0),Page(27:2/4),Diskblock(91),FileWrite,Openfile(4:2/0),Thread(27:2/W1)) this Page(27:2/4)
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(50:4/1)
[PageFaultHandler][do_handlePageFault] thread Thread(36:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 21224 offset = 744 page no = 20 Thread(36:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(36:4/RU) 21 Page(20:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(1) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(20:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(50:4/1)
[PageFaultHandler][do_handlePageFault] page Page(20:4/null) setframe Frame(1)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(396),Device(0),Page(20:4/1),Diskblock(212),FileRead,Openfile(12:4/0),Thread(36:4/W1)) this Page(20:4/1)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(36:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(36:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(27:2/4)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(4) Page(27:2/4)Thread(27:2/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(8:2/null) setframe Frame(4)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(397),Device(0),Page(8:2/4),Diskblock(72),FileRead,Openfile(4:2/0),Thread(27:2/W1)) this Page(8:2/4)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(20:4/1)
[PageFaultHandler][do_handlePageFault] thread Thread(36:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(8:2/4)
[PageFaultHandler][do_handlePageFault] thread Thread(27:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
Simulation progress: 57084/250000[MMU][do_refer] address = 21320 offset = 840 page no = 20 Thread(36:4/RU)
[MMU][do_refer] Do memory read.
[Info][PageTableEntry][do_lock] iorb IORB(Id(398),Device(2),Page(1:4/5),Diskblock(11),FileRead,Openfile(52:2/2),Thread(36:4/W0)) this Page(1:4/5)
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 51995 offset = 795 page no = 50 Thread(27:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(27:2/RU) 21 Page(50:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(21) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(50:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(20:2/21)
[PageFaultHandler][do_handlePageFault] Frame(21) is dirty, do swap-out, Thread(27:2/W0)
[PageFaultHandler][SwapOut] page Page(20:2/21) frame Frame(21)file Openfile(4:2/0)
[PageFaultHandler][SwapOut] block no 20
[Info][PageTableEntry][do_lock] iorb IORB(Id(399),Device(0),Page(20:2/21),Diskblock(84),FileWrite,Openfile(4:2/0),Thread(27:2/W1)) this Page(20:2/21)
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(20:2/21)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(21) Page(20:2/21)Thread(27:2/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(50:2/null) setframe Frame(21)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(400),Device(0),Page(50:2/21),Diskblock(114),FileRead,Openfile(4:2/0),Thread(27:2/W1)) this Page(50:2/21)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(50:2/21)
[PageFaultHandler][do_handlePageFault] thread Thread(27:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 10395 offset = 155 page no = 10 Thread(27:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(27:2/RU) 21 Page(10:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(17) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(10:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(10:4/17)
[PageFaultHandler][do_handlePageFault] page Page(10:2/null) setframe Frame(17)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(401),Device(0),Page(10:2/17),Diskblock(74),FileRead,Openfile(4:2/0),Thread(27:2/W1)) this Page(10:2/17)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(10:2/17)
[PageFaultHandler][do_handlePageFault] thread Thread(27:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(1:4/5)
[MMU][do_refer] address = 33952 offset = 160 page no = 33 Thread(36:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(36:4/RU) 21 Page(33:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(24) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(33:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(47:4/24)
[PageFaultHandler][do_handlePageFault] Frame(24) is dirty, do swap-out, Thread(36:4/W0)
[PageFaultHandler][SwapOut] page Page(47:4/24) frame Frame(24)file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 47
[Info][PageTableEntry][do_lock] iorb IORB(Id(402),Device(0),Page(47:4/24),Diskblock(239),FileWrite,Openfile(12:4/0),Thread(36:4/W1)) this Page(47:4/24)
[Info][PageTableEntry][do_lock] Get frame Frame(24)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 21123 offset = 643 page no = 20 Thread(27:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(27:2/RU) 21 Page(20:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(27) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(20:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(13:4/27)
[PageFaultHandler][do_handlePageFault] Frame(27) is dirty, do swap-out, Thread(27:2/W0)
[PageFaultHandler][SwapOut] page Page(13:4/27) frame Frame(27)file Openfile(4:2/0)
[PageFaultHandler][SwapOut] block no 13
[Info][PageTableEntry][do_lock] iorb IORB(Id(403),Device(0),Page(13:4/27),Diskblock(77),FileWrite,Openfile(4:2/0),Thread(27:2/W1)) this Page(13:4/27)
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 58011/250000[PageTableEntry][do_unlock] this Page(47:4/24)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(24) Page(47:4/24)Thread(36:4/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(33:4/null) setframe Frame(24)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(404),Device(0),Page(33:4/24),Diskblock(225),FileRead,Openfile(12:4/0),Thread(36:4/W1)) this Page(33:4/24)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(36:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(36:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(24)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(13:4/27)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(27) Page(13:4/27)Thread(27:2/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(20:2/null) setframe Frame(27)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(405),Device(0),Page(20:2/27),Diskblock(84),FileRead,Openfile(4:2/0),Thread(27:2/W1)) this Page(20:2/27)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(33:4/24)
[PageFaultHandler][do_handlePageFault] thread Thread(36:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(20:2/27)
[PageFaultHandler][do_handlePageFault] thread Thread(27:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 7454 offset = 286 page no = 7 Thread(27:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(27:2/RU) 21 Page(7:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(27) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(7:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(20:2/27)
[PageFaultHandler][do_handlePageFault] page Page(7:2/null) setframe Frame(27)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(406),Device(0),Page(7:2/27),Diskblock(71),FileRead,Openfile(4:2/0),Thread(27:2/W1)) this Page(7:2/27)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 39043 offset = 131 page no = 38 Thread(36:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(36:4/RU) 21 Page(38:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(29) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(38:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(13:2/29)
[PageFaultHandler][do_handlePageFault] page Page(38:4/null) setframe Frame(29)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(407),Device(0),Page(38:4/29),Diskblock(230),FileRead,Openfile(12:4/0),Thread(36:4/W1)) this Page(38:4/29)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(36:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(36:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(7:2/27)
[PageFaultHandler][do_handlePageFault] thread Thread(27:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 19604 offset = 148 page no = 19 Thread(27:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(27:2/RU) 21 Page(19:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(7) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(19:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(34:4/7)
[PageFaultHandler][do_handlePageFault] Frame(7) is dirty, do swap-out, Thread(27:2/W0)
[PageFaultHandler][SwapOut] page Page(34:4/7) frame Frame(7)file Openfile(4:2/0)
[PageFaultHandler][SwapOut] block no 34
[Info][PageTableEntry][do_lock] iorb IORB(Id(408),Device(0),Page(34:4/7),Diskblock(98),FileWrite,Openfile(4:2/0),Thread(27:2/W1)) this Page(34:4/7)
[Info][PageTableEntry][do_lock] Get frame Frame(7)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(38:4/29)
[PageFaultHandler][do_handlePageFault] thread Thread(36:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(34:4/7)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(7) Page(34:4/7)Thread(27:2/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(19:2/null) setframe Frame(7)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(409),Device(0),Page(19:2/7),Diskblock(83),FileRead,Openfile(4:2/0),Thread(27:2/W1)) this Page(19:2/7)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(7)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(19:2/7)
[PageFaultHandler][do_handlePageFault] thread Thread(27:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 54541 offset = 269 page no = 53 Thread(27:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(27:2/RU) 22 Page(53:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(29) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(53:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(38:4/29)
[PageFaultHandler][do_handlePageFault] page Page(53:2/null) setframe Frame(29)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(410),Device(0),Page(53:2/29),Diskblock(117),FileRead,Openfile(4:2/0),Thread(27:2/W1)) this Page(53:2/29)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 59018/250000[MMU][do_refer] address = 37003 offset = 139 page no = 36 Thread(36:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(36:4/RU) 21 Page(36:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(9) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(36:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(1:2/9)
[PageFaultHandler][do_handlePageFault] Frame(9) is dirty, do swap-out, Thread(36:4/W0)
[PageFaultHandler][SwapOut] page Page(1:2/9) frame Frame(9)file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 1
[Info][PageTableEntry][do_lock] iorb IORB(Id(411),Device(0),Page(1:2/9),Diskblock(193),FileWrite,Openfile(12:4/0),Thread(36:4/W1)) this Page(1:2/9)
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTable][do_deallocateMemory] this Pagetable(Task(5/T))
[PageTable][do_deallocateMemory]  page_table_entry Page(26:5/2) frame_table_entry Frame(2)
[PageTableEntry][do_unlock] this Page(53:2/29)
[PageFaultHandler][do_handlePageFault] thread Thread(27:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 21323 offset = 843 page no = 20 Thread(27:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(27:2/RU) 22 Page(20:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(26) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(20:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(57:2/26)
[PageFaultHandler][do_handlePageFault] Frame(26) is dirty, do swap-out, Thread(27:2/W0)
[PageFaultHandler][SwapOut] page Page(57:2/26) frame Frame(26)file Openfile(4:2/0)
[PageFaultHandler][SwapOut] block no 57
[Info][PageTableEntry][do_lock] iorb IORB(Id(412),Device(0),Page(57:2/26),Diskblock(121),FileWrite,Openfile(4:2/0),Thread(27:2/W1)) this Page(57:2/26)
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(1:2/9)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(9) Page(1:2/9)Thread(36:4/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(36:4/null) setframe Frame(9)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(413),Device(0),Page(36:4/9),Diskblock(228),FileRead,Openfile(12:4/0),Thread(36:4/W1)) this Page(36:4/9)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(36:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(36:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(57:2/26)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(26) Page(57:2/26)Thread(27:2/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(20:2/null) setframe Frame(26)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(414),Device(0),Page(20:2/26),Diskblock(84),FileRead,Openfile(4:2/0),Thread(27:2/W1)) this Page(20:2/26)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(27:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(36:4/9)
[PageFaultHandler][do_handlePageFault] thread Thread(36:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(20:2/26)
[PageFaultHandler][do_handlePageFault] thread Thread(27:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageCleanDaemon][unleash] osp.Memory.PageCleanDaemon@e14d43 execute time 60000
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(18)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(28)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(16)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(22)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(20)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(8)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(18)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(18) Page(11:4/18) isDirty true
[PageFaultHandler][SwapOut] file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 11
[Info][PageTableEntry][do_lock] iorb IORB(Id(415),Device(0),Page(11:4/18),Diskblock(203),FileWrite,Openfile(12:4/0),Thread(39:0/W1)) this Page(11:4/18)
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 60020/250000[PageTableEntry][do_unlock] this Page(11:4/18)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(18) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(28)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(28) Page(58:2/28) isDirty true
[PageFaultHandler][SwapOut] file Openfile(4:2/0)
[PageFaultHandler][SwapOut] block no 58
[Info][PageTableEntry][do_lock] iorb IORB(Id(416),Device(0),Page(58:2/28),Diskblock(122),FileWrite,Openfile(4:2/0),Thread(39:0/W1)) this Page(58:2/28)
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 61943 offset = 503 page no = 60 Thread(36:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(36:4/RU) 22 Page(60:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(9) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(60:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(36:4/9)
[PageFaultHandler][do_handlePageFault] page Page(60:4/null) setframe Frame(9)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(417),Device(0),Page(60:4/9),Diskblock(252),FileRead,Openfile(12:4/0),Thread(36:4/W1)) this Page(60:4/9)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(36:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(36:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(58:2/28)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(28) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(16)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(16) Page(12:4/16) isDirty true
[PageFaultHandler][SwapOut] file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 12
[Info][PageTableEntry][do_lock] iorb IORB(Id(418),Device(0),Page(12:4/16),Diskblock(204),FileWrite,Openfile(12:4/0),Thread(39:0/W1)) this Page(12:4/16)
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 17603 offset = 195 page no = 17 Thread(41:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(41:4/RU) 22 Page(17:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(10) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(17:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(26:4/10)
[PageFaultHandler][do_handlePageFault] page Page(17:4/null) setframe Frame(10)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(419),Device(0),Page(17:4/10),Diskblock(209),FileRead,Openfile(12:4/0),Thread(41:4/W1)) this Page(17:4/10)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(41:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(41:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(10)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(60:4/9)
[PageFaultHandler][do_handlePageFault] thread Thread(36:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 29262 offset = 590 page no = 28 Thread(37:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(37:4/RU) 21 Page(28:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(14) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(28:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(31:2/14)
[PageFaultHandler][do_handlePageFault] page Page(28:4/null) setframe Frame(14)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(420),Device(0),Page(28:4/14),Diskblock(220),FileRead,Openfile(12:4/0),Thread(37:4/W1)) this Page(28:4/14)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(37:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(37:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(14)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(12:4/16)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(16) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(22)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(22) Page(62:2/22) isDirty true
[PageFaultHandler][SwapOut] file Openfile(4:2/0)
[PageFaultHandler][SwapOut] block no 62
[Info][PageTableEntry][do_lock] iorb IORB(Id(421),Device(0),Page(62:2/22),Diskblock(126),FileWrite,Openfile(4:2/0),Thread(39:0/W1)) this Page(62:2/22)
[Info][PageTableEntry][do_lock] Get frame Frame(22)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 43625 offset = 617 page no = 42 Thread(36:4/RU)
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(17:4/10)
[PageFaultHandler][do_handlePageFault] thread Thread(41:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
Simulation progress: 61035/250000[PageTableEntry][do_unlock] this Page(28:4/14)
[PageFaultHandler][do_handlePageFault] thread Thread(37:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(62:2/22)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(22) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(20)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(20) Page(54:4/20) isDirty true
[PageFaultHandler][SwapOut] file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 54
[Info][PageTableEntry][do_lock] iorb IORB(Id(422),Device(0),Page(54:4/20),Diskblock(246),FileWrite,Openfile(12:4/0),Thread(39:0/W1)) this Page(54:4/20)
[Info][PageTableEntry][do_lock] Get frame Frame(20)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(54:4/20)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(20) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(8)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(8) Page(9:4/8) isDirty true
[PageFaultHandler][SwapOut] file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 9
[Info][PageTableEntry][do_lock] iorb IORB(Id(423),Device(0),Page(9:4/8),Diskblock(201),FileWrite,Openfile(12:4/0),Thread(39:0/W1)) this Page(9:4/8)
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 56338 offset = 18 page no = 55 Thread(41:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(41:4/RU) 21 Page(55:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(10) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(55:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(17:4/10)
[PageFaultHandler][do_handlePageFault] Frame(10) is dirty, do swap-out, Thread(41:4/W0)
[PageFaultHandler][SwapOut] page Page(17:4/10) frame Frame(10)file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 17
[Info][PageTableEntry][do_lock] iorb IORB(Id(424),Device(0),Page(17:4/10),Diskblock(209),FileWrite,Openfile(12:4/0),Thread(41:4/W1)) this Page(17:4/10)
[Info][PageTableEntry][do_lock] Get frame Frame(10)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(9:4/8)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(8) finish
[PageTableEntry][do_unlock] this Page(17:4/10)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(10) Page(17:4/10)Thread(41:4/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(55:4/null) setframe Frame(10)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(425),Device(0),Page(55:4/10),Diskblock(247),FileRead,Openfile(12:4/0),Thread(41:4/W1)) this Page(55:4/10)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(41:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(41:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(10)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 57883 offset = 539 page no = 56 Thread(37:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(37:4/RU) 22 Page(56:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(18) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(56:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(11:4/18)
[PageFaultHandler][do_handlePageFault] page Page(56:4/null) setframe Frame(18)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(426),Device(0),Page(56:4/18),Diskblock(248),FileRead,Openfile(12:4/0),Thread(37:4/W1)) this Page(56:4/18)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(37:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(37:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 53837 offset = 589 page no = 52 Thread(42:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(42:2/RU) 21 Page(52:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(28) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(52:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(58:2/28)
[PageFaultHandler][do_handlePageFault] page Page(52:2/null) setframe Frame(28)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(427),Device(0),Page(52:2/28),Diskblock(116),FileRead,Openfile(4:2/0),Thread(42:2/W1)) this Page(52:2/28)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(42:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(42:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(55:4/10)
[PageFaultHandler][do_handlePageFault] thread Thread(41:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 4110 offset = 14 page no = 4 Thread(43:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(43:4/RU) 22 Page(4:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(11) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(4:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(51:2/11)
[PageFaultHandler][do_handlePageFault] page Page(4:4/null) setframe Frame(11)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(428),Device(0),Page(4:4/11),Diskblock(196),FileRead,Openfile(12:4/0),Thread(43:4/W1)) this Page(4:4/11)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(43:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(43:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(11)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 11222 offset = 982 page no = 10 Thread(36:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(36:4/RU) 22 Page(10:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(13) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(10:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(18:4/13)
[PageFaultHandler][do_handlePageFault] page Page(10:4/null) setframe Frame(13)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(429),Device(0),Page(10:4/13),Diskblock(202),FileRead,Openfile(12:4/0),Thread(36:4/W1)) this Page(10:4/13)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(36:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(36:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(13)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 62010/250000[PageTableEntry][do_unlock] this Page(56:4/18)
[PageFaultHandler][do_handlePageFault] thread Thread(37:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(52:2/28)
[PageFaultHandler][do_handlePageFault] thread Thread(42:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(4:4/11)
[PageFaultHandler][do_handlePageFault] thread Thread(43:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 62123 offset = 683 page no = 60 Thread(26:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(26:2/RU) 22 Page(60:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(18) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(60:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(56:4/18)
[PageFaultHandler][do_handlePageFault] Frame(18) is dirty, do swap-out, Thread(26:2/W0)
[PageFaultHandler][SwapOut] page Page(56:4/18) frame Frame(18)file Openfile(4:2/0)
[PageFaultHandler][SwapOut] block no 56
[Info][PageTableEntry][do_lock] iorb IORB(Id(430),Device(0),Page(56:4/18),Diskblock(120),FileWrite,Openfile(4:2/0),Thread(26:2/W1)) this Page(56:4/18)
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 28350 offset = 702 page no = 27 Thread(37:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(37:4/RU) 21 Page(27:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(11) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(27:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(4:4/11)
[PageFaultHandler][do_handlePageFault] Frame(11) is dirty, do swap-out, Thread(37:4/W0)
[PageFaultHandler][SwapOut] page Page(4:4/11) frame Frame(11)file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 4
[Info][PageTableEntry][do_lock] iorb IORB(Id(431),Device(0),Page(4:4/11),Diskblock(196),FileWrite,Openfile(12:4/0),Thread(37:4/W1)) this Page(4:4/11)
[Info][PageTableEntry][do_lock] Get frame Frame(11)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(10:4/13)
[PageFaultHandler][do_handlePageFault] thread Thread(36:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 3688 offset = 616 page no = 3 Thread(43:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(43:4/RU) 21 Page(3:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(22) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(3:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(62:2/22)
[PageFaultHandler][do_handlePageFault] page Page(3:4/null) setframe Frame(22)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(432),Device(0),Page(3:4/22),Diskblock(195),FileRead,Openfile(12:4/0),Thread(43:4/W1)) this Page(3:4/22)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(43:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(43:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(22)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(56:4/18)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(18) Page(56:4/18)Thread(26:2/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(60:2/null) setframe Frame(18)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(433),Device(0),Page(60:2/18),Diskblock(124),FileRead,Openfile(4:2/0),Thread(26:2/W1)) this Page(60:2/18)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(26:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(26:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 59276 offset = 908 page no = 57 Thread(36:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(36:4/RU) 21 Page(57:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(23) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(57:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(28:2/23)
[PageFaultHandler][do_handlePageFault] page Page(57:4/null) setframe Frame(23)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(434),Device(0),Page(57:4/23),Diskblock(249),FileRead,Openfile(12:4/0),Thread(36:4/W1)) this Page(57:4/23)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(36:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(36:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(23)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(4:4/11)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(11) Page(4:4/11)Thread(37:4/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(27:4/null) setframe Frame(11)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(435),Device(0),Page(27:4/11),Diskblock(219),FileRead,Openfile(12:4/0),Thread(37:4/W1)) this Page(27:4/11)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(37:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(37:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(11)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 16818 offset = 434 page no = 16 Thread(42:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(42:2/RU) 22 Page(16:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(20) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(16:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(54:4/20)
[PageFaultHandler][do_handlePageFault] page Page(16:2/null) setframe Frame(20)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(436),Device(0),Page(16:2/20),Diskblock(80),FileRead,Openfile(4:2/0),Thread(42:2/W1)) this Page(16:2/20)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(42:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(42:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(20)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 33060 offset = 292 page no = 32 Thread(41:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(41:4/RU) 22 Page(32:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(8) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(32:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(9:4/8)
[PageFaultHandler][do_handlePageFault] page Page(32:4/null) setframe Frame(8)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(437),Device(0),Page(32:4/8),Diskblock(224),FileRead,Openfile(12:4/0),Thread(41:4/W1)) this Page(32:4/8)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(41:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(41:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(3:4/22)
[PageFaultHandler][do_handlePageFault] thread Thread(43:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 48538 offset = 410 page no = 47 Thread(43:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(43:4/RU) 22 Page(47:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(6) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(47:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(13:3/6)
[PageFaultHandler][do_handlePageFault] page Page(47:4/null) setframe Frame(6)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(438),Device(0),Page(47:4/6),Diskblock(239),FileRead,Openfile(12:4/0),Thread(43:4/W1)) this Page(47:4/6)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(43:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(43:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(6)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(60:2/18)
[PageFaultHandler][do_handlePageFault] thread Thread(26:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
Simulation progress: 63030/250000[MMU][do_refer] address = 33657 offset = 889 page no = 32 Thread(26:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(26:2/RU) 21 Page(32:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(0) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(32:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(35:4/0)
[PageFaultHandler][do_handlePageFault] Frame(0) is dirty, do swap-out, Thread(26:2/W0)
[PageFaultHandler][SwapOut] page Page(35:4/0) frame Frame(0)file Openfile(4:2/0)
[PageFaultHandler][SwapOut] block no 35
[Info][PageTableEntry][do_lock] iorb IORB(Id(439),Device(0),Page(35:4/0),Diskblock(99),FileWrite,Openfile(4:2/0),Thread(26:2/W1)) this Page(35:4/0)
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(57:4/23)
[PageFaultHandler][do_handlePageFault] thread Thread(36:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 59606 offset = 214 page no = 58 Thread(36:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(36:4/RU) 21 Page(58:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(23) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(58:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(57:4/23)
[PageFaultHandler][do_handlePageFault] page Page(58:4/null) setframe Frame(23)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(440),Device(0),Page(58:4/23),Diskblock(250),FileRead,Openfile(12:4/0),Thread(36:4/W1)) this Page(58:4/23)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(36:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(36:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(23)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(27:4/11)
[PageFaultHandler][do_handlePageFault] thread Thread(37:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(16:2/20)
[PageFaultHandler][do_handlePageFault] thread Thread(42:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 64379 offset = 891 page no = 62 Thread(42:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(42:2/RU) 22 Page(62:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(11) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(62:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(27:4/11)
[PageFaultHandler][do_handlePageFault] page Page(62:2/null) setframe Frame(11)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(441),Device(0),Page(62:2/11),Diskblock(126),FileRead,Openfile(4:2/0),Thread(42:2/W1)) this Page(62:2/11)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(42:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(42:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(11)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 31709 offset = 989 page no = 30 Thread(37:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(37:4/RU) 21 Page(30:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(20) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(30:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(16:2/20)
[PageFaultHandler][do_handlePageFault] Frame(20) is dirty, do swap-out, Thread(37:4/W0)
[PageFaultHandler][SwapOut] page Page(16:2/20) frame Frame(20)file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 16
[Info][PageTableEntry][do_lock] iorb IORB(Id(442),Device(0),Page(16:2/20),Diskblock(208),FileWrite,Openfile(12:4/0),Thread(37:4/W1)) this Page(16:2/20)
[Info][PageTableEntry][do_lock] Get frame Frame(20)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(32:4/8)
[PageFaultHandler][do_handlePageFault] thread Thread(41:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(47:4/6)
[PageFaultHandler][do_handlePageFault] thread Thread(43:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(35:4/0)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(0) Page(35:4/0)Thread(26:2/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(32:2/null) setframe Frame(0)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(443),Device(0),Page(32:2/0),Diskblock(96),FileRead,Openfile(4:2/0),Thread(26:2/W1)) this Page(32:2/0)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(26:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(26:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 64088/250000[MMU][do_refer] address = 56103 offset = 807 page no = 54 Thread(43:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(43:4/RU) 21 Page(54:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(6) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(54:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(47:4/6)
[PageFaultHandler][do_handlePageFault] Frame(6) is dirty, do swap-out, Thread(43:4/W0)
[PageFaultHandler][SwapOut] page Page(47:4/6) frame Frame(6)file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 47
[Info][PageTableEntry][do_lock] iorb IORB(Id(444),Device(0),Page(47:4/6),Diskblock(239),FileWrite,Openfile(12:4/0),Thread(43:4/W1)) this Page(47:4/6)
[Info][PageTableEntry][do_lock] Get frame Frame(6)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(58:4/23)
[PageFaultHandler][do_handlePageFault] thread Thread(36:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(62:2/11)
[PageFaultHandler][do_handlePageFault] thread Thread(42:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(16:2/20)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(20) Page(16:2/20)Thread(37:4/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(30:4/null) setframe Frame(20)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(445),Device(0),Page(30:4/20),Diskblock(222),FileRead,Openfile(12:4/0),Thread(37:4/W1)) this Page(30:4/20)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(37:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(37:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(20)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(32:2/0)
[PageFaultHandler][do_handlePageFault] thread Thread(26:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 26016 offset = 416 page no = 25 Thread(41:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(41:4/RU) 22 Page(25:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(0) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(25:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(32:2/0)
[PageFaultHandler][do_handlePageFault] page Page(25:4/null) setframe Frame(0)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(446),Device(0),Page(25:4/0),Diskblock(217),FileRead,Openfile(12:4/0),Thread(41:4/W1)) this Page(25:4/0)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(41:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(41:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(47:4/6)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(6) Page(47:4/6)Thread(43:4/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(54:4/null) setframe Frame(6)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(447),Device(0),Page(54:4/6),Diskblock(246),FileRead,Openfile(12:4/0),Thread(43:4/W1)) this Page(54:4/6)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(43:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(43:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(6)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 4160 offset = 64 page no = 4 Thread(26:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(26:2/RU) 22 Page(4:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(4) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(4:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(8:2/4)
[PageFaultHandler][do_handlePageFault] Frame(4) is dirty, do swap-out, Thread(26:2/W0)
[PageFaultHandler][SwapOut] page Page(8:2/4) frame Frame(4)file Openfile(4:2/0)
[PageFaultHandler][SwapOut] block no 8
[Info][PageTableEntry][do_lock] iorb IORB(Id(448),Device(0),Page(8:2/4),Diskblock(72),FileWrite,Openfile(4:2/0),Thread(26:2/W1)) this Page(8:2/4)
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 51940 offset = 740 page no = 50 Thread(36:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(36:4/RU) 21 Page(50:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(21) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(50:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(50:2/21)
[PageFaultHandler][do_handlePageFault] page Page(50:4/null) setframe Frame(21)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(449),Device(0),Page(50:4/21),Diskblock(242),FileRead,Openfile(12:4/0),Thread(36:4/W1)) this Page(50:4/21)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(36:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(36:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 56677 offset = 357 page no = 55 Thread(42:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(42:2/RU) 21 Page(55:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(17) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(55:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(10:2/17)
[PageFaultHandler][do_handlePageFault] page Page(55:2/null) setframe Frame(17)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(450),Device(0),Page(55:2/17),Diskblock(119),FileRead,Openfile(4:2/0),Thread(42:2/W1)) this Page(55:2/17)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(42:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(42:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(30:4/20)
[PageFaultHandler][do_handlePageFault] thread Thread(37:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(25:4/0)
[PageFaultHandler][do_handlePageFault] thread Thread(41:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
Simulation progress: 65068/250000[MMU][do_refer] address = 37813 offset = 949 page no = 36 Thread(41:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(41:4/RU) 21 Page(36:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(3) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(36:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(29:4/3)
[PageFaultHandler][do_handlePageFault] page Page(36:4/null) setframe Frame(3)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(451),Device(0),Page(36:4/3),Diskblock(228),FileRead,Openfile(12:4/0),Thread(41:4/W1)) this Page(36:4/3)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(41:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(41:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(3)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 59630 offset = 238 page no = 58 Thread(37:4/RU)
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 10979 offset = 739 page no = 10 Thread(37:4/RU)
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(54:4/6)
[PageFaultHandler][do_handlePageFault] thread Thread(43:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(8:2/4)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(4) Page(8:2/4)Thread(26:2/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(4:2/null) setframe Frame(4)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(452),Device(0),Page(4:2/4),Diskblock(68),FileRead,Openfile(4:2/0),Thread(26:2/W1)) this Page(4:2/4)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(26:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(26:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 14262 offset = 950 page no = 13 Thread(37:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(37:4/RU) 22 Page(13:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(6) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(13:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(54:4/6)
[PageFaultHandler][do_handlePageFault] page Page(13:4/null) setframe Frame(6)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(453),Device(0),Page(13:4/6),Diskblock(205),FileRead,Openfile(12:4/0),Thread(37:4/W1)) this Page(13:4/6)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(37:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(37:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(6)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 55957 offset = 661 page no = 54 Thread(43:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(43:4/RU) 22 Page(54:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(27) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(54:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(7:2/27)
[PageFaultHandler][do_handlePageFault] page Page(54:4/null) setframe Frame(27)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(454),Device(0),Page(54:4/27),Diskblock(246),FileRead,Openfile(12:4/0),Thread(43:4/W1)) this Page(54:4/27)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(43:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(43:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(50:4/21)
[PageFaultHandler][do_handlePageFault] thread Thread(36:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 12261 offset = 997 page no = 11 Thread(36:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(36:4/RU) 22 Page(11:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(21) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(11:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(50:4/21)
[PageFaultHandler][do_handlePageFault] page Page(11:4/null) setframe Frame(21)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(455),Device(0),Page(11:4/21),Diskblock(203),FileRead,Openfile(12:4/0),Thread(36:4/W1)) this Page(11:4/21)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(36:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(36:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(55:2/17)
[PageFaultHandler][do_handlePageFault] thread Thread(42:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 2686 offset = 638 page no = 2 Thread(42:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(42:2/RU) 21 Page(2:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(7) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(2:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(19:2/7)
[PageFaultHandler][do_handlePageFault] page Page(2:2/null) setframe Frame(7)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(456),Device(0),Page(2:2/7),Diskblock(66),FileRead,Openfile(4:2/0),Thread(42:2/W1)) this Page(2:2/7)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(42:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(42:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(7)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(36:4/3)
[PageFaultHandler][do_handlePageFault] thread Thread(41:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 56563 offset = 243 page no = 55 Thread(41:4/RU)
[MMU][do_refer] Do memory read.
[Info][PageTableEntry][do_lock] iorb IORB(Id(457),Device(1),Page(1:4/5),Diskblock(10),FileRead,Openfile(56:4/1),Thread(41:4/W0)) this Page(1:4/5)
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(4:2/4)
[PageFaultHandler][do_handlePageFault] thread Thread(26:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(1:4/5)
Simulation progress: 66009/250000[MMU][do_refer] address = 36011 offset = 171 page no = 35 Thread(41:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(41:4/RU) 22 Page(35:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(29) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(35:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(53:2/29)
[PageFaultHandler][do_handlePageFault] Frame(29) is dirty, do swap-out, Thread(41:4/W0)
[PageFaultHandler][SwapOut] page Page(53:2/29) frame Frame(29)file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 53
[Info][PageTableEntry][do_lock] iorb IORB(Id(458),Device(0),Page(53:2/29),Diskblock(245),FileWrite,Openfile(12:4/0),Thread(41:4/W1)) this Page(53:2/29)
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(13:4/6)
[PageFaultHandler][do_handlePageFault] thread Thread(37:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 4895 offset = 799 page no = 4 Thread(37:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(37:4/RU) 21 Page(4:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(26) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(4:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(20:2/26)
[PageFaultHandler][do_handlePageFault] Frame(26) is dirty, do swap-out, Thread(37:4/W0)
[PageFaultHandler][SwapOut] page Page(20:2/26) frame Frame(26)file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 20
[Info][PageTableEntry][do_lock] iorb IORB(Id(459),Device(0),Page(20:2/26),Diskblock(212),FileWrite,Openfile(12:4/0),Thread(37:4/W1)) this Page(20:2/26)
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(54:4/27)
[PageFaultHandler][do_handlePageFault] thread Thread(43:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 27550 offset = 926 page no = 26 Thread(43:4/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(43:4/RU) 22 Page(26:4/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(9) Reserved by Task(4/L)
[PageFaultHandler][do_handlePageFault] page Page(26:4/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(60:4/9)
[PageFaultHandler][do_handlePageFault] Frame(9) is dirty, do swap-out, Thread(43:4/W0)
[PageFaultHandler][SwapOut] page Page(60:4/9) frame Frame(9)file Openfile(12:4/0)
[PageFaultHandler][SwapOut] block no 60
[Info][PageTableEntry][do_lock] iorb IORB(Id(460),Device(0),Page(60:4/9),Diskblock(252),FileWrite,Openfile(12:4/0),Thread(43:4/W1)) this Page(60:4/9)
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(11:4/21)
[PageFaultHandler][do_handlePageFault] thread Thread(36:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(2:2/7)
[PageFaultHandler][do_handlePageFault] thread Thread(42:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 10000 offset = 784 page no = 9 Thread(42:2/RU)
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 24491 offset = 939 page no = 23 Thread(42:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(42:2/RU) 22 Page(23:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(21) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(23:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(11:4/21)
[PageFaultHandler][do_handlePageFault] Frame(21) is dirty, do swap-out, Thread(42:2/W0)
[PageFaultHandler][SwapOut] page Page(11:4/21) frame Frame(21)file Openfile(4:2/0)
[PageFaultHandler][SwapOut] block no 11
[Info][PageTableEntry][do_lock] iorb IORB(Id(461),Device(0),Page(11:4/21),Diskblock(75),FileWrite,Openfile(4:2/0),Thread(42:2/W1)) this Page(11:4/21)
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(53:2/29)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(29) Page(53:2/29)Thread(41:4/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(35:4/null) setframe Frame(29)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(462),Device(0),Page(35:4/29),Diskblock(227),FileRead,Openfile(12:4/0),Thread(41:4/W1)) this Page(35:4/29)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(41:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(41:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 67020/250000[PageTableEntry][do_unlock] this Page(20:2/26)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(26) Page(20:2/26)Thread(37:4/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(4:4/null) setframe Frame(26)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(463),Device(0),Page(4:4/26),Diskblock(196),FileRead,Openfile(12:4/0),Thread(37:4/W1)) this Page(4:4/26)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(37:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(37:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(60:4/9)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(9) Page(60:4/9)Thread(43:4/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(26:4/null) setframe Frame(9)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(464),Device(0),Page(26:4/9),Diskblock(218),FileRead,Openfile(12:4/0),Thread(43:4/W1)) this Page(26:4/9)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(43:4/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(43:4/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(11:4/21)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(21) Page(11:4/21)Thread(42:2/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(23:2/null) setframe Frame(21)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(465),Device(0),Page(23:2/21),Diskblock(87),FileRead,Openfile(4:2/0),Thread(42:2/W1)) this Page(23:2/21)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(42:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(42:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(35:4/29)
[PageFaultHandler][do_handlePageFault] thread Thread(41:4/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(26:4/9)
[PageFaultHandler][do_handlePageFault] thread Thread(43:4/KL) status = 22
[PageFaultHandler][do_handlePageFault] Thread already killed after swap-in
[MMU][do_refer] return from interrupt
[PageTable][do_deallocateMemory] this Pagetable(Task(4/T))
[PageTable][do_deallocateMemory]  page_table_entry Page(1:4/5) frame_table_entry Frame(5)
[PageTable][do_deallocateMemory]  page_table_entry Page(3:4/22) frame_table_entry Frame(22)
[PageTable][do_deallocateMemory]  page_table_entry Page(4:4/26) frame_table_entry Frame(26)
[PageTable][do_deallocateMemory] owner_task Task(4/T)
[PageTable][do_deallocateMemory]  page_table_entry Page(10:4/13) frame_table_entry Frame(13)
[PageTable][do_deallocateMemory]  page_table_entry Page(12:4/16) frame_table_entry Frame(16)
[PageTable][do_deallocateMemory]  page_table_entry Page(13:4/6) frame_table_entry Frame(6)
[PageTable][do_deallocateMemory]  page_table_entry Page(20:4/1) frame_table_entry Frame(1)
[PageTable][do_deallocateMemory]  page_table_entry Page(23:4/15) frame_table_entry Frame(15)
[PageTable][do_deallocateMemory]  page_table_entry Page(25:4/0) frame_table_entry Frame(0)
[PageTable][do_deallocateMemory]  page_table_entry Page(28:4/14) frame_table_entry Frame(14)
[PageTable][do_deallocateMemory]  page_table_entry Page(30:4/20) frame_table_entry Frame(20)
[PageTable][do_deallocateMemory]  page_table_entry Page(32:4/8) frame_table_entry Frame(8)
[PageTable][do_deallocateMemory]  page_table_entry Page(33:4/24) frame_table_entry Frame(24)
[PageTable][do_deallocateMemory]  page_table_entry Page(35:4/29) frame_table_entry Frame(29)
[PageTable][do_deallocateMemory]  page_table_entry Page(36:4/3) frame_table_entry Frame(3)
[PageTable][do_deallocateMemory]  page_table_entry Page(42:4/12) frame_table_entry Frame(12)
[PageTable][do_deallocateMemory]  page_table_entry Page(54:4/27) frame_table_entry Frame(27)
[PageTable][do_deallocateMemory]  page_table_entry Page(55:4/10) frame_table_entry Frame(10)
[PageTable][do_deallocateMemory]  page_table_entry Page(58:4/23) frame_table_entry Frame(23)
[PageTableEntry][do_unlock] this Page(4:4/26)
[PageFaultHandler][do_handlePageFault] thread Thread(37:4/KL) status = 22
[PageFaultHandler][do_handlePageFault] Thread already killed after swap-in
[MMU][do_refer] return from interrupt
[PageTableEntry][do_unlock] this Page(23:2/21)
[PageFaultHandler][do_handlePageFault] thread Thread(42:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 42600 offset = 616 page no = 41 Thread(44:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(44:6/RU) 22 Page(41:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(26) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(41:6/null)
[PageFaultHandler][do_handlePageFault] page Page(41:6/null) setframe Frame(26)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(466),Device(0),Page(41:6/26),Diskblock(41),FileRead,Openfile(58:6/0),Thread(44:6/W1)) this Page(41:6/26)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(44:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(44:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(41:6/26)
[PageFaultHandler][do_handlePageFault] thread Thread(44:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
Simulation progress: 68008/250000[MMU][do_refer] address = 52899 offset = 675 page no = 51 Thread(42:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(42:2/RU) 21 Page(51:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(15) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(51:2/null)
[PageFaultHandler][do_handlePageFault] page Page(51:2/null) setframe Frame(15)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(467),Device(0),Page(51:2/15),Diskblock(115),FileRead,Openfile(4:2/0),Thread(42:2/W1)) this Page(51:2/15)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(42:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(42:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(15)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(51:2/15)
[PageFaultHandler][do_handlePageFault] thread Thread(42:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[Info][PageTableEntry][do_lock] iorb IORB(Id(468),Device(2),Page(2:2/7),Diskblock(3),FileRead,Openfile(60:2/2),Thread(42:2/W0)) this Page(2:2/7)
[Info][PageTableEntry][do_lock] Get frame Frame(7)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 20816 offset = 336 page no = 20 Thread(44:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(44:6/RU) 21 Page(20:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(10) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(20:6/null)
[PageFaultHandler][do_handlePageFault] page Page(20:6/null) setframe Frame(10)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(469),Device(0),Page(20:6/10),Diskblock(20),FileRead,Openfile(58:6/0),Thread(44:6/W1)) this Page(20:6/10)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(44:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(44:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(10)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 20636 offset = 156 page no = 20 Thread(46:6/RU)
[PageTableEntry][do_unlock] this Page(20:6/10)
[PageFaultHandler][do_handlePageFault] thread Thread(44:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 3179 offset = 107 page no = 3 Thread(46:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(46:6/RU) 21 Page(3:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(28) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(3:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(52:2/28)
[PageFaultHandler][do_handlePageFault] page Page(3:6/null) setframe Frame(28)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(470),Device(0),Page(3:6/28),Diskblock(3),FileRead,Openfile(58:6/0),Thread(46:6/W1)) this Page(3:6/28)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(46:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(46:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(3:6/28)
[PageFaultHandler][do_handlePageFault] thread Thread(46:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 20391 offset = 935 page no = 19 Thread(45:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(45:6/RU) 21 Page(19:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(13) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(19:6/null)
[PageFaultHandler][do_handlePageFault] page Page(19:6/null) setframe Frame(13)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(471),Device(0),Page(19:6/13),Diskblock(19),FileRead,Openfile(58:6/0),Thread(45:6/W1)) this Page(19:6/13)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(45:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(45:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(13)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(19:6/13)
[PageFaultHandler][do_handlePageFault] thread Thread(45:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[Info][PageTableEntry][do_lock] iorb IORB(Id(472),Device(2),Page(3:6/28),Diskblock(3),FileRead,Openfile(60:2/2),Thread(47:6/W0)) this Page(3:6/28)
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 61977 offset = 537 page no = 60 Thread(45:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(45:6/RU) 21 Page(60:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(16) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(60:6/null)
[PageFaultHandler][do_handlePageFault] page Page(60:6/null) setframe Frame(16)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(473),Device(0),Page(60:6/16),Diskblock(60),FileRead,Openfile(58:6/0),Thread(45:6/W1)) this Page(60:6/16)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(45:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(45:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 69020/250000[PageTableEntry][do_unlock] this Page(60:6/16)
[PageFaultHandler][do_handlePageFault] thread Thread(45:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 5142 offset = 22 page no = 5 Thread(45:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(45:6/RU) 22 Page(5:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(25) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(5:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(9:2/25)
[PageFaultHandler][do_handlePageFault] page Page(5:6/null) setframe Frame(25)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(474),Device(0),Page(5:6/25),Diskblock(5),FileRead,Openfile(58:6/0),Thread(45:6/W1)) this Page(5:6/25)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(45:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(45:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(25)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(2:2/7)
[MMU][do_refer] address = 40377 offset = 441 page no = 39 Thread(48:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(48:6/RU) 21 Page(39:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(22) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(39:6/null)
[PageFaultHandler][do_handlePageFault] page Page(39:6/null) setframe Frame(22)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(475),Device(0),Page(39:6/22),Diskblock(39),FileRead,Openfile(58:6/0),Thread(48:6/W1)) this Page(39:6/22)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(48:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(48:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(22)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(5:6/25)
[PageFaultHandler][do_handlePageFault] thread Thread(45:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(39:6/22)
[PageFaultHandler][do_handlePageFault] thread Thread(48:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 16529 offset = 145 page no = 16 Thread(42:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(42:2/RU) 21 Page(16:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(22) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(16:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(39:6/22)
[PageFaultHandler][do_handlePageFault] page Page(16:2/null) setframe Frame(22)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(476),Device(0),Page(16:2/22),Diskblock(80),FileRead,Openfile(4:2/0),Thread(42:2/W1)) this Page(16:2/22)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(42:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(42:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(22)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(477),Device(2),Page(5:6/25),Diskblock(11),FileWrite,Openfile(60:2/2),Thread(45:6/W0)) this Page(5:6/25)
[Info][PageTableEntry][do_lock] Get frame Frame(25)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(16:2/22)
[PageFaultHandler][do_handlePageFault] thread Thread(42:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(3:6/28)
[MMU][do_refer] address = 44856 offset = 824 page no = 43 Thread(46:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(46:6/RU) 21 Page(43:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(8) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(43:6/null)
[PageFaultHandler][do_handlePageFault] page Page(43:6/null) setframe Frame(8)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(478),Device(0),Page(43:6/8),Diskblock(43),FileRead,Openfile(58:6/0),Thread(46:6/W1)) this Page(43:6/8)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(46:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(46:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 47072 offset = 992 page no = 45 Thread(50:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(50:6/RU) 22 Page(45:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(23) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(45:6/null)
[PageFaultHandler][do_handlePageFault] page Page(45:6/null) setframe Frame(23)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(479),Device(0),Page(45:6/23),Diskblock(45),FileRead,Openfile(58:6/0),Thread(50:6/W1)) this Page(45:6/23)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(50:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(50:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(23)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(43:6/8)
[PageFaultHandler][do_handlePageFault] thread Thread(46:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(45:6/23)
[PageFaultHandler][do_handlePageFault] thread Thread(50:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 38509 offset = 621 page no = 37 Thread(49:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(49:6/RU) 22 Page(37:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(23) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(37:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(45:6/23)
[PageFaultHandler][do_handlePageFault] Frame(23) is dirty, do swap-out, Thread(49:6/W0)
[PageFaultHandler][SwapOut] page Page(45:6/23) frame Frame(23)file Openfile(58:6/0)
[PageFaultHandler][SwapOut] block no 45
[Info][PageTableEntry][do_lock] iorb IORB(Id(480),Device(0),Page(45:6/23),Diskblock(45),FileWrite,Openfile(58:6/0),Thread(49:6/W1)) this Page(45:6/23)
[Info][PageTableEntry][do_lock] Get frame Frame(23)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(45:6/23)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(23) Page(45:6/23)Thread(49:6/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(37:6/null) setframe Frame(23)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(481),Device(0),Page(37:6/23),Diskblock(37),FileRead,Openfile(58:6/0),Thread(49:6/W1)) this Page(37:6/23)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(49:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(49:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(23)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(37:6/23)
[PageFaultHandler][do_handlePageFault] thread Thread(49:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 39330 offset = 418 page no = 38 Thread(50:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(50:6/RU) 22 Page(38:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(1) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(38:6/null)
[PageFaultHandler][do_handlePageFault] page Page(38:6/null) setframe Frame(1)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(482),Device(0),Page(38:6/1),Diskblock(38),FileRead,Openfile(58:6/0),Thread(50:6/W1)) this Page(38:6/1)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(50:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(50:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(38:6/1)
[PageFaultHandler][do_handlePageFault] thread Thread(50:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 50269 offset = 93 page no = 49 Thread(47:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(47:6/RU) 21 Page(49:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(2) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(49:6/null)
[PageFaultHandler][do_handlePageFault] page Page(49:6/null) setframe Frame(2)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(483),Device(0),Page(49:6/2),Diskblock(49),FileRead,Openfile(58:6/0),Thread(47:6/W1)) this Page(49:6/2)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(47:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(47:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 70025/250000[MMU][do_refer] address = 12230 offset = 966 page no = 11 Thread(51:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(51:6/RU) 22 Page(11:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(20) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(11:6/null)
[PageFaultHandler][do_handlePageFault] page Page(11:6/null) setframe Frame(20)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(484),Device(0),Page(11:6/20),Diskblock(11),FileRead,Openfile(58:6/0),Thread(51:6/W1)) this Page(11:6/20)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(51:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(51:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(20)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(49:6/2)
[PageFaultHandler][do_handlePageFault] thread Thread(47:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(11:6/20)
[PageFaultHandler][do_handlePageFault] thread Thread(51:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 65386 offset = 874 page no = 63 Thread(50:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(50:6/RU) 21 Page(63:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(20) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(63:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(11:6/20)
[PageFaultHandler][do_handlePageFault] Frame(20) is dirty, do swap-out, Thread(50:6/W0)
[PageFaultHandler][SwapOut] page Page(11:6/20) frame Frame(20)file Openfile(58:6/0)
[PageFaultHandler][SwapOut] block no 11
[Info][PageTableEntry][do_lock] iorb IORB(Id(485),Device(0),Page(11:6/20),Diskblock(11),FileWrite,Openfile(58:6/0),Thread(50:6/W1)) this Page(11:6/20)
[Info][PageTableEntry][do_lock] Get frame Frame(20)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(11:6/20)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(20) Page(11:6/20)Thread(50:6/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(63:6/null) setframe Frame(20)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(486),Device(0),Page(63:6/20),Diskblock(63),FileRead,Openfile(58:6/0),Thread(50:6/W1)) this Page(63:6/20)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(50:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(50:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(20)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(487),Device(2),Page(3:6/28),Diskblock(3),FileRead,Openfile(60:2/2),Thread(47:6/W0)) this Page(3:6/28)
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(488),Device(2),Page(19:6/13),Diskblock(11),FileRead,Openfile(60:2/2),Thread(48:6/W0)) this Page(19:6/13)
[Info][PageTableEntry][do_lock] Get frame Frame(13)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(63:6/20)
[PageFaultHandler][do_handlePageFault] thread Thread(50:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(5:6/25)
[MMU][do_refer] address = 1017 offset = 1017 page no = 0 Thread(42:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(42:2/RU) 21 Page(0:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(24) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(0:2/null)
[PageFaultHandler][do_handlePageFault] page Page(0:2/null) setframe Frame(24)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(489),Device(0),Page(0:2/24),Diskblock(64),FileRead,Openfile(4:2/0),Thread(42:2/W1)) this Page(0:2/24)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(42:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(42:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(24)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(0:2/24)
[PageFaultHandler][do_handlePageFault] thread Thread(42:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
Simulation progress: 71049/250000[MMU][do_refer] address = 50216 offset = 40 page no = 49 Thread(49:6/RU)
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 38282 offset = 394 page no = 37 Thread(46:6/RU)
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(3:6/28)
[MMU][do_refer] address = 45384 offset = 328 page no = 44 Thread(42:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(42:2/RU) 21 Page(44:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(0) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(44:2/null)
[PageFaultHandler][do_handlePageFault] page Page(44:2/null) setframe Frame(0)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(490),Device(0),Page(44:2/0),Diskblock(108),FileRead,Openfile(4:2/0),Thread(42:2/W1)) this Page(44:2/0)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(42:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(42:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 36067 offset = 227 page no = 35 Thread(50:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(50:6/RU) 21 Page(35:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(4) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(35:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(4:2/4)
[PageFaultHandler][do_handlePageFault] Frame(4) is dirty, do swap-out, Thread(50:6/W0)
[PageFaultHandler][SwapOut] page Page(4:2/4) frame Frame(4)file Openfile(58:6/0)
[PageFaultHandler][SwapOut] block no 4
[Info][PageTableEntry][do_lock] iorb IORB(Id(491),Device(0),Page(4:2/4),Diskblock(4),FileWrite,Openfile(58:6/0),Thread(50:6/W1)) this Page(4:2/4)
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 46576 offset = 496 page no = 45 Thread(51:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(51:6/RU) 22 Page(45:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(17) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(45:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(55:2/17)
[PageFaultHandler][do_handlePageFault] page Page(45:6/null) setframe Frame(17)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(492),Device(0),Page(45:6/17),Diskblock(45),FileRead,Openfile(58:6/0),Thread(51:6/W1)) this Page(45:6/17)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(51:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(51:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(44:2/0)
[PageFaultHandler][do_handlePageFault] thread Thread(42:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 2021 offset = 997 page no = 1 Thread(49:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(49:6/RU) 22 Page(1:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(27) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(1:6/null)
[PageFaultHandler][do_handlePageFault] page Page(1:6/null) setframe Frame(27)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(493),Device(0),Page(1:6/27),Diskblock(1),FileRead,Openfile(58:6/0),Thread(49:6/W1)) this Page(1:6/27)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(49:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(49:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(4:2/4)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(4) Page(4:2/4)Thread(50:6/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(35:6/null) setframe Frame(4)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(494),Device(0),Page(35:6/4),Diskblock(35),FileRead,Openfile(58:6/0),Thread(50:6/W1)) this Page(35:6/4)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(50:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(50:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 22549 offset = 21 page no = 22 Thread(42:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(42:2/RU) 21 Page(22:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(12) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(22:2/null)
[PageFaultHandler][do_handlePageFault] page Page(22:2/null) setframe Frame(12)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(495),Device(0),Page(22:2/12),Diskblock(86),FileRead,Openfile(4:2/0),Thread(42:2/W1)) this Page(22:2/12)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(42:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(42:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(12)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(45:6/17)
[PageFaultHandler][do_handlePageFault] thread Thread(51:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(1:6/27)
[PageFaultHandler][do_handlePageFault] thread Thread(49:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(35:6/4)
[PageFaultHandler][do_handlePageFault] thread Thread(50:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(22:2/12)
[PageFaultHandler][do_handlePageFault] thread Thread(42:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 2167 offset = 119 page no = 2 Thread(52:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(52:6/RU) 22 Page(2:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(4) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(2:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(35:6/4)
[PageFaultHandler][do_handlePageFault] page Page(2:6/null) setframe Frame(4)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(496),Device(0),Page(2:6/4),Diskblock(2),FileRead,Openfile(58:6/0),Thread(52:6/W1)) this Page(2:6/4)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(52:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(52:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 72020/250000[PageTableEntry][do_unlock] this Page(2:6/4)
[PageFaultHandler][do_handlePageFault] thread Thread(52:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 16095 offset = 735 page no = 15 Thread(45:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(45:6/RU) 22 Page(15:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(7) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(15:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(2:2/7)
[PageFaultHandler][do_handlePageFault] Frame(7) is dirty, do swap-out, Thread(45:6/W0)
[PageFaultHandler][SwapOut] page Page(2:2/7) frame Frame(7)file Openfile(58:6/0)
[PageFaultHandler][SwapOut] block no 2
[Info][PageTableEntry][do_lock] iorb IORB(Id(497),Device(0),Page(2:2/7),Diskblock(2),FileWrite,Openfile(58:6/0),Thread(45:6/W1)) this Page(2:2/7)
[Info][PageTableEntry][do_lock] Get frame Frame(7)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(2:2/7)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(7) Page(2:2/7)Thread(45:6/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(15:6/null) setframe Frame(7)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(498),Device(0),Page(15:6/7),Diskblock(15),FileRead,Openfile(58:6/0),Thread(45:6/W1)) this Page(15:6/7)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(45:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(45:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(7)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(15:6/7)
[PageFaultHandler][do_handlePageFault] thread Thread(45:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(19:6/13)
[MMU][do_refer] address = 57131 offset = 811 page no = 55 Thread(50:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(50:6/RU) 21 Page(55:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(3) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(55:6/null)
[PageFaultHandler][do_handlePageFault] page Page(55:6/null) setframe Frame(3)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(499),Device(0),Page(55:6/3),Diskblock(55),FileRead,Openfile(58:6/0),Thread(50:6/W1)) this Page(55:6/3)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(50:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(50:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(3)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(55:6/3)
[PageFaultHandler][do_handlePageFault] thread Thread(50:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 15631 offset = 271 page no = 15 Thread(45:6/RU)
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 41398 offset = 438 page no = 40 Thread(49:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(49:6/RU) 21 Page(40:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(5) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(40:6/null)
[PageFaultHandler][do_handlePageFault] page Page(40:6/null) setframe Frame(5)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(500),Device(0),Page(40:6/5),Diskblock(40),FileRead,Openfile(58:6/0),Thread(49:6/W1)) this Page(40:6/5)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(49:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(49:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(40:6/5)
[PageFaultHandler][do_handlePageFault] thread Thread(49:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
Simulation progress: 73044/250000[Info][PageTableEntry][do_lock] iorb IORB(Id(501),Device(2),Page(0:6/null),Diskblock(12),FileRead,Openfile(64:6/2),Thread(50:6/W0)) this Page(0:6/null)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] requrest_thread = Thread(50:6/W0)
[Info][PageTableEntry][do_lock] validating_thread is null, handlePageFault
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(50:6/W0) 23 Page(0:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(29) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(0:6/null)
[PageFaultHandler][do_handlePageFault] page Page(0:6/null) setframe Frame(29)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(502),Device(0),Page(0:6/29),Diskblock(0),FileRead,Openfile(58:6/0),Thread(50:6/W2)) this Page(0:6/29)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(50:6/W2)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(50:6/W2)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(0:6/29)
[PageFaultHandler][do_handlePageFault] thread Thread(50:6/W1) status = 31
 Thread do_handlePageFault Success
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(503),Device(2),Page(4:6/null),Diskblock(12),FileRead,Openfile(64:6/2),Thread(45:6/W0)) this Page(4:6/null)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] requrest_thread = Thread(45:6/W0)
[Info][PageTableEntry][do_lock] validating_thread is null, handlePageFault
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(45:6/W0) 23 Page(4:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(14) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(4:6/null)
[PageFaultHandler][do_handlePageFault] page Page(4:6/null) setframe Frame(14)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(504),Device(0),Page(4:6/14),Diskblock(4),FileRead,Openfile(58:6/0),Thread(45:6/W2)) this Page(4:6/14)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(45:6/W2)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(45:6/W2)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(14)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(4:6/14)
[PageFaultHandler][do_handlePageFault] thread Thread(45:6/W1) status = 31
 Thread do_handlePageFault Success
[Info][PageTableEntry][do_lock] Get frame Frame(14)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 46248 offset = 168 page no = 45 Thread(48:6/RU)
[MMU][do_refer] Do memory read.
[Info][PageTableEntry][do_lock] iorb IORB(Id(505),Device(2),Page(1:6/27),Diskblock(12),FileRead,Openfile(64:6/2),Thread(47:6/W0)) this Page(1:6/27)
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(0:6/29)
[MMU][do_refer] address = 38733 offset = 845 page no = 37 Thread(52:6/RU)
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 44584 offset = 552 page no = 43 Thread(52:6/RU)
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(4:6/14)
Simulation progress: 74050/250000[MMU][do_refer] address = 52253 offset = 29 page no = 51 Thread(50:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(50:6/RU) 22 Page(51:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(9) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(51:6/null)
[PageFaultHandler][do_handlePageFault] page Page(51:6/null) setframe Frame(9)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(506),Device(0),Page(51:6/9),Diskblock(51),FileRead,Openfile(58:6/0),Thread(50:6/W1)) this Page(51:6/9)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(50:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(50:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(51:6/9)
[PageFaultHandler][do_handlePageFault] thread Thread(50:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 53870 offset = 622 page no = 52 Thread(52:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(52:6/RU) 22 Page(52:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(21) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(52:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(23:2/21)
[PageFaultHandler][do_handlePageFault] Frame(21) is dirty, do swap-out, Thread(52:6/W0)
[PageFaultHandler][SwapOut] page Page(23:2/21) frame Frame(21)file Openfile(58:6/0)
[PageFaultHandler][SwapOut] block no 23
[Info][PageTableEntry][do_lock] iorb IORB(Id(507),Device(0),Page(23:2/21),Diskblock(23),FileWrite,Openfile(58:6/0),Thread(52:6/W1)) this Page(23:2/21)
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(1:6/27)
[PageTableEntry][do_unlock] this Page(23:2/21)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(21) Page(23:2/21)Thread(52:6/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(52:6/null) setframe Frame(21)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(508),Device(0),Page(52:6/21),Diskblock(52),FileRead,Openfile(58:6/0),Thread(52:6/W1)) this Page(52:6/21)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(52:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(52:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(52:6/21)
[PageFaultHandler][do_handlePageFault] thread Thread(52:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 19639 offset = 183 page no = 19 Thread(47:6/RU)
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 44277 offset = 245 page no = 43 Thread(47:6/RU)
[MMU][do_refer] Do memory write.
Simulation progress: 75040/250000[MMU][do_refer] address = 57556 offset = 212 page no = 56 Thread(45:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(45:6/RU) 22 Page(56:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(26) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(56:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(41:6/26)
[PageFaultHandler][do_handlePageFault] Frame(26) is dirty, do swap-out, Thread(45:6/W0)
[PageFaultHandler][SwapOut] page Page(41:6/26) frame Frame(26)file Openfile(58:6/0)
[PageFaultHandler][SwapOut] block no 41
[Info][PageTableEntry][do_lock] iorb IORB(Id(509),Device(0),Page(41:6/26),Diskblock(41),FileWrite,Openfile(58:6/0),Thread(45:6/W1)) this Page(41:6/26)
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(41:6/26)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(26) Page(41:6/26)Thread(45:6/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(56:6/null) setframe Frame(26)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(510),Device(0),Page(56:6/26),Diskblock(56),FileRead,Openfile(58:6/0),Thread(45:6/W1)) this Page(56:6/26)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(45:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(45:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(56:6/26)
[PageFaultHandler][do_handlePageFault] thread Thread(45:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 2274 offset = 226 page no = 2 Thread(47:6/RU)
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 55092 offset = 820 page no = 53 Thread(47:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(47:6/RU) 21 Page(53:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(15) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(53:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(51:2/15)
[PageFaultHandler][do_handlePageFault] page Page(53:6/null) setframe Frame(15)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(511),Device(0),Page(53:6/15),Diskblock(53),FileRead,Openfile(58:6/0),Thread(47:6/W1)) this Page(53:6/15)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(47:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(47:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(15)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(53:6/15)
[PageFaultHandler][do_handlePageFault] thread Thread(47:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 14625 offset = 289 page no = 14 Thread(45:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(45:6/RU) 22 Page(14:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(10) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(14:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(20:6/10)
[PageFaultHandler][do_handlePageFault] page Page(14:6/null) setframe Frame(10)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(512),Device(0),Page(14:6/10),Diskblock(14),FileRead,Openfile(58:6/0),Thread(45:6/W1)) this Page(14:6/10)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(45:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(45:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(10)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(14:6/10)
[PageFaultHandler][do_handlePageFault] thread Thread(45:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 60067 offset = 675 page no = 58 Thread(47:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(47:6/RU) 21 Page(58:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(28) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(58:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(3:6/28)
[PageFaultHandler][do_handlePageFault] Frame(28) is dirty, do swap-out, Thread(47:6/W0)
[PageFaultHandler][SwapOut] page Page(3:6/28) frame Frame(28)file Openfile(58:6/0)
[PageFaultHandler][SwapOut] block no 3
[Info][PageTableEntry][do_lock] iorb IORB(Id(513),Device(0),Page(3:6/28),Diskblock(3),FileWrite,Openfile(58:6/0),Thread(47:6/W1)) this Page(3:6/28)
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 76002/250000[PageTableEntry][do_unlock] this Page(3:6/28)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(28) Page(3:6/28)Thread(47:6/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(58:6/null) setframe Frame(28)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(514),Device(0),Page(58:6/28),Diskblock(58),FileRead,Openfile(58:6/0),Thread(47:6/W1)) this Page(58:6/28)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(47:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(47:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 60405 offset = 1013 page no = 58 Thread(49:6/RU)
[PageTableEntry][do_unlock] this Page(58:6/28)
[PageFaultHandler][do_handlePageFault] thread Thread(47:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 44137 offset = 105 page no = 43 Thread(49:6/RU)
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 49293 offset = 141 page no = 48 Thread(49:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(49:6/RU) 21 Page(48:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(13) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(48:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(19:6/13)
[PageFaultHandler][do_handlePageFault] Frame(13) is dirty, do swap-out, Thread(49:6/W0)
[PageFaultHandler][SwapOut] page Page(19:6/13) frame Frame(13)file Openfile(58:6/0)
[PageFaultHandler][SwapOut] block no 19
[Info][PageTableEntry][do_lock] iorb IORB(Id(515),Device(0),Page(19:6/13),Diskblock(19),FileWrite,Openfile(58:6/0),Thread(49:6/W1)) this Page(19:6/13)
[Info][PageTableEntry][do_lock] Get frame Frame(13)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 54234 offset = 986 page no = 52 Thread(47:6/RU)
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 49879 offset = 727 page no = 48 Thread(47:6/RU)
[PageTableEntry][do_unlock] this Page(19:6/13)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(13) Page(19:6/13)Thread(49:6/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(48:6/null) setframe Frame(13)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(516),Device(0),Page(48:6/13),Diskblock(48),FileRead,Openfile(58:6/0),Thread(49:6/W1)) this Page(48:6/13)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(49:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(49:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(13)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 3332 offset = 260 page no = 3 Thread(54:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(54:2/RU) 21 Page(3:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(16) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(3:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(60:6/16)
[PageFaultHandler][do_handlePageFault] page Page(3:2/null) setframe Frame(16)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(517),Device(0),Page(3:2/16),Diskblock(67),FileRead,Openfile(4:2/0),Thread(54:2/W1)) this Page(3:2/16)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(54:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(54:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(48:6/13)
[PageFaultHandler][do_handlePageFault] thread Thread(49:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(3:2/16)
[PageFaultHandler][do_handlePageFault] thread Thread(54:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 58269 offset = 925 page no = 56 Thread(47:6/RU)
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 64712 offset = 200 page no = 63 Thread(47:6/RU)
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 25526 offset = 950 page no = 24 Thread(47:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(47:6/RU) 22 Page(24:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(16) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(24:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(3:2/16)
[PageFaultHandler][do_handlePageFault] page Page(24:6/null) setframe Frame(16)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(518),Device(0),Page(24:6/16),Diskblock(24),FileRead,Openfile(58:6/0),Thread(47:6/W1)) this Page(24:6/16)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(47:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(47:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(24:6/16)
[PageFaultHandler][do_handlePageFault] thread Thread(47:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 27481 offset = 857 page no = 26 Thread(54:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(54:2/RU) 21 Page(26:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(18) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(26:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(60:2/18)
[PageFaultHandler][do_handlePageFault] Frame(18) is dirty, do swap-out, Thread(54:2/W0)
[PageFaultHandler][SwapOut] page Page(60:2/18) frame Frame(18)file Openfile(4:2/0)
[PageFaultHandler][SwapOut] block no 60
[Info][PageTableEntry][do_lock] iorb IORB(Id(519),Device(0),Page(60:2/18),Diskblock(124),FileWrite,Openfile(4:2/0),Thread(54:2/W1)) this Page(60:2/18)
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(60:2/18)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(18) Page(60:2/18)Thread(54:2/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(26:2/null) setframe Frame(18)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(520),Device(0),Page(26:2/18),Diskblock(90),FileRead,Openfile(4:2/0),Thread(54:2/W1)) this Page(26:2/18)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(54:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(54:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(26:2/18)
[PageFaultHandler][do_handlePageFault] thread Thread(54:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
Simulation progress: 77134/250000[MMU][do_refer] address = 6882 offset = 738 page no = 6 Thread(52:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(52:6/RU) 21 Page(6:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(22) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(6:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(16:2/22)
[PageFaultHandler][do_handlePageFault] page Page(6:6/null) setframe Frame(22)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(521),Device(0),Page(6:6/22),Diskblock(6),FileRead,Openfile(58:6/0),Thread(52:6/W1)) this Page(6:6/22)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(52:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(52:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(22)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(6:6/22)
[PageFaultHandler][do_handlePageFault] thread Thread(52:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 56929 offset = 609 page no = 55 Thread(54:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(54:2/RU) 21 Page(55:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(8) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(55:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(43:6/8)
[PageFaultHandler][do_handlePageFault] Frame(8) is dirty, do swap-out, Thread(54:2/W0)
[PageFaultHandler][SwapOut] page Page(43:6/8) frame Frame(8)file Openfile(4:2/0)
[PageFaultHandler][SwapOut] block no 43
[Info][PageTableEntry][do_lock] iorb IORB(Id(522),Device(0),Page(43:6/8),Diskblock(107),FileWrite,Openfile(4:2/0),Thread(54:2/W1)) this Page(43:6/8)
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 45090 offset = 34 page no = 44 Thread(49:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(49:6/RU) 21 Page(44:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(19) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(44:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(25:2/19)
[PageFaultHandler][do_handlePageFault] Frame(19) is dirty, do swap-out, Thread(49:6/W0)
[PageFaultHandler][SwapOut] page Page(25:2/19) frame Frame(19)file Openfile(58:6/0)
[PageFaultHandler][SwapOut] block no 25
[Info][PageTableEntry][do_lock] iorb IORB(Id(523),Device(0),Page(25:2/19),Diskblock(25),FileWrite,Openfile(58:6/0),Thread(49:6/W1)) this Page(25:2/19)
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 34483 offset = 691 page no = 33 Thread(33:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(33:2/RU) 22 Page(33:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(23) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(33:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(37:6/23)
[PageFaultHandler][do_handlePageFault] Frame(23) is dirty, do swap-out, Thread(33:2/W0)
[PageFaultHandler][SwapOut] page Page(37:6/23) frame Frame(23)file Openfile(4:2/0)
[PageFaultHandler][SwapOut] block no 37
[Info][PageTableEntry][do_lock] iorb IORB(Id(524),Device(0),Page(37:6/23),Diskblock(101),FileWrite,Openfile(4:2/0),Thread(33:2/W1)) this Page(37:6/23)
[Info][PageTableEntry][do_lock] Get frame Frame(23)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(43:6/8)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(8) Page(43:6/8)Thread(54:2/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(55:2/null) setframe Frame(8)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(525),Device(0),Page(55:2/8),Diskblock(119),FileRead,Openfile(4:2/0),Thread(54:2/W1)) this Page(55:2/8)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(54:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(54:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(25:2/19)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(19) Page(25:2/19)Thread(49:6/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(44:6/null) setframe Frame(19)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(526),Device(0),Page(44:6/19),Diskblock(44),FileRead,Openfile(58:6/0),Thread(49:6/W1)) this Page(44:6/19)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(49:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(49:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 33953 offset = 161 page no = 33 Thread(47:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(47:6/RU) 22 Page(33:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(1) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(33:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(38:6/1)
[PageFaultHandler][do_handlePageFault] Frame(1) is dirty, do swap-out, Thread(47:6/W0)
[PageFaultHandler][SwapOut] page Page(38:6/1) frame Frame(1)file Openfile(58:6/0)
[PageFaultHandler][SwapOut] block no 38
[Info][PageTableEntry][do_lock] iorb IORB(Id(527),Device(0),Page(38:6/1),Diskblock(38),FileWrite,Openfile(58:6/0),Thread(47:6/W1)) this Page(38:6/1)
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(37:6/23)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(23) Page(37:6/23)Thread(33:2/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(33:2/null) setframe Frame(23)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(528),Device(0),Page(33:2/23),Diskblock(97),FileRead,Openfile(4:2/0),Thread(33:2/W1)) this Page(33:2/23)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(33:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(33:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(23)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(55:2/8)
[PageFaultHandler][do_handlePageFault] thread Thread(54:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(44:6/19)
[PageFaultHandler][do_handlePageFault] thread Thread(49:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[Info][PageTableEntry][do_lock] iorb IORB(Id(529),Device(2),Page(0:6/29),Diskblock(15),FileWrite,Openfile(66:6/2),Thread(49:6/W0)) this Page(0:6/29)
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(38:6/1)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(1) Page(38:6/1)Thread(47:6/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(33:6/null) setframe Frame(1)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(530),Device(0),Page(33:6/1),Diskblock(33),FileRead,Openfile(58:6/0),Thread(47:6/W1)) this Page(33:6/1)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(47:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(47:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 78021/250000[PageTableEntry][do_unlock] this Page(33:2/23)
[PageFaultHandler][do_handlePageFault] thread Thread(33:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(33:6/1)
[PageFaultHandler][do_handlePageFault] thread Thread(47:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(0:6/29)
[MMU][do_refer] address = 12135 offset = 871 page no = 11 Thread(49:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(49:6/RU) 21 Page(11:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(19) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(11:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(44:6/19)
[PageFaultHandler][do_handlePageFault] page Page(11:6/null) setframe Frame(19)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(531),Device(0),Page(11:6/19),Diskblock(11),FileRead,Openfile(58:6/0),Thread(49:6/W1)) this Page(11:6/19)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(49:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(49:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(532),Device(2),Page(0:2/24),Diskblock(15),FileRead,Openfile(66:6/2),Thread(33:2/W0)) this Page(0:2/24)
[Info][PageTableEntry][do_lock] Get frame Frame(24)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(11:6/19)
[PageFaultHandler][do_handlePageFault] thread Thread(49:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 60562 offset = 146 page no = 59 Thread(49:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(49:6/RU) 21 Page(59:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(1) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(59:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(33:6/1)
[PageFaultHandler][do_handlePageFault] Frame(1) is dirty, do swap-out, Thread(49:6/W0)
[PageFaultHandler][SwapOut] page Page(33:6/1) frame Frame(1)file Openfile(58:6/0)
[PageFaultHandler][SwapOut] block no 33
[Info][PageTableEntry][do_lock] iorb IORB(Id(533),Device(0),Page(33:6/1),Diskblock(33),FileWrite,Openfile(58:6/0),Thread(49:6/W1)) this Page(33:6/1)
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(33:6/1)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(1) Page(33:6/1)Thread(49:6/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(59:6/null) setframe Frame(1)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(534),Device(0),Page(59:6/1),Diskblock(59),FileRead,Openfile(58:6/0),Thread(49:6/W1)) this Page(59:6/1)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(49:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(49:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(59:6/1)
[PageFaultHandler][do_handlePageFault] thread Thread(49:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 9381 offset = 165 page no = 9 Thread(49:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(49:6/RU) 21 Page(9:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(11) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(9:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(62:2/11)
[PageFaultHandler][do_handlePageFault] Frame(11) is dirty, do swap-out, Thread(49:6/W0)
[PageFaultHandler][SwapOut] page Page(62:2/11) frame Frame(11)file Openfile(58:6/0)
[PageFaultHandler][SwapOut] block no 62
[Info][PageTableEntry][do_lock] iorb IORB(Id(535),Device(0),Page(62:2/11),Diskblock(62),FileWrite,Openfile(58:6/0),Thread(49:6/W1)) this Page(62:2/11)
[Info][PageTableEntry][do_lock] Get frame Frame(11)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 14250 offset = 938 page no = 13 Thread(47:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(47:6/RU) 22 Page(13:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(0) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(13:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(44:2/0)
[PageFaultHandler][do_handlePageFault] page Page(13:6/null) setframe Frame(0)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(536),Device(0),Page(13:6/0),Diskblock(13),FileRead,Openfile(58:6/0),Thread(47:6/W1)) this Page(13:6/0)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(47:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(47:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(0:2/24)
[PageTableEntry][do_unlock] this Page(62:2/11)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(11) Page(62:2/11)Thread(49:6/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(9:6/null) setframe Frame(11)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(537),Device(0),Page(9:6/11),Diskblock(9),FileRead,Openfile(58:6/0),Thread(49:6/W1)) this Page(9:6/11)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(49:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(49:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(11)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(13:6/0)
[PageFaultHandler][do_handlePageFault] thread Thread(47:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(9:6/11)
[PageFaultHandler][do_handlePageFault] thread Thread(49:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
Simulation progress: 79056/250000[MMU][do_refer] address = 44580 offset = 548 page no = 43 Thread(47:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(47:6/RU) 22 Page(43:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(24) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(43:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(0:2/24)
[PageFaultHandler][do_handlePageFault] Frame(24) is dirty, do swap-out, Thread(47:6/W0)
[PageFaultHandler][SwapOut] page Page(0:2/24) frame Frame(24)file Openfile(58:6/0)
[PageFaultHandler][SwapOut] block no 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(538),Device(0),Page(0:2/24),Diskblock(0),FileWrite,Openfile(58:6/0),Thread(47:6/W1)) this Page(0:2/24)
[Info][PageTableEntry][do_lock] Get frame Frame(24)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(0:2/24)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(24) Page(0:2/24)Thread(47:6/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(43:6/null) setframe Frame(24)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(539),Device(0),Page(43:6/24),Diskblock(43),FileRead,Openfile(58:6/0),Thread(47:6/W1)) this Page(43:6/24)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(47:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(47:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(24)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(43:6/24)
[PageFaultHandler][do_handlePageFault] thread Thread(47:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 27837 offset = 189 page no = 27 Thread(47:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(47:6/RU) 22 Page(27:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(27) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(27:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(1:6/27)
[PageFaultHandler][do_handlePageFault] Frame(27) is dirty, do swap-out, Thread(47:6/W0)
[PageFaultHandler][SwapOut] page Page(1:6/27) frame Frame(27)file Openfile(58:6/0)
[PageFaultHandler][SwapOut] block no 1
[Info][PageTableEntry][do_lock] iorb IORB(Id(540),Device(0),Page(1:6/27),Diskblock(1),FileWrite,Openfile(58:6/0),Thread(47:6/W1)) this Page(1:6/27)
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(1:6/27)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(27) Page(1:6/27)Thread(47:6/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(27:6/null) setframe Frame(27)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(541),Device(0),Page(27:6/27),Diskblock(27),FileRead,Openfile(58:6/0),Thread(47:6/W1)) this Page(27:6/27)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(47:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(47:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(27:6/27)
[PageFaultHandler][do_handlePageFault] thread Thread(47:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 29288 offset = 616 page no = 28 Thread(47:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(47:6/RU) 22 Page(28:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(12) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(28:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(22:2/12)
[PageFaultHandler][do_handlePageFault] page Page(28:6/null) setframe Frame(12)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(542),Device(0),Page(28:6/12),Diskblock(28),FileRead,Openfile(58:6/0),Thread(47:6/W1)) this Page(28:6/12)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(47:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(47:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(12)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(28:6/12)
[PageFaultHandler][do_handlePageFault] thread Thread(47:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 51753 offset = 553 page no = 50 Thread(47:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(47:6/RU) 21 Page(50:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(17) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(50:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(45:6/17)
[PageFaultHandler][do_handlePageFault] Frame(17) is dirty, do swap-out, Thread(47:6/W0)
[PageFaultHandler][SwapOut] page Page(45:6/17) frame Frame(17)file Openfile(58:6/0)
[PageFaultHandler][SwapOut] block no 45
[Info][PageTableEntry][do_lock] iorb IORB(Id(543),Device(0),Page(45:6/17),Diskblock(45),FileWrite,Openfile(58:6/0),Thread(47:6/W1)) this Page(45:6/17)
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(45:6/17)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(17) Page(45:6/17)Thread(47:6/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(50:6/null) setframe Frame(17)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(544),Device(0),Page(50:6/17),Diskblock(50),FileRead,Openfile(58:6/0),Thread(47:6/W1)) this Page(50:6/17)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(47:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(47:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(50:6/17)
[PageFaultHandler][do_handlePageFault] thread Thread(47:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 1052 offset = 28 page no = 1 Thread(47:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(47:6/RU) 22 Page(1:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(6) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(1:6/null)
[PageFaultHandler][do_handlePageFault] page Page(1:6/null) setframe Frame(6)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(545),Device(0),Page(1:6/6),Diskblock(1),FileRead,Openfile(58:6/0),Thread(47:6/W1)) this Page(1:6/6)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(47:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(47:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(6)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(1:6/6)
[PageFaultHandler][do_handlePageFault] thread Thread(47:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageCleanDaemon][unleash] osp.Memory.PageCleanDaemon@e14d43 execute time 80000
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(4)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(7)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(29)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(14)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(9)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(21)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(4)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(4) Page(2:6/4) isDirty true
[PageFaultHandler][SwapOut] file Openfile(58:6/0)
[PageFaultHandler][SwapOut] block no 2
[Info][PageTableEntry][do_lock] iorb IORB(Id(546),Device(0),Page(2:6/4),Diskblock(2),FileWrite,Openfile(58:6/0),Thread(55:0/W1)) this Page(2:6/4)
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 80030/250000[PageTableEntry][do_unlock] this Page(2:6/4)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(4) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(7)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(7) Page(15:6/7) isDirty true
[PageFaultHandler][SwapOut] file Openfile(58:6/0)
[PageFaultHandler][SwapOut] block no 15
[Info][PageTableEntry][do_lock] iorb IORB(Id(547),Device(0),Page(15:6/7),Diskblock(15),FileWrite,Openfile(58:6/0),Thread(55:0/W1)) this Page(15:6/7)
[Info][PageTableEntry][do_lock] Get frame Frame(7)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(15:6/7)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(7) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(29)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(29) Page(0:6/29) isDirty true
[PageFaultHandler][SwapOut] file Openfile(58:6/0)
[PageFaultHandler][SwapOut] block no 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(548),Device(0),Page(0:6/29),Diskblock(0),FileWrite,Openfile(58:6/0),Thread(55:0/W1)) this Page(0:6/29)
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(0:6/29)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(29) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(14)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(14) Page(4:6/14) isDirty true
[PageFaultHandler][SwapOut] file Openfile(58:6/0)
[PageFaultHandler][SwapOut] block no 4
[Info][PageTableEntry][do_lock] iorb IORB(Id(549),Device(0),Page(4:6/14),Diskblock(4),FileWrite,Openfile(58:6/0),Thread(55:0/W1)) this Page(4:6/14)
[Info][PageTableEntry][do_lock] Get frame Frame(14)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 50730 offset = 554 page no = 49 Thread(56:6/RU)
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(4:6/14)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(14) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(9)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(9) Page(51:6/9) isDirty true
[PageFaultHandler][SwapOut] file Openfile(58:6/0)
[PageFaultHandler][SwapOut] block no 51
[Info][PageTableEntry][do_lock] iorb IORB(Id(550),Device(0),Page(51:6/9),Diskblock(51),FileWrite,Openfile(58:6/0),Thread(55:0/W1)) this Page(51:6/9)
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(51:6/9)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(9) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(21)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(21) Page(52:6/21) isDirty true
[PageFaultHandler][SwapOut] file Openfile(58:6/0)
[PageFaultHandler][SwapOut] block no 52
[Info][PageTableEntry][do_lock] iorb IORB(Id(551),Device(0),Page(52:6/21),Diskblock(52),FileWrite,Openfile(58:6/0),Thread(55:0/W1)) this Page(52:6/21)
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(52:6/21)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(21) finish
[MMU][do_refer] address = 19969 offset = 513 page no = 19 Thread(56:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(56:6/RU) 21 Page(19:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(4) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(19:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(2:6/4)
[PageFaultHandler][do_handlePageFault] page Page(19:6/null) setframe Frame(4)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(552),Device(0),Page(19:6/4),Diskblock(19),FileRead,Openfile(58:6/0),Thread(56:6/W1)) this Page(19:6/4)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(56:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(56:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(19:6/4)
[PageFaultHandler][do_handlePageFault] thread Thread(56:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 64668 offset = 156 page no = 63 Thread(56:6/RU)
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 37669 offset = 805 page no = 36 Thread(56:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(56:6/RU) 21 Page(36:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(7) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(36:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(15:6/7)
[PageFaultHandler][do_handlePageFault] page Page(36:6/null) setframe Frame(7)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(553),Device(0),Page(36:6/7),Diskblock(36),FileRead,Openfile(58:6/0),Thread(56:6/W1)) this Page(36:6/7)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(56:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(56:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(7)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(36:6/7)
[PageFaultHandler][do_handlePageFault] thread Thread(56:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
Simulation progress: 81060/250000[MMU][do_refer] address = 54221 offset = 973 page no = 52 Thread(56:6/RU)
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 29692 offset = 1020 page no = 28 Thread(56:6/RU)
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 20445 offset = 989 page no = 19 Thread(56:6/RU)
[MMU][do_refer] Do memory write.
Simulation progress: 82040/250000[MMU][do_refer] address = 62572 offset = 108 page no = 61 Thread(56:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(56:6/RU) 22 Page(61:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(3) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(61:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(55:6/3)
[PageFaultHandler][do_handlePageFault] page Page(61:6/null) setframe Frame(3)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(554),Device(0),Page(61:6/3),Diskblock(61),FileRead,Openfile(58:6/0),Thread(56:6/W1)) this Page(61:6/3)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(56:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(56:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(3)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(61:6/3)
[PageFaultHandler][do_handlePageFault] thread Thread(56:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 3029 offset = 981 page no = 2 Thread(56:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(56:6/RU) 21 Page(2:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(5) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(2:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(40:6/5)
[PageFaultHandler][do_handlePageFault] page Page(2:6/null) setframe Frame(5)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(555),Device(0),Page(2:6/5),Diskblock(2),FileRead,Openfile(58:6/0),Thread(56:6/W1)) this Page(2:6/5)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(56:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(56:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(2:6/5)
[PageFaultHandler][do_handlePageFault] thread Thread(56:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 54890 offset = 618 page no = 53 Thread(56:6/RU)
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 62606 offset = 142 page no = 61 Thread(57:6/RU)
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 56082 offset = 786 page no = 54 Thread(57:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(57:6/RU) 22 Page(54:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(29) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(54:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(0:6/29)
[PageFaultHandler][do_handlePageFault] page Page(54:6/null) setframe Frame(29)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(556),Device(0),Page(54:6/29),Diskblock(54),FileRead,Openfile(58:6/0),Thread(57:6/W1)) this Page(54:6/29)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(57:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(57:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 27273 offset = 649 page no = 26 Thread(59:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(59:6/RU) 22 Page(26:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(14) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(26:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(4:6/14)
[PageFaultHandler][do_handlePageFault] page Page(26:6/null) setframe Frame(14)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(557),Device(0),Page(26:6/14),Diskblock(26),FileRead,Openfile(58:6/0),Thread(59:6/W1)) this Page(26:6/14)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(59:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(59:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(14)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 31568 offset = 848 page no = 30 Thread(56:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(56:6/RU) 21 Page(30:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(9) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(30:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(51:6/9)
[PageFaultHandler][do_handlePageFault] page Page(30:6/null) setframe Frame(9)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(558),Device(0),Page(30:6/9),Diskblock(30),FileRead,Openfile(58:6/0),Thread(56:6/W1)) this Page(30:6/9)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(56:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(56:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(54:6/29)
[PageFaultHandler][do_handlePageFault] thread Thread(57:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(26:6/14)
[PageFaultHandler][do_handlePageFault] thread Thread(59:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 39644 offset = 732 page no = 38 Thread(59:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(59:6/RU) 22 Page(38:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(14) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(38:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(26:6/14)
[PageFaultHandler][do_handlePageFault] Frame(14) is dirty, do swap-out, Thread(59:6/W0)
[PageFaultHandler][SwapOut] page Page(26:6/14) frame Frame(14)file Openfile(58:6/0)
[PageFaultHandler][SwapOut] block no 26
[Info][PageTableEntry][do_lock] iorb IORB(Id(559),Device(0),Page(26:6/14),Diskblock(26),FileWrite,Openfile(58:6/0),Thread(59:6/W1)) this Page(26:6/14)
[Info][PageTableEntry][do_lock] Get frame Frame(14)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(30:6/9)
[PageFaultHandler][do_handlePageFault] thread Thread(56:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 44333 offset = 301 page no = 43 Thread(56:6/RU)
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(26:6/14)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(14) Page(26:6/14)Thread(59:6/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(38:6/null) setframe Frame(14)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(560),Device(0),Page(38:6/14),Diskblock(38),FileRead,Openfile(58:6/0),Thread(59:6/W1)) this Page(38:6/14)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(59:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(59:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(14)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(38:6/14)
[PageFaultHandler][do_handlePageFault] thread Thread(59:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 12728 offset = 440 page no = 12 Thread(56:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(56:6/RU) 21 Page(12:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(21) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(12:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(52:6/21)
[PageFaultHandler][do_handlePageFault] page Page(12:6/null) setframe Frame(21)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(561),Device(0),Page(12:6/21),Diskblock(12),FileRead,Openfile(58:6/0),Thread(56:6/W1)) this Page(12:6/21)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(56:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(56:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(12:6/21)
[PageFaultHandler][do_handlePageFault] thread Thread(56:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
Simulation progress: 83020/250000[MMU][do_refer] address = 21334 offset = 854 page no = 20 Thread(42:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(42:2/RU) 21 Page(20:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(15) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(20:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(53:6/15)
[PageFaultHandler][do_handlePageFault] page Page(20:2/null) setframe Frame(15)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(562),Device(0),Page(20:2/15),Diskblock(84),FileRead,Openfile(4:2/0),Thread(42:2/W1)) this Page(20:2/15)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(42:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(42:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(15)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(20:2/15)
[PageFaultHandler][do_handlePageFault] thread Thread(42:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 10640 offset = 400 page no = 10 Thread(42:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(42:2/RU) 22 Page(10:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(10) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(10:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(14:6/10)
[PageFaultHandler][do_handlePageFault] Frame(10) is dirty, do swap-out, Thread(42:2/W0)
[PageFaultHandler][SwapOut] page Page(14:6/10) frame Frame(10)file Openfile(4:2/0)
[PageFaultHandler][SwapOut] block no 14
[Info][PageTableEntry][do_lock] iorb IORB(Id(563),Device(0),Page(14:6/10),Diskblock(78),FileWrite,Openfile(4:2/0),Thread(42:2/W1)) this Page(14:6/10)
[Info][PageTableEntry][do_lock] Get frame Frame(10)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(14:6/10)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(10) Page(14:6/10)Thread(42:2/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(10:2/null) setframe Frame(10)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(564),Device(0),Page(10:2/10),Diskblock(74),FileRead,Openfile(4:2/0),Thread(42:2/W1)) this Page(10:2/10)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(42:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(42:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(10)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(10:2/10)
[PageFaultHandler][do_handlePageFault] thread Thread(42:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 60323 offset = 931 page no = 58 Thread(42:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(42:2/RU) 22 Page(58:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(28) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(58:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(58:6/28)
[PageFaultHandler][do_handlePageFault] page Page(58:2/null) setframe Frame(28)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(565),Device(0),Page(58:2/28),Diskblock(122),FileRead,Openfile(4:2/0),Thread(42:2/W1)) this Page(58:2/28)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(42:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(42:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(58:2/28)
[PageFaultHandler][do_handlePageFault] thread Thread(42:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
Simulation progress: 84100/250000[MMU][do_refer] address = 36243 offset = 403 page no = 35 Thread(60:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(60:6/RU) 21 Page(35:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(13) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(35:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(48:6/13)
[PageFaultHandler][do_handlePageFault] Frame(13) is dirty, do swap-out, Thread(60:6/W0)
[PageFaultHandler][SwapOut] page Page(48:6/13) frame Frame(13)file Openfile(58:6/0)
[PageFaultHandler][SwapOut] block no 48
[Info][PageTableEntry][do_lock] iorb IORB(Id(566),Device(0),Page(48:6/13),Diskblock(48),FileWrite,Openfile(58:6/0),Thread(60:6/W1)) this Page(48:6/13)
[Info][PageTableEntry][do_lock] Get frame Frame(13)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(48:6/13)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(13) Page(48:6/13)Thread(60:6/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(35:6/null) setframe Frame(13)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(567),Device(0),Page(35:6/13),Diskblock(35),FileRead,Openfile(58:6/0),Thread(60:6/W1)) this Page(35:6/13)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(60:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(60:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(13)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(35:6/13)
[PageFaultHandler][do_handlePageFault] thread Thread(60:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 4299 offset = 203 page no = 4 Thread(56:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(56:6/RU) 21 Page(4:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(25) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(4:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(5:6/25)
[PageFaultHandler][do_handlePageFault] Frame(25) is dirty, do swap-out, Thread(56:6/W0)
[PageFaultHandler][SwapOut] page Page(5:6/25) frame Frame(25)file Openfile(58:6/0)
[PageFaultHandler][SwapOut] block no 5
[Info][PageTableEntry][do_lock] iorb IORB(Id(568),Device(0),Page(5:6/25),Diskblock(5),FileWrite,Openfile(58:6/0),Thread(56:6/W1)) this Page(5:6/25)
[Info][PageTableEntry][do_lock] Get frame Frame(25)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(5:6/25)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(25) Page(5:6/25)Thread(56:6/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(4:6/null) setframe Frame(25)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(569),Device(0),Page(4:6/25),Diskblock(4),FileRead,Openfile(58:6/0),Thread(56:6/W1)) this Page(4:6/25)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(56:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(56:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(25)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(4:6/25)
[PageFaultHandler][do_handlePageFault] thread Thread(56:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 61959 offset = 519 page no = 60 Thread(60:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(60:6/RU) 22 Page(60:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(16) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(60:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(24:6/16)
[PageFaultHandler][do_handlePageFault] Frame(16) is dirty, do swap-out, Thread(60:6/W0)
[PageFaultHandler][SwapOut] page Page(24:6/16) frame Frame(16)file Openfile(58:6/0)
[PageFaultHandler][SwapOut] block no 24
[Info][PageTableEntry][do_lock] iorb IORB(Id(570),Device(0),Page(24:6/16),Diskblock(24),FileWrite,Openfile(58:6/0),Thread(60:6/W1)) this Page(24:6/16)
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(24:6/16)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(16) Page(24:6/16)Thread(60:6/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(60:6/null) setframe Frame(16)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(571),Device(0),Page(60:6/16),Diskblock(60),FileRead,Openfile(58:6/0),Thread(60:6/W1)) this Page(60:6/16)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(60:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(60:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(60:6/16)
[PageFaultHandler][do_handlePageFault] thread Thread(60:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 60751 offset = 335 page no = 59 Thread(42:2/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(42:2/RU) 22 Page(59:2/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(18) Reserved by Task(2/L)
[PageFaultHandler][do_handlePageFault] page Page(59:2/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(26:2/18)
[PageFaultHandler][do_handlePageFault] page Page(59:2/null) setframe Frame(18)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(572),Device(0),Page(59:2/18),Diskblock(123),FileRead,Openfile(4:2/0),Thread(42:2/W1)) this Page(59:2/18)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(42:2/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(42:2/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 55426 offset = 130 page no = 54 Thread(60:6/RU)
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(59:2/18)
[PageFaultHandler][do_handlePageFault] thread Thread(42:2/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
Simulation progress: 85016/250000[PageTable][do_deallocateMemory] this Pagetable(Task(2/T))
[PageTable][do_deallocateMemory]  page_table_entry Page(10:2/10) frame_table_entry Frame(10)
[PageTable][do_deallocateMemory]  page_table_entry Page(20:2/15) frame_table_entry Frame(15)
[PageTable][do_deallocateMemory]  page_table_entry Page(33:2/23) frame_table_entry Frame(23)
[PageTable][do_deallocateMemory]  page_table_entry Page(55:2/8) frame_table_entry Frame(8)
[PageTable][do_deallocateMemory]  page_table_entry Page(58:2/28) frame_table_entry Frame(28)
[PageTable][do_deallocateMemory]  page_table_entry Page(59:2/18) frame_table_entry Frame(18)
[MMU][do_refer] address = 14022 offset = 710 page no = 13 Thread(56:6/RU)
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 17504 offset = 96 page no = 17 Thread(56:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(56:6/RU) 21 Page(17:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(22) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(17:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(6:6/22)
[PageFaultHandler][do_handlePageFault] page Page(17:6/null) setframe Frame(22)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(573),Device(0),Page(17:6/22),Diskblock(17),FileRead,Openfile(58:6/0),Thread(56:6/W1)) this Page(17:6/22)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(56:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(56:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(22)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(574),Device(1),Page(1:6/6),Diskblock(12),FileRead,Openfile(70:6/1),Thread(62:6/W0)) this Page(1:6/6)
[Info][PageTableEntry][do_lock] Get frame Frame(6)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(17:6/22)
[PageFaultHandler][do_handlePageFault] thread Thread(56:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(1:6/6)
[Info][PageTableEntry][do_lock] iorb IORB(Id(575),Device(1),Page(1:6/6),Diskblock(10),FileWrite,Openfile(72:6/1),Thread(61:6/W0)) this Page(1:6/6)
[Info][PageTableEntry][do_lock] Get frame Frame(6)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 43090 offset = 82 page no = 42 Thread(62:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(62:6/RU) 21 Page(42:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(8) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(42:6/null)
[PageFaultHandler][do_handlePageFault] page Page(42:6/null) setframe Frame(8)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(576),Device(0),Page(42:6/8),Diskblock(42),FileRead,Openfile(58:6/0),Thread(62:6/W1)) this Page(42:6/8)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(62:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(62:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 55591 offset = 295 page no = 54 Thread(60:6/RU)
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(1:6/6)
[PageTableEntry][do_unlock] this Page(42:6/8)
[PageFaultHandler][do_handlePageFault] thread Thread(62:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[Info][PageTableEntry][do_lock] iorb IORB(Id(577),Device(1),Page(0:7/null),Diskblock(13),FileWrite,Openfile(72:6/1),Thread(63:7/W0)) this Page(0:7/null)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] requrest_thread = Thread(63:7/W0)
[Info][PageTableEntry][do_lock] validating_thread is null, handlePageFault
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(63:7/W0) 23 Page(0:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(23) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(0:7/null)
[PageFaultHandler][do_handlePageFault] page Page(0:7/null) setframe Frame(23)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(578),Device(0),Page(0:7/23),Diskblock(64),FileRead,Openfile(68:7/0),Thread(63:7/W2)) this Page(0:7/23)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(63:7/W2)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(63:7/W2)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(23)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 22992 offset = 464 page no = 22 Thread(59:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(59:6/RU) 22 Page(22:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(2) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(22:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(49:6/2)
[PageFaultHandler][do_handlePageFault] Frame(2) is dirty, do swap-out, Thread(59:6/W0)
[PageFaultHandler][SwapOut] page Page(49:6/2) frame Frame(2)file Openfile(58:6/0)
[PageFaultHandler][SwapOut] block no 49
[Info][PageTableEntry][do_lock] iorb IORB(Id(579),Device(0),Page(49:6/2),Diskblock(49),FileWrite,Openfile(58:6/0),Thread(59:6/W1)) this Page(49:6/2)
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 86036/250000[PageTableEntry][do_unlock] this Page(0:7/23)
[PageFaultHandler][do_handlePageFault] thread Thread(63:7/W1) status = 31
 Thread do_handlePageFault Success
[Info][PageTableEntry][do_lock] Get frame Frame(23)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 37291 offset = 427 page no = 36 Thread(62:6/RU)
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(0:7/23)
[PageTableEntry][do_unlock] this Page(49:6/2)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(2) Page(49:6/2)Thread(59:6/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(22:6/null) setframe Frame(2)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(580),Device(0),Page(22:6/2),Diskblock(22),FileRead,Openfile(58:6/0),Thread(59:6/W1)) this Page(22:6/2)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(59:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(59:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(22:6/2)
[PageFaultHandler][do_handlePageFault] thread Thread(59:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 50926 offset = 750 page no = 49 Thread(64:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(64:7/RU) 21 Page(49:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(2) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(49:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(22:6/2)
[PageFaultHandler][do_handlePageFault] Frame(2) is dirty, do swap-out, Thread(64:7/W0)
[PageFaultHandler][SwapOut] page Page(22:6/2) frame Frame(2)file Openfile(68:7/0)
[PageFaultHandler][SwapOut] block no 22
[Info][PageTableEntry][do_lock] iorb IORB(Id(581),Device(0),Page(22:6/2),Diskblock(86),FileWrite,Openfile(68:7/0),Thread(64:7/W1)) this Page(22:6/2)
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(22:6/2)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(2) Page(22:6/2)Thread(64:7/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(49:7/null) setframe Frame(2)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(582),Device(0),Page(49:7/2),Diskblock(113),FileRead,Openfile(68:7/0),Thread(64:7/W1)) this Page(49:7/2)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(64:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(64:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(49:7/2)
[PageFaultHandler][do_handlePageFault] thread Thread(64:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 2973 offset = 925 page no = 2 Thread(64:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(64:7/RU) 22 Page(2:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(19) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(2:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(11:6/19)
[PageFaultHandler][do_handlePageFault] page Page(2:7/null) setframe Frame(19)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(583),Device(0),Page(2:7/19),Diskblock(66),FileRead,Openfile(68:7/0),Thread(64:7/W1)) this Page(2:7/19)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(64:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(64:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 2518 offset = 470 page no = 2 Thread(59:6/RU)
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(2:7/19)
[PageFaultHandler][do_handlePageFault] thread Thread(64:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
Simulation progress: 87038/250000[MMU][do_refer] address = 38749 offset = 861 page no = 37 Thread(64:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(64:7/RU) 22 Page(37:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(1) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(37:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(59:6/1)
[PageFaultHandler][do_handlePageFault] page Page(37:7/null) setframe Frame(1)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(584),Device(0),Page(37:7/1),Diskblock(101),FileRead,Openfile(68:7/0),Thread(64:7/W1)) this Page(37:7/1)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(64:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(64:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 64826 offset = 314 page no = 63 Thread(59:6/RU)
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 14279 offset = 967 page no = 13 Thread(59:6/RU)
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(37:7/1)
[PageFaultHandler][do_handlePageFault] thread Thread(64:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 40466 offset = 530 page no = 39 Thread(65:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(65:7/RU) 21 Page(39:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(0) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(39:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(13:6/0)
[PageFaultHandler][do_handlePageFault] Frame(0) is dirty, do swap-out, Thread(65:7/W0)
[PageFaultHandler][SwapOut] page Page(13:6/0) frame Frame(0)file Openfile(68:7/0)
[PageFaultHandler][SwapOut] block no 13
[Info][PageTableEntry][do_lock] iorb IORB(Id(585),Device(0),Page(13:6/0),Diskblock(77),FileWrite,Openfile(68:7/0),Thread(65:7/W1)) this Page(13:6/0)
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(13:6/0)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(0) Page(13:6/0)Thread(65:7/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(39:7/null) setframe Frame(0)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(586),Device(0),Page(39:7/0),Diskblock(103),FileRead,Openfile(68:7/0),Thread(65:7/W1)) this Page(39:7/0)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(65:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(65:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(39:7/0)
[PageFaultHandler][do_handlePageFault] thread Thread(65:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 63302 offset = 838 page no = 61 Thread(64:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(64:7/RU) 21 Page(61:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(11) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(61:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(9:6/11)
[PageFaultHandler][do_handlePageFault] page Page(61:7/null) setframe Frame(11)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(587),Device(0),Page(61:7/11),Diskblock(125),FileRead,Openfile(68:7/0),Thread(64:7/W1)) this Page(61:7/11)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(64:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(64:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(11)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(588),Device(1),Page(0:7/23),Diskblock(14),FileRead,Openfile(74:7/1),Thread(63:7/W0)) this Page(0:7/23)
[Info][PageTableEntry][do_lock] Get frame Frame(23)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(0:7/23)
[PageTableEntry][do_unlock] this Page(61:7/11)
[PageFaultHandler][do_handlePageFault] thread Thread(64:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 29793 offset = 97 page no = 29 Thread(63:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(63:7/RU) 21 Page(29:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(24) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(29:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(43:6/24)
[PageFaultHandler][do_handlePageFault] Frame(24) is dirty, do swap-out, Thread(63:7/W0)
[PageFaultHandler][SwapOut] page Page(43:6/24) frame Frame(24)file Openfile(68:7/0)
[PageFaultHandler][SwapOut] block no 43
[Info][PageTableEntry][do_lock] iorb IORB(Id(589),Device(0),Page(43:6/24),Diskblock(107),FileWrite,Openfile(68:7/0),Thread(63:7/W1)) this Page(43:6/24)
[Info][PageTableEntry][do_lock] Get frame Frame(24)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(43:6/24)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(24) Page(43:6/24)Thread(63:7/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(29:7/null) setframe Frame(24)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(590),Device(0),Page(29:7/24),Diskblock(93),FileRead,Openfile(68:7/0),Thread(63:7/W1)) this Page(29:7/24)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(63:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(63:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(24)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 88006/250000[PageTableEntry][do_unlock] this Page(29:7/24)
[PageFaultHandler][do_handlePageFault] thread Thread(63:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 57296 offset = 976 page no = 55 Thread(66:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(66:6/RU) 22 Page(55:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(27) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(55:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(27:6/27)
[PageFaultHandler][do_handlePageFault] Frame(27) is dirty, do swap-out, Thread(66:6/W0)
[PageFaultHandler][SwapOut] page Page(27:6/27) frame Frame(27)file Openfile(58:6/0)
[PageFaultHandler][SwapOut] block no 27
[Info][PageTableEntry][do_lock] iorb IORB(Id(591),Device(0),Page(27:6/27),Diskblock(27),FileWrite,Openfile(58:6/0),Thread(66:6/W1)) this Page(27:6/27)
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(27:6/27)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(27) Page(27:6/27)Thread(66:6/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(55:6/null) setframe Frame(27)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(592),Device(0),Page(55:6/27),Diskblock(55),FileRead,Openfile(58:6/0),Thread(66:6/W1)) this Page(55:6/27)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(66:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(66:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(55:6/27)
[PageFaultHandler][do_handlePageFault] thread Thread(66:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 44629 offset = 597 page no = 43 Thread(63:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(63:7/RU) 21 Page(43:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(12) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(43:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(28:6/12)
[PageFaultHandler][do_handlePageFault] Frame(12) is dirty, do swap-out, Thread(63:7/W0)
[PageFaultHandler][SwapOut] page Page(28:6/12) frame Frame(12)file Openfile(68:7/0)
[PageFaultHandler][SwapOut] block no 28
[Info][PageTableEntry][do_lock] iorb IORB(Id(593),Device(0),Page(28:6/12),Diskblock(92),FileWrite,Openfile(68:7/0),Thread(63:7/W1)) this Page(28:6/12)
[Info][PageTableEntry][do_lock] Get frame Frame(12)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(28:6/12)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(12) Page(28:6/12)Thread(63:7/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(43:7/null) setframe Frame(12)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(594),Device(0),Page(43:7/12),Diskblock(107),FileRead,Openfile(68:7/0),Thread(63:7/W1)) this Page(43:7/12)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(63:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(63:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(12)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 8216 offset = 24 page no = 8 Thread(60:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(60:6/RU) 22 Page(8:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(17) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(8:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(50:6/17)
[PageFaultHandler][do_handlePageFault] page Page(8:6/null) setframe Frame(17)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(595),Device(0),Page(8:6/17),Diskblock(8),FileRead,Openfile(58:6/0),Thread(60:6/W1)) this Page(8:6/17)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(60:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(60:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(43:7/12)
[PageFaultHandler][do_handlePageFault] thread Thread(63:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(8:6/17)
[PageFaultHandler][do_handlePageFault] thread Thread(60:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 44018 offset = 1010 page no = 42 Thread(59:6/RU)
[MMU][do_refer] Do memory write.
Simulation progress: 89040/250000[MMU][do_refer] address = 65339 offset = 827 page no = 63 Thread(66:6/RU)
[MMU][do_refer] Do memory write.
[Info][PageTableEntry][do_lock] iorb IORB(Id(596),Device(2),Page(1:6/6),Diskblock(12),FileRead,Openfile(78:6/2),Thread(60:6/W0)) this Page(1:6/6)
[Info][PageTableEntry][do_lock] Get frame Frame(6)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(597),Device(2),Page(0:7/23),Diskblock(12),FileRead,Openfile(78:6/2),Thread(65:7/W0)) this Page(0:7/23)
[Info][PageTableEntry][do_lock] Get frame Frame(23)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 31714 offset = 994 page no = 30 Thread(59:6/RU)
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 3176 offset = 104 page no = 3 Thread(59:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(59:6/RU) 21 Page(3:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(17) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(3:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(8:6/17)
[PageFaultHandler][do_handlePageFault] Frame(17) is dirty, do swap-out, Thread(59:6/W0)
[PageFaultHandler][SwapOut] page Page(8:6/17) frame Frame(17)file Openfile(58:6/0)
[PageFaultHandler][SwapOut] block no 8
[Info][PageTableEntry][do_lock] iorb IORB(Id(598),Device(0),Page(8:6/17),Diskblock(8),FileWrite,Openfile(58:6/0),Thread(59:6/W1)) this Page(8:6/17)
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(8:6/17)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(17) Page(8:6/17)Thread(59:6/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(3:6/null) setframe Frame(17)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(599),Device(0),Page(3:6/17),Diskblock(3),FileRead,Openfile(58:6/0),Thread(59:6/W1)) this Page(3:6/17)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(59:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(59:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(1:6/6)
[PageTableEntry][do_unlock] this Page(3:6/17)
[PageFaultHandler][do_handlePageFault] thread Thread(59:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
Simulation progress: 90016/250000[PageTableEntry][do_unlock] this Page(0:7/23)
[MMU][do_refer] address = 34766 offset = 974 page no = 33 Thread(67:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(67:6/RU) 21 Page(33:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(4) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(33:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(19:6/4)
[PageFaultHandler][do_handlePageFault] Frame(4) is dirty, do swap-out, Thread(67:6/W0)
[PageFaultHandler][SwapOut] page Page(19:6/4) frame Frame(4)file Openfile(58:6/0)
[PageFaultHandler][SwapOut] block no 19
[Info][PageTableEntry][do_lock] iorb IORB(Id(600),Device(0),Page(19:6/4),Diskblock(19),FileWrite,Openfile(58:6/0),Thread(67:6/W1)) this Page(19:6/4)
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(19:6/4)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(4) Page(19:6/4)Thread(67:6/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(33:6/null) setframe Frame(4)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(601),Device(0),Page(33:6/4),Diskblock(33),FileRead,Openfile(58:6/0),Thread(67:6/W1)) this Page(33:6/4)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(67:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(67:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(33:6/4)
[PageFaultHandler][do_handlePageFault] thread Thread(67:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 44702 offset = 670 page no = 43 Thread(65:7/RU)
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 48815 offset = 687 page no = 47 Thread(60:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(60:6/RU) 21 Page(47:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(7) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(47:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(36:6/7)
[PageFaultHandler][do_handlePageFault] Frame(7) is dirty, do swap-out, Thread(60:6/W0)
[PageFaultHandler][SwapOut] page Page(36:6/7) frame Frame(7)file Openfile(58:6/0)
[PageFaultHandler][SwapOut] block no 36
[Info][PageTableEntry][do_lock] iorb IORB(Id(602),Device(0),Page(36:6/7),Diskblock(36),FileWrite,Openfile(58:6/0),Thread(60:6/W1)) this Page(36:6/7)
[Info][PageTableEntry][do_lock] Get frame Frame(7)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(36:6/7)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(7) Page(36:6/7)Thread(60:6/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(47:6/null) setframe Frame(7)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(603),Device(0),Page(47:6/7),Diskblock(47),FileRead,Openfile(58:6/0),Thread(60:6/W1)) this Page(47:6/7)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(60:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(60:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(7)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 2265 offset = 217 page no = 2 Thread(65:7/RU)
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(47:6/7)
[PageFaultHandler][do_handlePageFault] thread Thread(60:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[Info][PageTableEntry][do_lock] iorb IORB(Id(604),Device(1),Page(1:6/6),Diskblock(10),FileWrite,Openfile(80:6/1),Thread(68:6/W0)) this Page(1:6/6)
[Info][PageTableEntry][do_lock] Get frame Frame(6)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(1:6/6)
Simulation progress: 91079/250000[MMU][do_refer] address = 61863 offset = 423 page no = 60 Thread(60:6/RU)
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 9383 offset = 167 page no = 9 Thread(65:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(65:7/RU) 21 Page(9:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(3) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(9:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(61:6/3)
[PageFaultHandler][do_handlePageFault] Frame(3) is dirty, do swap-out, Thread(65:7/W0)
[PageFaultHandler][SwapOut] page Page(61:6/3) frame Frame(3)file Openfile(68:7/0)
[PageFaultHandler][SwapOut] block no 61
[Info][PageTableEntry][do_lock] iorb IORB(Id(605),Device(0),Page(61:6/3),Diskblock(125),FileWrite,Openfile(68:7/0),Thread(65:7/W1)) this Page(61:6/3)
[Info][PageTableEntry][do_lock] Get frame Frame(3)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(61:6/3)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(3) Page(61:6/3)Thread(65:7/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(9:7/null) setframe Frame(3)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(606),Device(0),Page(9:7/3),Diskblock(73),FileRead,Openfile(68:7/0),Thread(65:7/W1)) this Page(9:7/3)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(65:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(65:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(3)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 23980 offset = 428 page no = 23 Thread(67:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(67:6/RU) 22 Page(23:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(5) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(23:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(2:6/5)
[PageFaultHandler][do_handlePageFault] page Page(23:6/null) setframe Frame(5)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(607),Device(0),Page(23:6/5),Diskblock(23),FileRead,Openfile(58:6/0),Thread(67:6/W1)) this Page(23:6/5)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(67:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(67:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 43009 offset = 1 page no = 42 Thread(66:6/RU)
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(9:7/3)
[PageFaultHandler][do_handlePageFault] thread Thread(65:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 9939 offset = 723 page no = 9 Thread(60:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(60:6/RU) 21 Page(9:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(29) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(9:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(54:6/29)
[PageFaultHandler][do_handlePageFault] Frame(29) is dirty, do swap-out, Thread(60:6/W0)
[PageFaultHandler][SwapOut] page Page(54:6/29) frame Frame(29)file Openfile(58:6/0)
[PageFaultHandler][SwapOut] block no 54
[Info][PageTableEntry][do_lock] iorb IORB(Id(608),Device(0),Page(54:6/29),Diskblock(54),FileWrite,Openfile(58:6/0),Thread(60:6/W1)) this Page(54:6/29)
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(23:6/5)
[PageFaultHandler][do_handlePageFault] thread Thread(67:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(54:6/29)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(29) Page(54:6/29)Thread(60:6/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(9:6/null) setframe Frame(29)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(609),Device(0),Page(9:6/29),Diskblock(9),FileRead,Openfile(58:6/0),Thread(60:6/W1)) this Page(9:6/29)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(60:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(60:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(9:6/29)
[PageFaultHandler][do_handlePageFault] thread Thread(60:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
Simulation progress: 92043/250000[MMU][do_refer] address = 20732 offset = 252 page no = 20 Thread(60:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(60:6/RU) 21 Page(20:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(5) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(20:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(23:6/5)
[PageFaultHandler][do_handlePageFault] Frame(5) is dirty, do swap-out, Thread(60:6/W0)
[PageFaultHandler][SwapOut] page Page(23:6/5) frame Frame(5)file Openfile(58:6/0)
[PageFaultHandler][SwapOut] block no 23
[Info][PageTableEntry][do_lock] iorb IORB(Id(610),Device(0),Page(23:6/5),Diskblock(23),FileWrite,Openfile(58:6/0),Thread(60:6/W1)) this Page(23:6/5)
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 7694 offset = 526 page no = 7 Thread(65:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(65:7/RU) 22 Page(7:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(26) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(7:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(56:6/26)
[PageFaultHandler][do_handlePageFault] Frame(26) is dirty, do swap-out, Thread(65:7/W0)
[PageFaultHandler][SwapOut] page Page(56:6/26) frame Frame(26)file Openfile(68:7/0)
[PageFaultHandler][SwapOut] block no 56
[Info][PageTableEntry][do_lock] iorb IORB(Id(611),Device(0),Page(56:6/26),Diskblock(120),FileWrite,Openfile(68:7/0),Thread(65:7/W1)) this Page(56:6/26)
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(23:6/5)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(5) Page(23:6/5)Thread(60:6/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(20:6/null) setframe Frame(5)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(612),Device(0),Page(20:6/5),Diskblock(20),FileRead,Openfile(58:6/0),Thread(60:6/W1)) this Page(20:6/5)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(60:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(60:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 12865 offset = 577 page no = 12 Thread(67:6/RU)
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(56:6/26)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(26) Page(56:6/26)Thread(65:7/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(7:7/null) setframe Frame(26)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(613),Device(0),Page(7:7/26),Diskblock(71),FileRead,Openfile(68:7/0),Thread(65:7/W1)) this Page(7:7/26)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(65:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(65:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(20:6/5)
[PageFaultHandler][do_handlePageFault] thread Thread(60:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(7:7/26)
[PageFaultHandler][do_handlePageFault] thread Thread(65:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
Simulation progress: 93001/250000[MMU][do_refer] address = 6235 offset = 91 page no = 6 Thread(69:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(69:8/RU) 22 Page(6:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(26) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(6:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(7:7/26)
[PageFaultHandler][do_handlePageFault] Frame(26) is dirty, do swap-out, Thread(69:8/W0)
[PageFaultHandler][SwapOut] page Page(7:7/26) frame Frame(26)file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 7
[Info][PageTableEntry][do_lock] iorb IORB(Id(614),Device(0),Page(7:7/26),Diskblock(199),FileWrite,Openfile(82:8/0),Thread(69:8/W1)) this Page(7:7/26)
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 21711 offset = 207 page no = 21 Thread(59:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(59:6/RU) 21 Page(21:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(21) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(21:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(12:6/21)
[PageFaultHandler][do_handlePageFault] page Page(21:6/null) setframe Frame(21)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(615),Device(0),Page(21:6/21),Diskblock(21),FileRead,Openfile(58:6/0),Thread(59:6/W1)) this Page(21:6/21)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(59:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(59:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 56796 offset = 476 page no = 55 Thread(65:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(65:7/RU) 22 Page(55:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(15) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(55:7/null)
[PageFaultHandler][do_handlePageFault] page Page(55:7/null) setframe Frame(15)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(616),Device(0),Page(55:7/15),Diskblock(119),FileRead,Openfile(68:7/0),Thread(65:7/W1)) this Page(55:7/15)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(65:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(65:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(15)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 49773 offset = 621 page no = 48 Thread(66:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(66:6/RU) 22 Page(48:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(10) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(48:6/null)
[PageFaultHandler][do_handlePageFault] page Page(48:6/null) setframe Frame(10)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(617),Device(0),Page(48:6/10),Diskblock(48),FileRead,Openfile(58:6/0),Thread(66:6/W1)) this Page(48:6/10)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(66:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(66:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(10)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(7:7/26)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(26) Page(7:7/26)Thread(69:8/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(6:8/null) setframe Frame(26)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(618),Device(0),Page(6:8/26),Diskblock(198),FileRead,Openfile(82:8/0),Thread(69:8/W1)) this Page(6:8/26)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(69:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(69:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 47365 offset = 261 page no = 46 Thread(67:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(67:6/RU) 21 Page(46:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(28) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(46:6/null)
[PageFaultHandler][do_handlePageFault] page Page(46:6/null) setframe Frame(28)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(619),Device(0),Page(46:6/28),Diskblock(46),FileRead,Openfile(58:6/0),Thread(67:6/W1)) this Page(46:6/28)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(67:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(67:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(21:6/21)
[PageFaultHandler][do_handlePageFault] thread Thread(59:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 31443 offset = 723 page no = 30 Thread(59:6/RU)
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(55:7/15)
[PageFaultHandler][do_handlePageFault] thread Thread(65:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(48:6/10)
[PageFaultHandler][do_handlePageFault] thread Thread(66:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(6:8/26)
[PageFaultHandler][do_handlePageFault] thread Thread(69:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 31146 offset = 426 page no = 30 Thread(65:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(65:7/RU) 22 Page(30:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(15) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(30:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(55:7/15)
[PageFaultHandler][do_handlePageFault] Frame(15) is dirty, do swap-out, Thread(65:7/W0)
[PageFaultHandler][SwapOut] page Page(55:7/15) frame Frame(15)file Openfile(68:7/0)
[PageFaultHandler][SwapOut] block no 55
[Info][PageTableEntry][do_lock] iorb IORB(Id(620),Device(0),Page(55:7/15),Diskblock(119),FileWrite,Openfile(68:7/0),Thread(65:7/W1)) this Page(55:7/15)
[Info][PageTableEntry][do_lock] Get frame Frame(15)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(46:6/28)
[PageFaultHandler][do_handlePageFault] thread Thread(67:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 17239 offset = 855 page no = 16 Thread(69:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(69:8/RU) 21 Page(16:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(28) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(16:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(46:6/28)
[PageFaultHandler][do_handlePageFault] page Page(16:8/null) setframe Frame(28)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(621),Device(0),Page(16:8/28),Diskblock(208),FileRead,Openfile(82:8/0),Thread(69:8/W1)) this Page(16:8/28)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(69:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(69:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 94007/250000[PageTableEntry][do_unlock] this Page(55:7/15)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(15) Page(55:7/15)Thread(65:7/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(30:7/null) setframe Frame(15)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(622),Device(0),Page(30:7/15),Diskblock(94),FileRead,Openfile(68:7/0),Thread(65:7/W1)) this Page(30:7/15)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(65:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(65:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(15)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(16:8/28)
[PageFaultHandler][do_handlePageFault] thread Thread(69:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(30:7/15)
[PageFaultHandler][do_handlePageFault] thread Thread(65:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 23931 offset = 379 page no = 23 Thread(69:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(69:8/RU) 21 Page(23:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(25) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(23:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(4:6/25)
[PageFaultHandler][do_handlePageFault] page Page(23:8/null) setframe Frame(25)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(623),Device(0),Page(23:8/25),Diskblock(215),FileRead,Openfile(82:8/0),Thread(69:8/W1)) this Page(23:8/25)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(69:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(69:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(25)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 33422 offset = 654 page no = 32 Thread(67:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(67:6/RU) 22 Page(32:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(16) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(32:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(60:6/16)
[PageFaultHandler][do_handlePageFault] Frame(16) is dirty, do swap-out, Thread(67:6/W0)
[PageFaultHandler][SwapOut] page Page(60:6/16) frame Frame(16)file Openfile(58:6/0)
[PageFaultHandler][SwapOut] block no 60
[Info][PageTableEntry][do_lock] iorb IORB(Id(624),Device(0),Page(60:6/16),Diskblock(60),FileWrite,Openfile(58:6/0),Thread(67:6/W1)) this Page(60:6/16)
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(23:8/25)
[PageFaultHandler][do_handlePageFault] thread Thread(69:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[Info][PageTableEntry][do_lock] iorb IORB(Id(625),Device(2),Page(1:6/6),Diskblock(6),FileRead,Openfile(84:6/2),Thread(59:6/W0)) this Page(1:6/6)
[Info][PageTableEntry][do_lock] Get frame Frame(6)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(60:6/16)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(16) Page(60:6/16)Thread(67:6/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(32:6/null) setframe Frame(16)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(626),Device(0),Page(32:6/16),Diskblock(32),FileRead,Openfile(58:6/0),Thread(67:6/W1)) this Page(32:6/16)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(67:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(67:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(32:6/16)
[PageFaultHandler][do_handlePageFault] thread Thread(67:6/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 60382 offset = 990 page no = 58 Thread(67:6/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(67:6/RU) 21 Page(58:6/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(16) Reserved by Task(6/L)
[PageFaultHandler][do_handlePageFault] page Page(58:6/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(32:6/16)
[PageFaultHandler][do_handlePageFault] Frame(16) is dirty, do swap-out, Thread(67:6/W0)
[PageFaultHandler][SwapOut] page Page(32:6/16) frame Frame(16)file Openfile(58:6/0)
[PageFaultHandler][SwapOut] block no 32
[Info][PageTableEntry][do_lock] iorb IORB(Id(627),Device(0),Page(32:6/16),Diskblock(32),FileWrite,Openfile(58:6/0),Thread(67:6/W1)) this Page(32:6/16)
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(32:6/16)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(16) Page(32:6/16)Thread(67:6/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(58:6/null) setframe Frame(16)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(628),Device(0),Page(58:6/16),Diskblock(58),FileRead,Openfile(58:6/0),Thread(67:6/W1)) this Page(58:6/16)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(67:6/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(67:6/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTable][do_deallocateMemory] this Pagetable(Task(6/T))
[PageTable][do_deallocateMemory]  page_table_entry Page(1:6/6) frame_table_entry Frame(6)
[PageTable][do_deallocateMemory]  page_table_entry Page(3:6/17) frame_table_entry Frame(17)
[PageTable][do_deallocateMemory]  page_table_entry Page(9:6/29) frame_table_entry Frame(29)
[PageTable][do_deallocateMemory]  page_table_entry Page(17:6/22) frame_table_entry Frame(22)
[PageTable][do_deallocateMemory]  page_table_entry Page(20:6/5) frame_table_entry Frame(5)
[PageTable][do_deallocateMemory]  page_table_entry Page(21:6/21) frame_table_entry Frame(21)
[PageTable][do_deallocateMemory]  page_table_entry Page(30:6/9) frame_table_entry Frame(9)
[PageTable][do_deallocateMemory]  page_table_entry Page(33:6/4) frame_table_entry Frame(4)
[PageTable][do_deallocateMemory]  page_table_entry Page(35:6/13) frame_table_entry Frame(13)
[PageTable][do_deallocateMemory]  page_table_entry Page(38:6/14) frame_table_entry Frame(14)
[PageTable][do_deallocateMemory]  page_table_entry Page(42:6/8) frame_table_entry Frame(8)
[PageTable][do_deallocateMemory]  page_table_entry Page(47:6/7) frame_table_entry Frame(7)
[PageTable][do_deallocateMemory]  page_table_entry Page(48:6/10) frame_table_entry Frame(10)
[PageTable][do_deallocateMemory]  page_table_entry Page(55:6/27) frame_table_entry Frame(27)
[PageTable][do_deallocateMemory]  page_table_entry Page(58:6/16) frame_table_entry Frame(16)
[PageTable][do_deallocateMemory] owner_task Task(6/T)
[PageTable][do_deallocateMemory]  page_table_entry Page(63:6/20) frame_table_entry Frame(20)
[PageTableEntry][do_unlock] this Page(58:6/16)
[PageFaultHandler][do_handlePageFault] thread Thread(67:6/KL) status = 22
[PageFaultHandler][do_handlePageFault] Thread already killed after swap-in
[MMU][do_refer] return from interrupt
Simulation progress: 95020/250000[MMU][do_refer] address = 12370 offset = 82 page no = 12 Thread(65:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(65:7/RU) 22 Page(12:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(16) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(12:7/null)
[PageFaultHandler][do_handlePageFault] page Page(12:7/null) setframe Frame(16)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(629),Device(0),Page(12:7/16),Diskblock(76),FileRead,Openfile(68:7/0),Thread(65:7/W1)) this Page(12:7/16)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(65:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(65:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 18038 offset = 630 page no = 17 Thread(71:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(71:8/RU) 22 Page(17:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(8) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(17:8/null)
[PageFaultHandler][do_handlePageFault] page Page(17:8/null) setframe Frame(8)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(630),Device(0),Page(17:8/8),Diskblock(209),FileRead,Openfile(82:8/0),Thread(71:8/W1)) this Page(17:8/8)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(71:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(71:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(12:7/16)
[PageFaultHandler][do_handlePageFault] thread Thread(65:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 59290 offset = 922 page no = 57 Thread(69:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(69:8/RU) 22 Page(57:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(23) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(57:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(0:7/23)
[PageFaultHandler][do_handlePageFault] Frame(23) is dirty, do swap-out, Thread(69:8/W0)
[PageFaultHandler][SwapOut] page Page(0:7/23) frame Frame(23)file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(631),Device(0),Page(0:7/23),Diskblock(192),FileWrite,Openfile(82:8/0),Thread(69:8/W1)) this Page(0:7/23)
[Info][PageTableEntry][do_lock] Get frame Frame(23)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 45544 offset = 488 page no = 44 Thread(72:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(72:7/RU) 22 Page(44:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(20) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(44:7/null)
[PageFaultHandler][do_handlePageFault] page Page(44:7/null) setframe Frame(20)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(632),Device(0),Page(44:7/20),Diskblock(108),FileRead,Openfile(68:7/0),Thread(72:7/W1)) this Page(44:7/20)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(72:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(72:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(20)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(17:8/8)
[PageFaultHandler][do_handlePageFault] thread Thread(71:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(1:6/6)
[MMU][do_refer] address = 29324 offset = 652 page no = 28 Thread(65:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(65:7/RU) 22 Page(28:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(8) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(28:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(17:8/8)
[PageFaultHandler][do_handlePageFault] Frame(8) is dirty, do swap-out, Thread(65:7/W0)
[PageFaultHandler][SwapOut] page Page(17:8/8) frame Frame(8)file Openfile(68:7/0)
[PageFaultHandler][SwapOut] block no 17
[Info][PageTableEntry][do_lock] iorb IORB(Id(633),Device(0),Page(17:8/8),Diskblock(81),FileWrite,Openfile(68:7/0),Thread(65:7/W1)) this Page(17:8/8)
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(634),Device(1),Page(6:8/26),Diskblock(23),FileRead,Openfile(88:8/1),Thread(71:8/W0)) this Page(6:8/26)
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(0:7/23)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(23) Page(0:7/23)Thread(69:8/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(57:8/null) setframe Frame(23)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(635),Device(0),Page(57:8/23),Diskblock(249),FileRead,Openfile(82:8/0),Thread(69:8/W1)) this Page(57:8/23)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(69:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(69:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(23)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(6:8/26)
[PageTableEntry][do_unlock] this Page(44:7/20)
[PageFaultHandler][do_handlePageFault] thread Thread(72:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(17:8/8)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(8) Page(17:8/8)Thread(65:7/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(28:7/null) setframe Frame(8)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(636),Device(0),Page(28:7/8),Diskblock(92),FileRead,Openfile(68:7/0),Thread(65:7/W1)) this Page(28:7/8)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(65:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(65:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 96028/250000[PageTableEntry][do_unlock] this Page(57:8/23)
[PageFaultHandler][do_handlePageFault] thread Thread(69:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(28:7/8)
[PageFaultHandler][do_handlePageFault] thread Thread(65:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 37019 offset = 155 page no = 36 Thread(72:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(72:7/RU) 22 Page(36:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(19) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(36:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(2:7/19)
[PageFaultHandler][do_handlePageFault] Frame(19) is dirty, do swap-out, Thread(72:7/W0)
[PageFaultHandler][SwapOut] page Page(2:7/19) frame Frame(19)file Openfile(68:7/0)
[PageFaultHandler][SwapOut] block no 2
[Info][PageTableEntry][do_lock] iorb IORB(Id(637),Device(0),Page(2:7/19),Diskblock(66),FileWrite,Openfile(68:7/0),Thread(72:7/W1)) this Page(2:7/19)
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 62985 offset = 521 page no = 61 Thread(69:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(69:8/RU) 21 Page(61:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(1) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(61:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(37:7/1)
[PageFaultHandler][do_handlePageFault] Frame(1) is dirty, do swap-out, Thread(69:8/W0)
[PageFaultHandler][SwapOut] page Page(37:7/1) frame Frame(1)file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 37
[Info][PageTableEntry][do_lock] iorb IORB(Id(638),Device(0),Page(37:7/1),Diskblock(229),FileWrite,Openfile(82:8/0),Thread(69:8/W1)) this Page(37:7/1)
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(2:7/19)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(19) Page(2:7/19)Thread(72:7/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(36:7/null) setframe Frame(19)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(639),Device(0),Page(36:7/19),Diskblock(100),FileRead,Openfile(68:7/0),Thread(72:7/W1)) this Page(36:7/19)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(72:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(72:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 35270 offset = 454 page no = 34 Thread(71:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(71:8/RU) 21 Page(34:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(0) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(34:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(39:7/0)
[PageFaultHandler][do_handlePageFault] page Page(34:8/null) setframe Frame(0)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(640),Device(0),Page(34:8/0),Diskblock(226),FileRead,Openfile(82:8/0),Thread(71:8/W1)) this Page(34:8/0)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(71:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(71:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(37:7/1)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(1) Page(37:7/1)Thread(69:8/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(61:8/null) setframe Frame(1)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(641),Device(0),Page(61:8/1),Diskblock(253),FileRead,Openfile(82:8/0),Thread(69:8/W1)) this Page(61:8/1)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(69:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(69:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(36:7/19)
[PageFaultHandler][do_handlePageFault] thread Thread(72:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 28422 offset = 774 page no = 27 Thread(72:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(72:7/RU) 22 Page(27:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(11) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(27:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(61:7/11)
[PageFaultHandler][do_handlePageFault] page Page(27:7/null) setframe Frame(11)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(642),Device(0),Page(27:7/11),Diskblock(91),FileRead,Openfile(68:7/0),Thread(72:7/W1)) this Page(27:7/11)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(72:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(72:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(11)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 47349 offset = 245 page no = 46 Thread(65:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(65:7/RU) 21 Page(46:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(24) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(46:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(29:7/24)
[PageFaultHandler][do_handlePageFault] page Page(46:7/null) setframe Frame(24)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(643),Device(0),Page(46:7/24),Diskblock(110),FileRead,Openfile(68:7/0),Thread(65:7/W1)) this Page(46:7/24)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(65:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(65:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(24)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 9305 offset = 89 page no = 9 Thread(75:7/RU)
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(34:8/0)
[PageFaultHandler][do_handlePageFault] thread Thread(71:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 46890 offset = 810 page no = 45 Thread(74:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(74:7/RU) 21 Page(45:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(0) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(45:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(34:8/0)
[PageFaultHandler][do_handlePageFault] page Page(45:7/null) setframe Frame(0)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(644),Device(0),Page(45:7/0),Diskblock(109),FileRead,Openfile(68:7/0),Thread(74:7/W1)) this Page(45:7/0)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(74:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(74:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(61:8/1)
[PageFaultHandler][do_handlePageFault] thread Thread(69:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
Simulation progress: 97010/250000[PageTableEntry][do_unlock] this Page(27:7/11)
[PageFaultHandler][do_handlePageFault] thread Thread(72:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(46:7/24)
[PageFaultHandler][do_handlePageFault] thread Thread(65:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 23492 offset = 964 page no = 22 Thread(75:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(75:7/RU) 22 Page(22:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(1) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(22:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(61:8/1)
[PageFaultHandler][do_handlePageFault] page Page(22:7/null) setframe Frame(1)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(645),Device(0),Page(22:7/1),Diskblock(86),FileRead,Openfile(68:7/0),Thread(75:7/W1)) this Page(22:7/1)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(75:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(75:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(45:7/0)
[PageFaultHandler][do_handlePageFault] thread Thread(74:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(22:7/1)
[PageFaultHandler][do_handlePageFault] thread Thread(75:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 814 offset = 814 page no = 0 Thread(69:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(69:8/RU) 22 Page(0:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(12) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(0:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(43:7/12)
[PageFaultHandler][do_handlePageFault] page Page(0:8/null) setframe Frame(12)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(646),Device(0),Page(0:8/12),Diskblock(192),FileRead,Openfile(82:8/0),Thread(69:8/W1)) this Page(0:8/12)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(69:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(69:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(12)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(0:8/12)
[PageFaultHandler][do_handlePageFault] thread Thread(69:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 21430 offset = 950 page no = 20 Thread(72:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(72:7/RU) 22 Page(20:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(17) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(20:7/null)
[PageFaultHandler][do_handlePageFault] page Page(20:7/null) setframe Frame(17)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(647),Device(0),Page(20:7/17),Diskblock(84),FileRead,Openfile(68:7/0),Thread(72:7/W1)) this Page(20:7/17)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(72:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(72:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(20:7/17)
[PageFaultHandler][do_handlePageFault] thread Thread(72:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 4654 offset = 558 page no = 4 Thread(73:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(73:7/RU) 21 Page(4:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(4) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(4:7/null)
[PageFaultHandler][do_handlePageFault] page Page(4:7/null) setframe Frame(4)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(648),Device(0),Page(4:7/4),Diskblock(68),FileRead,Openfile(68:7/0),Thread(73:7/W1)) this Page(4:7/4)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(73:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(73:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 47534 offset = 430 page no = 46 Thread(75:7/RU)
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(4:7/4)
[PageFaultHandler][do_handlePageFault] thread Thread(73:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 8666 offset = 474 page no = 8 Thread(77:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(77:8/RU) 21 Page(8:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(7) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(8:8/null)
[PageFaultHandler][do_handlePageFault] page Page(8:8/null) setframe Frame(7)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(649),Device(0),Page(8:8/7),Diskblock(200),FileRead,Openfile(82:8/0),Thread(77:8/W1)) this Page(8:8/7)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(77:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(77:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(7)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 98008/250000[MMU][do_refer] address = 45152 offset = 96 page no = 44 Thread(79:7/RU)
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 29422 offset = 750 page no = 28 Thread(79:7/RU)
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(8:8/7)
[PageFaultHandler][do_handlePageFault] thread Thread(77:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 62420 offset = 980 page no = 60 Thread(71:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(71:8/RU) 21 Page(60:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(3) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(60:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(9:7/3)
[PageFaultHandler][do_handlePageFault] Frame(3) is dirty, do swap-out, Thread(71:8/W0)
[PageFaultHandler][SwapOut] page Page(9:7/3) frame Frame(3)file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 9
[Info][PageTableEntry][do_lock] iorb IORB(Id(650),Device(0),Page(9:7/3),Diskblock(201),FileWrite,Openfile(82:8/0),Thread(71:8/W1)) this Page(9:7/3)
[Info][PageTableEntry][do_lock] Get frame Frame(3)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(9:7/3)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(3) Page(9:7/3)Thread(71:8/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(60:8/null) setframe Frame(3)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(651),Device(0),Page(60:8/3),Diskblock(252),FileRead,Openfile(82:8/0),Thread(71:8/W1)) this Page(60:8/3)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(71:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(71:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(3)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 1485 offset = 461 page no = 1 Thread(72:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(72:7/RU) 21 Page(1:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(29) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(1:7/null)
[PageFaultHandler][do_handlePageFault] page Page(1:7/null) setframe Frame(29)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(652),Device(0),Page(1:7/29),Diskblock(65),FileRead,Openfile(68:7/0),Thread(72:7/W1)) this Page(1:7/29)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(72:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(72:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(60:8/3)
[PageFaultHandler][do_handlePageFault] thread Thread(71:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 63969 offset = 481 page no = 62 Thread(73:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(73:7/RU) 22 Page(62:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(9) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(62:7/null)
[PageFaultHandler][do_handlePageFault] page Page(62:7/null) setframe Frame(9)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(653),Device(0),Page(62:7/9),Diskblock(126),FileRead,Openfile(68:7/0),Thread(73:7/W1)) this Page(62:7/9)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(73:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(73:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(1:7/29)
[PageFaultHandler][do_handlePageFault] thread Thread(72:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[Info][PageTableEntry][do_lock] iorb IORB(Id(654),Device(1),Page(0:8/12),Diskblock(28),FileWrite,Openfile(94:8/1),Thread(77:8/W0)) this Page(0:8/12)
[Info][PageTableEntry][do_lock] Get frame Frame(12)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 5253 offset = 133 page no = 5 Thread(65:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(65:7/RU) 21 Page(5:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(29) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(5:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(1:7/29)
[PageFaultHandler][do_handlePageFault] page Page(5:7/null) setframe Frame(29)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(655),Device(0),Page(5:7/29),Diskblock(69),FileRead,Openfile(68:7/0),Thread(65:7/W1)) this Page(5:7/29)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(65:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(65:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 50407 offset = 231 page no = 49 Thread(69:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(69:8/RU) 22 Page(49:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(5) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(49:8/null)
[PageFaultHandler][do_handlePageFault] page Page(49:8/null) setframe Frame(5)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(656),Device(0),Page(49:8/5),Diskblock(241),FileRead,Openfile(82:8/0),Thread(69:8/W1)) this Page(49:8/5)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(69:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(69:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(0:8/12)
[PageTableEntry][do_unlock] this Page(62:7/9)
[PageFaultHandler][do_handlePageFault] thread Thread(73:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(5:7/29)
[PageFaultHandler][do_handlePageFault] thread Thread(65:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 25123 offset = 547 page no = 24 Thread(79:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(79:7/RU) 21 Page(24:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(14) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(24:7/null)
[PageFaultHandler][do_handlePageFault] page Page(24:7/null) setframe Frame(14)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(657),Device(0),Page(24:7/14),Diskblock(88),FileRead,Openfile(68:7/0),Thread(79:7/W1)) this Page(24:7/14)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(79:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(79:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(14)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 9599 offset = 383 page no = 9 Thread(71:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(71:8/RU) 21 Page(9:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(21) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(9:8/null)
[PageFaultHandler][do_handlePageFault] page Page(9:8/null) setframe Frame(21)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(658),Device(0),Page(9:8/21),Diskblock(201),FileRead,Openfile(82:8/0),Thread(71:8/W1)) this Page(9:8/21)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(71:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(71:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 99080/250000[MMU][do_refer] address = 46988 offset = 908 page no = 45 Thread(78:9/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(78:9/RU) 22 Page(45:9/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(10) Reserved by Task(9/L)
[PageFaultHandler][do_handlePageFault] page Page(45:9/null)
[PageFaultHandler][do_handlePageFault] page Page(45:9/null) setframe Frame(10)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(659),Device(0),Page(45:9/10),Diskblock(45),FileRead,Openfile(92:9/0),Thread(78:9/W1)) this Page(45:9/10)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(78:9/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(78:9/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(10)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(49:8/5)
[PageFaultHandler][do_handlePageFault] thread Thread(69:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(24:7/14)
[PageFaultHandler][do_handlePageFault] thread Thread(79:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 41224 offset = 264 page no = 40 Thread(74:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(74:7/RU) 21 Page(40:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(13) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(40:7/null)
[PageFaultHandler][do_handlePageFault] page Page(40:7/null) setframe Frame(13)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(660),Device(0),Page(40:7/13),Diskblock(104),FileRead,Openfile(68:7/0),Thread(74:7/W1)) this Page(40:7/13)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(74:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(74:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(13)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 5577 offset = 457 page no = 5 Thread(80:7/RU)
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 63209 offset = 745 page no = 61 Thread(73:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(73:7/RU) 22 Page(61:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(26) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(61:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(6:8/26)
[PageFaultHandler][do_handlePageFault] Frame(26) is dirty, do swap-out, Thread(73:7/W0)
[PageFaultHandler][SwapOut] page Page(6:8/26) frame Frame(26)file Openfile(68:7/0)
[PageFaultHandler][SwapOut] block no 6
[Info][PageTableEntry][do_lock] iorb IORB(Id(661),Device(0),Page(6:8/26),Diskblock(70),FileWrite,Openfile(68:7/0),Thread(73:7/W1)) this Page(6:8/26)
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(9:8/21)
[PageFaultHandler][do_handlePageFault] thread Thread(71:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(45:9/10)
[PageFaultHandler][do_handlePageFault] thread Thread(78:9/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(40:7/13)
[PageFaultHandler][do_handlePageFault] thread Thread(74:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(6:8/26)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(26) Page(6:8/26)Thread(73:7/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(61:7/null) setframe Frame(26)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(662),Device(0),Page(61:7/26),Diskblock(125),FileRead,Openfile(68:7/0),Thread(73:7/W1)) this Page(61:7/26)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(73:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(73:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(61:7/26)
[PageFaultHandler][do_handlePageFault] thread Thread(73:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageCleanDaemon][unleash] osp.Memory.PageCleanDaemon@e14d43 execute time 100000
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(10)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(16)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(23)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(20)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(8)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(19)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(10)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(10) Page(45:9/10) isDirty true
[PageFaultHandler][SwapOut] file Openfile(92:9/0)
[PageFaultHandler][SwapOut] block no 45
[Info][PageTableEntry][do_lock] iorb IORB(Id(663),Device(0),Page(45:9/10),Diskblock(45),FileWrite,Openfile(92:9/0),Thread(81:0/W1)) this Page(45:9/10)
[Info][PageTableEntry][do_lock] Get frame Frame(10)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 100060/250000[PageTableEntry][do_unlock] this Page(45:9/10)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(10) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(16)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(16) Page(12:7/16) isDirty true
[PageFaultHandler][SwapOut] file Openfile(68:7/0)
[PageFaultHandler][SwapOut] block no 12
[Info][PageTableEntry][do_lock] iorb IORB(Id(664),Device(0),Page(12:7/16),Diskblock(76),FileWrite,Openfile(68:7/0),Thread(81:0/W1)) this Page(12:7/16)
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 57392 offset = 48 page no = 56 Thread(74:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(74:7/RU) 21 Page(56:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(10) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(56:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(45:9/10)
[PageFaultHandler][do_handlePageFault] page Page(56:7/null) setframe Frame(10)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(665),Device(0),Page(56:7/10),Diskblock(120),FileRead,Openfile(68:7/0),Thread(74:7/W1)) this Page(56:7/10)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(74:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(74:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(10)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(12:7/16)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(16) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(23)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(23) Page(57:8/23) isDirty true
[PageFaultHandler][SwapOut] file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 57
[Info][PageTableEntry][do_lock] iorb IORB(Id(666),Device(0),Page(57:8/23),Diskblock(249),FileWrite,Openfile(82:8/0),Thread(81:0/W1)) this Page(57:8/23)
[Info][PageTableEntry][do_lock] Get frame Frame(23)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 62442 offset = 1002 page no = 60 Thread(72:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(72:7/RU) 21 Page(60:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(28) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(60:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(16:8/28)
[PageFaultHandler][do_handlePageFault] page Page(60:7/null) setframe Frame(28)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(667),Device(0),Page(60:7/28),Diskblock(124),FileRead,Openfile(68:7/0),Thread(72:7/W1)) this Page(60:7/28)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(72:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(72:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 29011 offset = 339 page no = 28 Thread(73:7/RU)
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 27557 offset = 933 page no = 26 Thread(73:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(73:7/RU) 21 Page(26:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(25) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(26:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(23:8/25)
[PageFaultHandler][do_handlePageFault] page Page(26:7/null) setframe Frame(25)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(668),Device(0),Page(26:7/25),Diskblock(90),FileRead,Openfile(68:7/0),Thread(73:7/W1)) this Page(26:7/25)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(73:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(73:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(25)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(56:7/10)
[PageFaultHandler][do_handlePageFault] thread Thread(74:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 62840 offset = 376 page no = 61 Thread(78:9/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(78:9/RU) 22 Page(61:9/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(22) Reserved by Task(9/L)
[PageFaultHandler][do_handlePageFault] page Page(61:9/null)
[PageFaultHandler][do_handlePageFault] page Page(61:9/null) setframe Frame(22)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(669),Device(0),Page(61:9/22),Diskblock(61),FileRead,Openfile(92:9/0),Thread(78:9/W1)) this Page(61:9/22)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(78:9/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(78:9/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(22)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 55206 offset = 934 page no = 53 Thread(65:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(65:7/RU) 21 Page(53:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(16) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(53:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(12:7/16)
[PageFaultHandler][do_handlePageFault] page Page(53:7/null) setframe Frame(16)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(670),Device(0),Page(53:7/16),Diskblock(117),FileRead,Openfile(68:7/0),Thread(65:7/W1)) this Page(53:7/16)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(65:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(65:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 64585 offset = 73 page no = 63 Thread(79:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(79:7/RU) 22 Page(63:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(2) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(63:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(49:7/2)
[PageFaultHandler][do_handlePageFault] page Page(63:7/null) setframe Frame(2)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(671),Device(0),Page(63:7/2),Diskblock(127),FileRead,Openfile(68:7/0),Thread(79:7/W1)) this Page(63:7/2)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(79:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(79:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 42359 offset = 375 page no = 41 Thread(74:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(74:7/RU) 22 Page(41:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(11) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(41:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(27:7/11)
[PageFaultHandler][do_handlePageFault] Frame(11) is dirty, do swap-out, Thread(74:7/W0)
[PageFaultHandler][SwapOut] page Page(27:7/11) frame Frame(11)file Openfile(68:7/0)
[PageFaultHandler][SwapOut] block no 27
[Info][PageTableEntry][do_lock] iorb IORB(Id(672),Device(0),Page(27:7/11),Diskblock(91),FileWrite,Openfile(68:7/0),Thread(74:7/W1)) this Page(27:7/11)
[Info][PageTableEntry][do_lock] Get frame Frame(11)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(57:8/23)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(23) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(20)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(20) Page(44:7/20) isDirty true
[PageFaultHandler][SwapOut] file Openfile(68:7/0)
[PageFaultHandler][SwapOut] block no 44
[Info][PageTableEntry][do_lock] iorb IORB(Id(673),Device(0),Page(44:7/20),Diskblock(108),FileWrite,Openfile(68:7/0),Thread(81:0/W1)) this Page(44:7/20)
[Info][PageTableEntry][do_lock] Get frame Frame(20)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(60:7/28)
[PageFaultHandler][do_handlePageFault] thread Thread(72:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 61580 offset = 140 page no = 60 Thread(72:7/RU)
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(26:7/25)
[PageFaultHandler][do_handlePageFault] thread Thread(73:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(61:9/22)
[PageFaultHandler][do_handlePageFault] thread Thread(78:9/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(53:7/16)
[PageFaultHandler][do_handlePageFault] thread Thread(65:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 57172 offset = 852 page no = 55 Thread(78:9/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(78:9/RU) 21 Page(55:9/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(28) Reserved by Task(9/L)
[PageFaultHandler][do_handlePageFault] page Page(55:9/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(60:7/28)
[PageFaultHandler][do_handlePageFault] Frame(28) is dirty, do swap-out, Thread(78:9/W0)
[PageFaultHandler][SwapOut] page Page(60:7/28) frame Frame(28)file Openfile(92:9/0)
[PageFaultHandler][SwapOut] block no 60
[Info][PageTableEntry][do_lock] iorb IORB(Id(674),Device(0),Page(60:7/28),Diskblock(60),FileWrite,Openfile(92:9/0),Thread(78:9/W1)) this Page(60:7/28)
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(63:7/2)
[PageFaultHandler][do_handlePageFault] thread Thread(79:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 2474 offset = 426 page no = 2 Thread(65:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(65:7/RU) 22 Page(2:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(22) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(2:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(61:9/22)
[PageFaultHandler][do_handlePageFault] Frame(22) is dirty, do swap-out, Thread(65:7/W0)
[PageFaultHandler][SwapOut] page Page(61:9/22) frame Frame(22)file Openfile(68:7/0)
[PageFaultHandler][SwapOut] block no 61
[Info][PageTableEntry][do_lock] iorb IORB(Id(675),Device(0),Page(61:9/22),Diskblock(125),FileWrite,Openfile(68:7/0),Thread(65:7/W1)) this Page(61:9/22)
[Info][PageTableEntry][do_lock] Get frame Frame(22)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 101020/250000[PageTableEntry][do_unlock] this Page(27:7/11)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(11) Page(27:7/11)Thread(74:7/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(41:7/null) setframe Frame(11)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(676),Device(0),Page(41:7/11),Diskblock(105),FileRead,Openfile(68:7/0),Thread(74:7/W1)) this Page(41:7/11)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(74:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(74:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(11)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 34652 offset = 860 page no = 33 Thread(79:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(79:7/RU) 21 Page(33:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(2) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(33:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(63:7/2)
[PageFaultHandler][do_handlePageFault] Frame(2) is dirty, do swap-out, Thread(79:7/W0)
[PageFaultHandler][SwapOut] page Page(63:7/2) frame Frame(2)file Openfile(68:7/0)
[PageFaultHandler][SwapOut] block no 63
[Info][PageTableEntry][do_lock] iorb IORB(Id(677),Device(0),Page(63:7/2),Diskblock(127),FileWrite,Openfile(68:7/0),Thread(79:7/W1)) this Page(63:7/2)
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(44:7/20)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(20) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(8)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(8) Page(28:7/8) isDirty true
[PageFaultHandler][SwapOut] file Openfile(68:7/0)
[PageFaultHandler][SwapOut] block no 28
[Info][PageTableEntry][do_lock] iorb IORB(Id(678),Device(0),Page(28:7/8),Diskblock(92),FileWrite,Openfile(68:7/0),Thread(81:0/W1)) this Page(28:7/8)
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 57009 offset = 689 page no = 55 Thread(72:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(72:7/RU) 21 Page(55:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(0) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(55:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(45:7/0)
[PageFaultHandler][do_handlePageFault] page Page(55:7/null) setframe Frame(0)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(679),Device(0),Page(55:7/0),Diskblock(119),FileRead,Openfile(68:7/0),Thread(72:7/W1)) this Page(55:7/0)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(72:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(72:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(60:7/28)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(28) Page(60:7/28)Thread(78:9/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(55:9/null) setframe Frame(28)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(680),Device(0),Page(55:9/28),Diskblock(55),FileRead,Openfile(92:9/0),Thread(78:9/W1)) this Page(55:9/28)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(78:9/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(78:9/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 60571 offset = 155 page no = 59 Thread(73:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(73:7/RU) 21 Page(59:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(27) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(59:7/null)
[PageFaultHandler][do_handlePageFault] page Page(59:7/null) setframe Frame(27)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(681),Device(0),Page(59:7/27),Diskblock(123),FileRead,Openfile(68:7/0),Thread(73:7/W1)) this Page(59:7/27)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(73:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(73:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(61:9/22)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(22) Page(61:9/22)Thread(65:7/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(2:7/null) setframe Frame(22)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(682),Device(0),Page(2:7/22),Diskblock(66),FileRead,Openfile(68:7/0),Thread(65:7/W1)) this Page(2:7/22)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(65:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(65:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(22)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(41:7/11)
[PageFaultHandler][do_handlePageFault] thread Thread(74:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(63:7/2)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(2) Page(63:7/2)Thread(79:7/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(33:7/null) setframe Frame(2)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(683),Device(0),Page(33:7/2),Diskblock(97),FileRead,Openfile(68:7/0),Thread(79:7/W1)) this Page(33:7/2)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(79:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(79:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(28:7/8)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(8) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(19)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(19) Page(36:7/19) isDirty true
[PageFaultHandler][SwapOut] file Openfile(68:7/0)
[PageFaultHandler][SwapOut] block no 36
[Info][PageTableEntry][do_lock] iorb IORB(Id(684),Device(0),Page(36:7/19),Diskblock(100),FileWrite,Openfile(68:7/0),Thread(81:0/W1)) this Page(36:7/19)
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(55:7/0)
[PageFaultHandler][do_handlePageFault] thread Thread(72:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(55:9/28)
[PageFaultHandler][do_handlePageFault] thread Thread(78:9/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(59:7/27)
[PageFaultHandler][do_handlePageFault] thread Thread(73:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 42293 offset = 309 page no = 41 Thread(72:7/RU)
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(2:7/22)
[PageFaultHandler][do_handlePageFault] thread Thread(65:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 5621 offset = 501 page no = 5 Thread(82:10/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(82:10/RU) 22 Page(5:10/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(22) Reserved by Task(10/L)
[PageFaultHandler][do_handlePageFault] page Page(5:10/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(2:7/22)
[PageFaultHandler][do_handlePageFault] Frame(22) is dirty, do swap-out, Thread(82:10/W0)
[PageFaultHandler][SwapOut] page Page(2:7/22) frame Frame(22)file Openfile(96:10/0)
[PageFaultHandler][SwapOut] block no 2
[Info][PageTableEntry][do_lock] iorb IORB(Id(685),Device(0),Page(2:7/22),Diskblock(258),FileWrite,Openfile(96:10/0),Thread(82:10/W1)) this Page(2:7/22)
[Info][PageTableEntry][do_lock] Get frame Frame(22)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 102017/250000[MMU][do_refer] address = 13850 offset = 538 page no = 13 Thread(74:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(74:7/RU) 22 Page(13:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(8) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(13:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(28:7/8)
[PageFaultHandler][do_handlePageFault] page Page(13:7/null) setframe Frame(8)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(686),Device(0),Page(13:7/8),Diskblock(77),FileRead,Openfile(68:7/0),Thread(74:7/W1)) this Page(13:7/8)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(74:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(74:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(33:7/2)
[PageFaultHandler][do_handlePageFault] thread Thread(79:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(36:7/19)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(19) finish
[MMU][do_refer] address = 61267 offset = 851 page no = 59 Thread(79:7/RU)
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(2:7/22)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(22) Page(2:7/22)Thread(82:10/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(5:10/null) setframe Frame(22)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(687),Device(0),Page(5:10/22),Diskblock(261),FileRead,Openfile(96:10/0),Thread(82:10/W1)) this Page(5:10/22)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(82:10/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(82:10/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(22)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(13:7/8)
[PageFaultHandler][do_handlePageFault] thread Thread(74:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 49484 offset = 332 page no = 48 Thread(73:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(73:7/RU) 21 Page(48:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(27) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(48:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(59:7/27)
[PageFaultHandler][do_handlePageFault] Frame(27) is dirty, do swap-out, Thread(73:7/W0)
[PageFaultHandler][SwapOut] page Page(59:7/27) frame Frame(27)file Openfile(68:7/0)
[PageFaultHandler][SwapOut] block no 59
[Info][PageTableEntry][do_lock] iorb IORB(Id(688),Device(0),Page(59:7/27),Diskblock(123),FileWrite,Openfile(68:7/0),Thread(73:7/W1)) this Page(59:7/27)
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 22658 offset = 130 page no = 22 Thread(74:7/RU)
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 62074 offset = 634 page no = 60 Thread(79:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(79:7/RU) 21 Page(60:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(6) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(60:7/null)
[PageFaultHandler][do_handlePageFault] page Page(60:7/null) setframe Frame(6)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(689),Device(0),Page(60:7/6),Diskblock(124),FileRead,Openfile(68:7/0),Thread(79:7/W1)) this Page(60:7/6)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(79:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(79:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(6)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(5:10/22)
[PageFaultHandler][do_handlePageFault] thread Thread(82:10/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(59:7/27)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(27) Page(59:7/27)Thread(73:7/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(48:7/null) setframe Frame(27)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(690),Device(0),Page(48:7/27),Diskblock(112),FileRead,Openfile(68:7/0),Thread(73:7/W1)) this Page(48:7/27)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(73:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(73:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 48082 offset = 978 page no = 46 Thread(82:10/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(82:10/RU) 21 Page(46:10/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(12) Reserved by Task(10/L)
[PageFaultHandler][do_handlePageFault] page Page(46:10/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(0:8/12)
[PageFaultHandler][do_handlePageFault] Frame(12) is dirty, do swap-out, Thread(82:10/W0)
[PageFaultHandler][SwapOut] page Page(0:8/12) frame Frame(12)file Openfile(96:10/0)
[PageFaultHandler][SwapOut] block no 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(691),Device(0),Page(0:8/12),Diskblock(256),FileWrite,Openfile(96:10/0),Thread(82:10/W1)) this Page(0:8/12)
[Info][PageTableEntry][do_lock] Get frame Frame(12)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(60:7/6)
[PageFaultHandler][do_handlePageFault] thread Thread(79:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 17486 offset = 78 page no = 17 Thread(79:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(79:7/RU) 22 Page(17:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(6) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(17:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(60:7/6)
[PageFaultHandler][do_handlePageFault] page Page(17:7/null) setframe Frame(6)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(692),Device(0),Page(17:7/6),Diskblock(81),FileRead,Openfile(68:7/0),Thread(79:7/W1)) this Page(17:7/6)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(79:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(79:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(6)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 103030/250000[PageTableEntry][do_unlock] this Page(48:7/27)
[PageFaultHandler][do_handlePageFault] thread Thread(73:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 48391 offset = 263 page no = 47 Thread(73:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(73:7/RU) 22 Page(47:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(27) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(47:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(48:7/27)
[PageFaultHandler][do_handlePageFault] page Page(47:7/null) setframe Frame(27)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(693),Device(0),Page(47:7/27),Diskblock(111),FileRead,Openfile(68:7/0),Thread(73:7/W1)) this Page(47:7/27)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(73:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(73:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(0:8/12)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(12) Page(0:8/12)Thread(82:10/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(46:10/null) setframe Frame(12)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(694),Device(0),Page(46:10/12),Diskblock(302),FileRead,Openfile(96:10/0),Thread(82:10/W1)) this Page(46:10/12)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(82:10/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(82:10/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(12)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(17:7/6)
[PageFaultHandler][do_handlePageFault] thread Thread(79:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 28343 offset = 695 page no = 27 Thread(79:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(79:7/RU) 21 Page(27:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(4) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(27:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(4:7/4)
[PageFaultHandler][do_handlePageFault] page Page(27:7/null) setframe Frame(4)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(695),Device(0),Page(27:7/4),Diskblock(91),FileRead,Openfile(68:7/0),Thread(79:7/W1)) this Page(27:7/4)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(79:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(79:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(47:7/27)
[PageFaultHandler][do_handlePageFault] thread Thread(73:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 23932 offset = 380 page no = 23 Thread(73:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(73:7/RU) 22 Page(23:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(7) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(23:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(8:8/7)
[PageFaultHandler][do_handlePageFault] page Page(23:7/null) setframe Frame(7)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(696),Device(0),Page(23:7/7),Diskblock(87),FileRead,Openfile(68:7/0),Thread(73:7/W1)) this Page(23:7/7)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(73:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(73:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(7)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(46:10/12)
[PageFaultHandler][do_handlePageFault] thread Thread(82:10/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(27:7/4)
[PageFaultHandler][do_handlePageFault] thread Thread(79:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
Simulation progress: 104020/250000[PageTableEntry][do_unlock] this Page(23:7/7)
[PageFaultHandler][do_handlePageFault] thread Thread(73:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 59480 offset = 88 page no = 58 Thread(73:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(73:7/RU) 21 Page(58:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(4) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(58:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(27:7/4)
[PageFaultHandler][do_handlePageFault] page Page(58:7/null) setframe Frame(4)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(697),Device(0),Page(58:7/4),Diskblock(122),FileRead,Openfile(68:7/0),Thread(73:7/W1)) this Page(58:7/4)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(73:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(73:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(58:7/4)
[PageFaultHandler][do_handlePageFault] thread Thread(73:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 17377 offset = 993 page no = 16 Thread(79:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(79:7/RU) 21 Page(16:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(5) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(16:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(49:8/5)
[PageFaultHandler][do_handlePageFault] Frame(5) is dirty, do swap-out, Thread(79:7/W0)
[PageFaultHandler][SwapOut] page Page(49:8/5) frame Frame(5)file Openfile(68:7/0)
[PageFaultHandler][SwapOut] block no 49
[Info][PageTableEntry][do_lock] iorb IORB(Id(698),Device(0),Page(49:8/5),Diskblock(113),FileWrite,Openfile(68:7/0),Thread(79:7/W1)) this Page(49:8/5)
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(49:8/5)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(5) Page(49:8/5)Thread(79:7/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(16:7/null) setframe Frame(5)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(699),Device(0),Page(16:7/5),Diskblock(80),FileRead,Openfile(68:7/0),Thread(79:7/W1)) this Page(16:7/5)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(79:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(79:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(16:7/5)
[PageFaultHandler][do_handlePageFault] thread Thread(79:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 53973 offset = 725 page no = 52 Thread(79:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(79:7/RU) 21 Page(52:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(29) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(52:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(5:7/29)
[PageFaultHandler][do_handlePageFault] page Page(52:7/null) setframe Frame(29)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(700),Device(0),Page(52:7/29),Diskblock(116),FileRead,Openfile(68:7/0),Thread(79:7/W1)) this Page(52:7/29)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(79:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(79:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 105005/250000[MMU][do_refer] address = 32257 offset = 513 page no = 31 Thread(71:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(71:8/RU) 21 Page(31:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(21) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(31:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(9:8/21)
[PageFaultHandler][do_handlePageFault] page Page(31:8/null) setframe Frame(21)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(701),Device(0),Page(31:8/21),Diskblock(223),FileRead,Openfile(82:8/0),Thread(71:8/W1)) this Page(31:8/21)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(71:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(71:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(52:7/29)
[PageFaultHandler][do_handlePageFault] thread Thread(79:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 59087 offset = 719 page no = 57 Thread(79:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(79:7/RU) 21 Page(57:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(14) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(57:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(24:7/14)
[PageFaultHandler][do_handlePageFault] page Page(57:7/null) setframe Frame(14)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(702),Device(0),Page(57:7/14),Diskblock(121),FileRead,Openfile(68:7/0),Thread(79:7/W1)) this Page(57:7/14)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(79:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(79:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(14)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(31:8/21)
[PageFaultHandler][do_handlePageFault] thread Thread(71:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(57:7/14)
[PageFaultHandler][do_handlePageFault] thread Thread(79:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 58805 offset = 437 page no = 57 Thread(83:7/RU)
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 39391 offset = 479 page no = 38 Thread(79:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(79:7/RU) 22 Page(38:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(21) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(38:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(31:8/21)
[PageFaultHandler][do_handlePageFault] page Page(38:7/null) setframe Frame(21)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(703),Device(0),Page(38:7/21),Diskblock(102),FileRead,Openfile(68:7/0),Thread(79:7/W1)) this Page(38:7/21)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(79:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(79:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 33441 offset = 673 page no = 32 Thread(77:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(77:8/RU) 22 Page(32:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(18) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(32:8/null)
[PageFaultHandler][do_handlePageFault] page Page(32:8/null) setframe Frame(18)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(704),Device(0),Page(32:8/18),Diskblock(224),FileRead,Openfile(82:8/0),Thread(77:8/W1)) this Page(32:8/18)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(77:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(77:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 13844 offset = 532 page no = 13 Thread(83:7/RU)
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(38:7/21)
[PageFaultHandler][do_handlePageFault] thread Thread(79:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 59027 offset = 659 page no = 57 Thread(83:7/RU)
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 58778 offset = 410 page no = 57 Thread(83:7/RU)
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(32:8/18)
[PageFaultHandler][do_handlePageFault] thread Thread(77:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 11195 offset = 955 page no = 10 Thread(77:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(77:8/RU) 21 Page(10:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(18) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(10:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(32:8/18)
[PageFaultHandler][do_handlePageFault] Frame(18) is dirty, do swap-out, Thread(77:8/W0)
[PageFaultHandler][SwapOut] page Page(32:8/18) frame Frame(18)file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 32
[Info][PageTableEntry][do_lock] iorb IORB(Id(705),Device(0),Page(32:8/18),Diskblock(224),FileWrite,Openfile(82:8/0),Thread(77:8/W1)) this Page(32:8/18)
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 41675 offset = 715 page no = 40 Thread(83:7/RU)
[MMU][do_refer] Do memory read.
Simulation progress: 106050/250000[MMU][do_refer] address = 30992 offset = 272 page no = 30 Thread(83:7/RU)
[MMU][do_refer] Do memory write.
[Info][PageTableEntry][do_lock] iorb IORB(Id(706),Device(1),Page(13:7/8),Diskblock(30),FileWrite,Openfile(100:7/1),Thread(83:7/W0)) this Page(13:7/8)
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(32:8/18)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(18) Page(32:8/18)Thread(77:8/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(10:8/null) setframe Frame(18)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(707),Device(0),Page(10:8/18),Diskblock(202),FileRead,Openfile(82:8/0),Thread(77:8/W1)) this Page(10:8/18)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(77:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(77:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(13:7/8)
[MMU][do_refer] address = 42200 offset = 216 page no = 41 Thread(83:7/RU)
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 3311 offset = 239 page no = 3 Thread(83:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(83:7/RU) 21 Page(3:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(15) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(3:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(30:7/15)
[PageFaultHandler][do_handlePageFault] Frame(15) is dirty, do swap-out, Thread(83:7/W0)
[PageFaultHandler][SwapOut] page Page(30:7/15) frame Frame(15)file Openfile(68:7/0)
[PageFaultHandler][SwapOut] block no 30
[Info][PageTableEntry][do_lock] iorb IORB(Id(708),Device(0),Page(30:7/15),Diskblock(94),FileWrite,Openfile(68:7/0),Thread(83:7/W1)) this Page(30:7/15)
[Info][PageTableEntry][do_lock] Get frame Frame(15)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(10:8/18)
[PageFaultHandler][do_handlePageFault] thread Thread(77:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(30:7/15)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(15) Page(30:7/15)Thread(83:7/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(3:7/null) setframe Frame(15)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(709),Device(0),Page(3:7/15),Diskblock(67),FileRead,Openfile(68:7/0),Thread(83:7/W1)) this Page(3:7/15)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(83:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(83:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(15)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 30981 offset = 261 page no = 30 Thread(77:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(77:8/RU) 21 Page(30:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(10) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(30:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(56:7/10)
[PageFaultHandler][do_handlePageFault] page Page(30:8/null) setframe Frame(10)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(710),Device(0),Page(30:8/10),Diskblock(222),FileRead,Openfile(82:8/0),Thread(77:8/W1)) this Page(30:8/10)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(77:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(77:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(10)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(3:7/15)
[PageFaultHandler][do_handlePageFault] thread Thread(83:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 64322 offset = 834 page no = 62 Thread(83:7/RU)
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(30:8/10)
[PageFaultHandler][do_handlePageFault] thread Thread(77:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 12927 offset = 639 page no = 12 Thread(83:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(83:7/RU) 21 Page(12:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(15) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(12:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(3:7/15)
[PageFaultHandler][do_handlePageFault] page Page(12:7/null) setframe Frame(15)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(711),Device(0),Page(12:7/15),Diskblock(76),FileRead,Openfile(68:7/0),Thread(83:7/W1)) this Page(12:7/15)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(83:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(83:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(15)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(12:7/15)
[PageFaultHandler][do_handlePageFault] thread Thread(83:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 56275 offset = 979 page no = 54 Thread(83:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(83:7/RU) 22 Page(54:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(16) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(54:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(53:7/16)
[PageFaultHandler][do_handlePageFault] page Page(54:7/null) setframe Frame(16)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(712),Device(0),Page(54:7/16),Diskblock(118),FileRead,Openfile(68:7/0),Thread(83:7/W1)) this Page(54:7/16)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(83:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(83:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(54:7/16)
[PageFaultHandler][do_handlePageFault] thread Thread(83:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 47115 offset = 11 page no = 46 Thread(83:7/RU)
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 35328 offset = 512 page no = 34 Thread(83:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(83:7/RU) 22 Page(34:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(23) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(34:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(57:8/23)
[PageFaultHandler][do_handlePageFault] page Page(34:7/null) setframe Frame(23)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(713),Device(0),Page(34:7/23),Diskblock(98),FileRead,Openfile(68:7/0),Thread(83:7/W1)) this Page(34:7/23)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(83:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(83:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(23)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 107034/250000[PageTableEntry][do_unlock] this Page(34:7/23)
[PageFaultHandler][do_handlePageFault] thread Thread(83:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 16525 offset = 141 page no = 16 Thread(83:7/RU)
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 59632 offset = 240 page no = 58 Thread(83:7/RU)
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 55641 offset = 345 page no = 54 Thread(83:7/RU)
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 9391 offset = 175 page no = 9 Thread(83:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(83:7/RU) 22 Page(9:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(20) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(9:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(44:7/20)
[PageFaultHandler][do_handlePageFault] page Page(9:7/null) setframe Frame(20)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(714),Device(0),Page(9:7/20),Diskblock(73),FileRead,Openfile(68:7/0),Thread(83:7/W1)) this Page(9:7/20)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(83:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(83:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(20)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(9:7/20)
[PageFaultHandler][do_handlePageFault] thread Thread(83:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 62065 offset = 625 page no = 60 Thread(84:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(84:7/RU) 21 Page(60:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(11) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(60:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(41:7/11)
[PageFaultHandler][do_handlePageFault] Frame(11) is dirty, do swap-out, Thread(84:7/W0)
[PageFaultHandler][SwapOut] page Page(41:7/11) frame Frame(11)file Openfile(68:7/0)
[PageFaultHandler][SwapOut] block no 41
[Info][PageTableEntry][do_lock] iorb IORB(Id(715),Device(0),Page(41:7/11),Diskblock(105),FileWrite,Openfile(68:7/0),Thread(84:7/W1)) this Page(41:7/11)
[Info][PageTableEntry][do_lock] Get frame Frame(11)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 108042/250000[MMU][do_refer] address = 40668 offset = 732 page no = 39 Thread(77:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(77:8/RU) 21 Page(39:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(1) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(39:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(22:7/1)
[PageFaultHandler][do_handlePageFault] Frame(1) is dirty, do swap-out, Thread(77:8/W0)
[PageFaultHandler][SwapOut] page Page(22:7/1) frame Frame(1)file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 22
[Info][PageTableEntry][do_lock] iorb IORB(Id(716),Device(0),Page(22:7/1),Diskblock(214),FileWrite,Openfile(82:8/0),Thread(77:8/W1)) this Page(22:7/1)
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(41:7/11)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(11) Page(41:7/11)Thread(84:7/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(60:7/null) setframe Frame(11)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(717),Device(0),Page(60:7/11),Diskblock(124),FileRead,Openfile(68:7/0),Thread(84:7/W1)) this Page(60:7/11)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(84:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(84:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(11)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(22:7/1)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(1) Page(22:7/1)Thread(77:8/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(39:8/null) setframe Frame(1)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(718),Device(0),Page(39:8/1),Diskblock(231),FileRead,Openfile(82:8/0),Thread(77:8/W1)) this Page(39:8/1)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(77:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(77:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(60:7/11)
[PageFaultHandler][do_handlePageFault] thread Thread(84:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(39:8/1)
[PageFaultHandler][do_handlePageFault] thread Thread(77:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 58967 offset = 599 page no = 57 Thread(84:7/RU)
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 43051 offset = 43 page no = 42 Thread(84:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(84:7/RU) 22 Page(42:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(1) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(42:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(39:8/1)
[PageFaultHandler][do_handlePageFault] page Page(42:7/null) setframe Frame(1)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(719),Device(0),Page(42:7/1),Diskblock(106),FileRead,Openfile(68:7/0),Thread(84:7/W1)) this Page(42:7/1)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(84:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(84:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(42:7/1)
[PageFaultHandler][do_handlePageFault] thread Thread(84:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 9894 offset = 678 page no = 9 Thread(84:7/RU)
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 41701 offset = 741 page no = 40 Thread(84:7/RU)
[MMU][do_refer] Do memory write.
Simulation progress: 109031/250000[MMU][do_refer] address = 49862 offset = 710 page no = 48 Thread(84:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(84:7/RU) 22 Page(48:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(28) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(48:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(55:9/28)
[PageFaultHandler][do_handlePageFault] page Page(48:7/null) setframe Frame(28)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(720),Device(0),Page(48:7/28),Diskblock(112),FileRead,Openfile(68:7/0),Thread(84:7/W1)) this Page(48:7/28)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(84:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(84:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(48:7/28)
[PageFaultHandler][do_handlePageFault] thread Thread(84:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 53410 offset = 162 page no = 52 Thread(84:7/RU)
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 64290 offset = 802 page no = 62 Thread(84:7/RU)
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 22806 offset = 278 page no = 22 Thread(84:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(84:7/RU) 21 Page(22:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(24) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(22:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(46:7/24)
[PageFaultHandler][do_handlePageFault] page Page(22:7/null) setframe Frame(24)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(721),Device(0),Page(22:7/24),Diskblock(86),FileRead,Openfile(68:7/0),Thread(84:7/W1)) this Page(22:7/24)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(84:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(84:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(24)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(22:7/24)
[PageFaultHandler][do_handlePageFault] thread Thread(84:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 61972 offset = 532 page no = 60 Thread(84:7/RU)
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 29134 offset = 462 page no = 28 Thread(84:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(84:7/RU) 21 Page(28:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(2) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(28:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(33:7/2)
[PageFaultHandler][do_handlePageFault] page Page(28:7/null) setframe Frame(2)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(722),Device(0),Page(28:7/2),Diskblock(92),FileRead,Openfile(68:7/0),Thread(84:7/W1)) this Page(28:7/2)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(84:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(84:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(28:7/2)
[PageFaultHandler][do_handlePageFault] thread Thread(84:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 36381 offset = 541 page no = 35 Thread(77:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(77:8/RU) 22 Page(35:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(19) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(35:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(36:7/19)
[PageFaultHandler][do_handlePageFault] page Page(35:8/null) setframe Frame(19)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(723),Device(0),Page(35:8/19),Diskblock(227),FileRead,Openfile(82:8/0),Thread(77:8/W1)) this Page(35:8/19)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(77:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(77:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(35:8/19)
[PageFaultHandler][do_handlePageFault] thread Thread(77:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
Simulation progress: 110040/250000[MMU][do_refer] address = 43367 offset = 359 page no = 42 Thread(84:7/RU)
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 3054 offset = 1006 page no = 2 Thread(84:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(84:7/RU) 22 Page(2:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(8) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(2:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(13:7/8)
[PageFaultHandler][do_handlePageFault] Frame(8) is dirty, do swap-out, Thread(84:7/W0)
[PageFaultHandler][SwapOut] page Page(13:7/8) frame Frame(8)file Openfile(68:7/0)
[PageFaultHandler][SwapOut] block no 13
[Info][PageTableEntry][do_lock] iorb IORB(Id(724),Device(0),Page(13:7/8),Diskblock(77),FileWrite,Openfile(68:7/0),Thread(84:7/W1)) this Page(13:7/8)
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(13:7/8)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(8) Page(13:7/8)Thread(84:7/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(2:7/null) setframe Frame(8)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(725),Device(0),Page(2:7/8),Diskblock(66),FileRead,Openfile(68:7/0),Thread(84:7/W1)) this Page(2:7/8)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(84:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(84:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(2:7/8)
[PageFaultHandler][do_handlePageFault] thread Thread(84:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 61287 offset = 871 page no = 59 Thread(86:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(86:8/RU) 21 Page(59:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(22) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(59:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(5:10/22)
[PageFaultHandler][do_handlePageFault] Frame(22) is dirty, do swap-out, Thread(86:8/W0)
[PageFaultHandler][SwapOut] page Page(5:10/22) frame Frame(22)file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 5
[Info][PageTableEntry][do_lock] iorb IORB(Id(726),Device(0),Page(5:10/22),Diskblock(197),FileWrite,Openfile(82:8/0),Thread(86:8/W1)) this Page(5:10/22)
[Info][PageTableEntry][do_lock] Get frame Frame(22)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 111005/250000[PageTableEntry][do_unlock] this Page(5:10/22)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(22) Page(5:10/22)Thread(86:8/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(59:8/null) setframe Frame(22)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(727),Device(0),Page(59:8/22),Diskblock(251),FileRead,Openfile(82:8/0),Thread(86:8/W1)) this Page(59:8/22)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(86:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(86:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(22)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(59:8/22)
[PageFaultHandler][do_handlePageFault] thread Thread(86:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 35927 offset = 87 page no = 35 Thread(84:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(84:7/RU) 22 Page(35:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(12) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(35:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(46:10/12)
[PageFaultHandler][do_handlePageFault] page Page(35:7/null) setframe Frame(12)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(728),Device(0),Page(35:7/12),Diskblock(99),FileRead,Openfile(68:7/0),Thread(84:7/W1)) this Page(35:7/12)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(84:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(84:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(12)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(35:7/12)
[PageFaultHandler][do_handlePageFault] thread Thread(84:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 42651 offset = 667 page no = 41 Thread(77:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(77:8/RU) 21 Page(41:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(6) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(41:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(17:7/6)
[PageFaultHandler][do_handlePageFault] Frame(6) is dirty, do swap-out, Thread(77:8/W0)
[PageFaultHandler][SwapOut] page Page(17:7/6) frame Frame(6)file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 17
[Info][PageTableEntry][do_lock] iorb IORB(Id(729),Device(0),Page(17:7/6),Diskblock(209),FileWrite,Openfile(82:8/0),Thread(77:8/W1)) this Page(17:7/6)
[Info][PageTableEntry][do_lock] Get frame Frame(6)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 7572 offset = 404 page no = 7 Thread(84:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(84:7/RU) 22 Page(7:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(17) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(7:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(20:7/17)
[PageFaultHandler][do_handlePageFault] Frame(17) is dirty, do swap-out, Thread(84:7/W0)
[PageFaultHandler][SwapOut] page Page(20:7/17) frame Frame(17)file Openfile(68:7/0)
[PageFaultHandler][SwapOut] block no 20
[Info][PageTableEntry][do_lock] iorb IORB(Id(730),Device(0),Page(20:7/17),Diskblock(84),FileWrite,Openfile(68:7/0),Thread(84:7/W1)) this Page(20:7/17)
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 22533 offset = 5 page no = 22 Thread(85:7/RU)
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(17:7/6)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(6) Page(17:7/6)Thread(77:8/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(41:8/null) setframe Frame(6)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(731),Device(0),Page(41:8/6),Diskblock(233),FileRead,Openfile(82:8/0),Thread(77:8/W1)) this Page(41:8/6)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(77:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(77:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(6)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(20:7/17)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(17) Page(20:7/17)Thread(84:7/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(7:7/null) setframe Frame(17)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(732),Device(0),Page(7:7/17),Diskblock(71),FileRead,Openfile(68:7/0),Thread(84:7/W1)) this Page(7:7/17)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(84:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(84:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 32114 offset = 370 page no = 31 Thread(73:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(73:7/RU) 22 Page(31:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(27) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(31:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(47:7/27)
[PageFaultHandler][do_handlePageFault] Frame(27) is dirty, do swap-out, Thread(73:7/W0)
[PageFaultHandler][SwapOut] page Page(47:7/27) frame Frame(27)file Openfile(68:7/0)
[PageFaultHandler][SwapOut] block no 47
[Info][PageTableEntry][do_lock] iorb IORB(Id(733),Device(0),Page(47:7/27),Diskblock(111),FileWrite,Openfile(68:7/0),Thread(73:7/W1)) this Page(47:7/27)
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 112010/250000[PageTableEntry][do_unlock] this Page(41:8/6)
[PageFaultHandler][do_handlePageFault] thread Thread(77:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 30680 offset = 984 page no = 29 Thread(86:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(86:8/RU) 22 Page(29:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(3) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(29:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(60:8/3)
[PageFaultHandler][do_handlePageFault] page Page(29:8/null) setframe Frame(3)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(734),Device(0),Page(29:8/3),Diskblock(221),FileRead,Openfile(82:8/0),Thread(86:8/W1)) this Page(29:8/3)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(86:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(86:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(3)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 55328 offset = 32 page no = 54 Thread(65:7/RU)
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 50648 offset = 472 page no = 49 Thread(65:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(65:7/RU) 21 Page(49:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(7) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(49:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(23:7/7)
[PageFaultHandler][do_handlePageFault] Frame(7) is dirty, do swap-out, Thread(65:7/W0)
[PageFaultHandler][SwapOut] page Page(23:7/7) frame Frame(7)file Openfile(68:7/0)
[PageFaultHandler][SwapOut] block no 23
[Info][PageTableEntry][do_lock] iorb IORB(Id(735),Device(0),Page(23:7/7),Diskblock(87),FileWrite,Openfile(68:7/0),Thread(65:7/W1)) this Page(23:7/7)
[Info][PageTableEntry][do_lock] Get frame Frame(7)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(7:7/17)
[PageFaultHandler][do_handlePageFault] thread Thread(84:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTable][do_deallocateMemory] this Pagetable(Task(9/T))
[PageTableEntry][do_unlock] this Page(47:7/27)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(27) Page(47:7/27)Thread(73:7/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(31:7/null) setframe Frame(27)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(736),Device(0),Page(31:7/27),Diskblock(95),FileRead,Openfile(68:7/0),Thread(73:7/W1)) this Page(31:7/27)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(73:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(73:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(29:8/3)
[PageFaultHandler][do_handlePageFault] thread Thread(86:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[Info][PageTableEntry][do_lock] iorb IORB(Id(737),Device(1),Page(10:8/18),Diskblock(29),FileRead,Openfile(106:8/1),Thread(87:8/W0)) this Page(10:8/18)
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(23:7/7)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(7) Page(23:7/7)Thread(65:7/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(49:7/null) setframe Frame(7)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(738),Device(0),Page(49:7/7),Diskblock(113),FileRead,Openfile(68:7/0),Thread(65:7/W1)) this Page(49:7/7)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(65:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(65:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(7)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(10:8/18)
[PageTableEntry][do_unlock] this Page(31:7/27)
[PageFaultHandler][do_handlePageFault] thread Thread(73:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 32955 offset = 187 page no = 32 Thread(77:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(77:8/RU) 21 Page(32:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(17) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(32:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(7:7/17)
[PageFaultHandler][do_handlePageFault] Frame(17) is dirty, do swap-out, Thread(77:8/W0)
[PageFaultHandler][SwapOut] page Page(7:7/17) frame Frame(17)file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 7
[Info][PageTableEntry][do_lock] iorb IORB(Id(739),Device(0),Page(7:7/17),Diskblock(199),FileWrite,Openfile(82:8/0),Thread(77:8/W1)) this Page(7:7/17)
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(740),Device(1),Page(10:8/18),Diskblock(30),FileRead,Openfile(106:8/1),Thread(87:8/W0)) this Page(10:8/18)
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(49:7/7)
[PageFaultHandler][do_handlePageFault] thread Thread(65:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 19213 offset = 781 page no = 18 Thread(86:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(86:8/RU) 21 Page(18:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(3) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(18:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(29:8/3)
[PageFaultHandler][do_handlePageFault] Frame(3) is dirty, do swap-out, Thread(86:8/W0)
[PageFaultHandler][SwapOut] page Page(29:8/3) frame Frame(3)file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 29
[Info][PageTableEntry][do_lock] iorb IORB(Id(741),Device(0),Page(29:8/3),Diskblock(221),FileWrite,Openfile(82:8/0),Thread(86:8/W1)) this Page(29:8/3)
[Info][PageTableEntry][do_lock] Get frame Frame(3)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(10:8/18)
[PageTableEntry][do_unlock] this Page(7:7/17)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(17) Page(7:7/17)Thread(77:8/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(32:8/null) setframe Frame(17)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(742),Device(0),Page(32:8/17),Diskblock(224),FileRead,Openfile(82:8/0),Thread(77:8/W1)) this Page(32:8/17)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(77:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(77:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 113080/250000[MMU][do_refer] address = 9108 offset = 916 page no = 8 Thread(87:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(87:8/RU) 22 Page(8:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(4) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(8:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(58:7/4)
[PageFaultHandler][do_handlePageFault] Frame(4) is dirty, do swap-out, Thread(87:8/W0)
[PageFaultHandler][SwapOut] page Page(58:7/4) frame Frame(4)file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 58
[Info][PageTableEntry][do_lock] iorb IORB(Id(743),Device(0),Page(58:7/4),Diskblock(250),FileWrite,Openfile(82:8/0),Thread(87:8/W1)) this Page(58:7/4)
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(29:8/3)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(3) Page(29:8/3)Thread(86:8/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(18:8/null) setframe Frame(3)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(744),Device(0),Page(18:8/3),Diskblock(210),FileRead,Openfile(82:8/0),Thread(86:8/W1)) this Page(18:8/3)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(86:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(86:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(3)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(32:8/17)
[PageFaultHandler][do_handlePageFault] thread Thread(77:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 33842 offset = 50 page no = 33 Thread(77:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(77:8/RU) 22 Page(33:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(29) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(33:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(52:7/29)
[PageFaultHandler][do_handlePageFault] page Page(33:8/null) setframe Frame(29)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(745),Device(0),Page(33:8/29),Diskblock(225),FileRead,Openfile(82:8/0),Thread(77:8/W1)) this Page(33:8/29)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(77:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(77:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(58:7/4)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(4) Page(58:7/4)Thread(87:8/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(8:8/null) setframe Frame(4)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(746),Device(0),Page(8:8/4),Diskblock(200),FileRead,Openfile(82:8/0),Thread(87:8/W1)) this Page(8:8/4)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(87:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(87:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(18:8/3)
[PageFaultHandler][do_handlePageFault] thread Thread(86:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(33:8/29)
[PageFaultHandler][do_handlePageFault] thread Thread(77:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 6225 offset = 81 page no = 6 Thread(77:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(77:8/RU) 22 Page(6:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(3) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(6:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(18:8/3)
[PageFaultHandler][do_handlePageFault] page Page(6:8/null) setframe Frame(3)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(747),Device(0),Page(6:8/3),Diskblock(198),FileRead,Openfile(82:8/0),Thread(77:8/W1)) this Page(6:8/3)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(77:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(77:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(3)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(8:8/4)
[PageFaultHandler][do_handlePageFault] thread Thread(87:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 47643 offset = 539 page no = 46 Thread(87:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(87:8/RU) 22 Page(46:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(29) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(46:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(33:8/29)
[PageFaultHandler][do_handlePageFault] Frame(29) is dirty, do swap-out, Thread(87:8/W0)
[PageFaultHandler][SwapOut] page Page(33:8/29) frame Frame(29)file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 33
[Info][PageTableEntry][do_lock] iorb IORB(Id(748),Device(0),Page(33:8/29),Diskblock(225),FileWrite,Openfile(82:8/0),Thread(87:8/W1)) this Page(33:8/29)
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 114022/250000[PageTableEntry][do_unlock] this Page(6:8/3)
[PageFaultHandler][do_handlePageFault] thread Thread(77:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[Info][PageTableEntry][do_lock] iorb IORB(Id(749),Device(1),Page(6:8/3),Diskblock(13),FileRead,Openfile(108:7/1),Thread(77:8/W0)) this Page(6:8/3)
[Info][PageTableEntry][do_lock] Get frame Frame(3)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(6:8/3)
[MMU][do_refer] address = 56370 offset = 50 page no = 55 Thread(77:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(77:8/RU) 22 Page(55:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(21) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(55:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(38:7/21)
[PageFaultHandler][do_handlePageFault] Frame(21) is dirty, do swap-out, Thread(77:8/W0)
[PageFaultHandler][SwapOut] page Page(38:7/21) frame Frame(21)file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 38
[Info][PageTableEntry][do_lock] iorb IORB(Id(750),Device(0),Page(38:7/21),Diskblock(230),FileWrite,Openfile(82:8/0),Thread(77:8/W1)) this Page(38:7/21)
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(33:8/29)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(29) Page(33:8/29)Thread(87:8/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(46:8/null) setframe Frame(29)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(751),Device(0),Page(46:8/29),Diskblock(238),FileRead,Openfile(82:8/0),Thread(87:8/W1)) this Page(46:8/29)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(87:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(87:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(38:7/21)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(21) Page(38:7/21)Thread(77:8/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(55:8/null) setframe Frame(21)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(752),Device(0),Page(55:8/21),Diskblock(247),FileRead,Openfile(82:8/0),Thread(77:8/W1)) this Page(55:8/21)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(77:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(77:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(46:8/29)
[PageFaultHandler][do_handlePageFault] thread Thread(87:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 33994 offset = 202 page no = 33 Thread(87:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(87:8/RU) 22 Page(33:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(29) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(33:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(46:8/29)
[PageFaultHandler][do_handlePageFault] Frame(29) is dirty, do swap-out, Thread(87:8/W0)
[PageFaultHandler][SwapOut] page Page(46:8/29) frame Frame(29)file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 46
[Info][PageTableEntry][do_lock] iorb IORB(Id(753),Device(0),Page(46:8/29),Diskblock(238),FileWrite,Openfile(82:8/0),Thread(87:8/W1)) this Page(46:8/29)
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(55:8/21)
[PageFaultHandler][do_handlePageFault] thread Thread(77:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(46:8/29)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(29) Page(46:8/29)Thread(87:8/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(33:8/null) setframe Frame(29)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(754),Device(0),Page(33:8/29),Diskblock(225),FileRead,Openfile(82:8/0),Thread(87:8/W1)) this Page(33:8/29)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(87:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(87:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 115080/250000[MMU][do_refer] address = 24596 offset = 20 page no = 24 Thread(77:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(77:8/RU) 22 Page(24:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(18) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(24:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(10:8/18)
[PageFaultHandler][do_handlePageFault] Frame(18) is dirty, do swap-out, Thread(77:8/W0)
[PageFaultHandler][SwapOut] page Page(10:8/18) frame Frame(18)file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 10
[Info][PageTableEntry][do_lock] iorb IORB(Id(755),Device(0),Page(10:8/18),Diskblock(202),FileWrite,Openfile(82:8/0),Thread(77:8/W1)) this Page(10:8/18)
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(33:8/29)
[PageFaultHandler][do_handlePageFault] thread Thread(87:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(10:8/18)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(18) Page(10:8/18)Thread(77:8/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(24:8/null) setframe Frame(18)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(756),Device(0),Page(24:8/18),Diskblock(216),FileRead,Openfile(82:8/0),Thread(77:8/W1)) this Page(24:8/18)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(77:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(77:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 44791 offset = 759 page no = 43 Thread(79:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(79:7/RU) 21 Page(43:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(10) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(43:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(30:8/10)
[PageFaultHandler][do_handlePageFault] page Page(43:7/null) setframe Frame(10)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(757),Device(0),Page(43:7/10),Diskblock(107),FileRead,Openfile(68:7/0),Thread(79:7/W1)) this Page(43:7/10)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(79:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(79:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(10)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(24:8/18)
[PageFaultHandler][do_handlePageFault] thread Thread(77:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 47960 offset = 856 page no = 46 Thread(87:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(87:8/RU) 22 Page(46:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(18) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(46:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(24:8/18)
[PageFaultHandler][do_handlePageFault] Frame(18) is dirty, do swap-out, Thread(87:8/W0)
[PageFaultHandler][SwapOut] page Page(24:8/18) frame Frame(18)file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 24
[Info][PageTableEntry][do_lock] iorb IORB(Id(758),Device(0),Page(24:8/18),Diskblock(216),FileWrite,Openfile(82:8/0),Thread(87:8/W1)) this Page(24:8/18)
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(43:7/10)
[PageFaultHandler][do_handlePageFault] thread Thread(79:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 3734 offset = 662 page no = 3 Thread(88:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(88:8/RU) 22 Page(3:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(15) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(3:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(12:7/15)
[PageFaultHandler][do_handlePageFault] page Page(3:8/null) setframe Frame(15)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(759),Device(0),Page(3:8/15),Diskblock(195),FileRead,Openfile(82:8/0),Thread(88:8/W1)) this Page(3:8/15)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(88:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(88:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(15)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 64746 offset = 234 page no = 63 Thread(79:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(79:7/RU) 22 Page(63:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(16) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(63:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(54:7/16)
[PageFaultHandler][do_handlePageFault] Frame(16) is dirty, do swap-out, Thread(79:7/W0)
[PageFaultHandler][SwapOut] page Page(54:7/16) frame Frame(16)file Openfile(68:7/0)
[PageFaultHandler][SwapOut] block no 54
[Info][PageTableEntry][do_lock] iorb IORB(Id(760),Device(0),Page(54:7/16),Diskblock(118),FileWrite,Openfile(68:7/0),Thread(79:7/W1)) this Page(54:7/16)
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(24:8/18)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(18) Page(24:8/18)Thread(87:8/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(46:8/null) setframe Frame(18)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(761),Device(0),Page(46:8/18),Diskblock(238),FileRead,Openfile(82:8/0),Thread(87:8/W1)) this Page(46:8/18)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(87:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(87:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(3:8/15)
[PageFaultHandler][do_handlePageFault] thread Thread(88:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(54:7/16)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(16) Page(54:7/16)Thread(79:7/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(63:7/null) setframe Frame(16)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(762),Device(0),Page(63:7/16),Diskblock(127),FileRead,Openfile(68:7/0),Thread(79:7/W1)) this Page(63:7/16)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(79:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(79:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(763),Device(1),Page(3:8/15),Diskblock(29),FileWrite,Openfile(106:8/1),Thread(77:8/W0)) this Page(3:8/15)
[Info][PageTableEntry][do_lock] Get frame Frame(15)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 116057/250000[PageTableEntry][do_unlock] this Page(3:8/15)
[PageTableEntry][do_unlock] this Page(46:8/18)
[PageFaultHandler][do_handlePageFault] thread Thread(87:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(63:7/16)
[PageFaultHandler][do_handlePageFault] thread Thread(79:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 54701 offset = 429 page no = 53 Thread(87:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(87:8/RU) 22 Page(53:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(16) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(53:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(63:7/16)
[PageFaultHandler][do_handlePageFault] Frame(16) is dirty, do swap-out, Thread(87:8/W0)
[PageFaultHandler][SwapOut] page Page(63:7/16) frame Frame(16)file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 63
[Info][PageTableEntry][do_lock] iorb IORB(Id(764),Device(0),Page(63:7/16),Diskblock(255),FileWrite,Openfile(82:8/0),Thread(87:8/W1)) this Page(63:7/16)
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 7765 offset = 597 page no = 7 Thread(79:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(79:7/RU) 22 Page(7:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(23) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(7:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(34:7/23)
[PageFaultHandler][do_handlePageFault] Frame(23) is dirty, do swap-out, Thread(79:7/W0)
[PageFaultHandler][SwapOut] page Page(34:7/23) frame Frame(23)file Openfile(68:7/0)
[PageFaultHandler][SwapOut] block no 34
[Info][PageTableEntry][do_lock] iorb IORB(Id(765),Device(0),Page(34:7/23),Diskblock(98),FileWrite,Openfile(68:7/0),Thread(79:7/W1)) this Page(34:7/23)
[Info][PageTableEntry][do_lock] Get frame Frame(23)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(63:7/16)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(16) Page(63:7/16)Thread(87:8/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(53:8/null) setframe Frame(16)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(766),Device(0),Page(53:8/16),Diskblock(245),FileRead,Openfile(82:8/0),Thread(87:8/W1)) this Page(53:8/16)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(87:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(87:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(34:7/23)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(23) Page(34:7/23)Thread(79:7/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(7:7/null) setframe Frame(23)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(767),Device(0),Page(7:7/23),Diskblock(71),FileRead,Openfile(68:7/0),Thread(79:7/W1)) this Page(7:7/23)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(79:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(79:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(23)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(768),Device(1),Page(2:7/8),Diskblock(11),FileRead,Openfile(108:7/1),Thread(65:7/W0)) this Page(2:7/8)
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(2:7/8)
[Info][PageTableEntry][do_lock] iorb IORB(Id(769),Device(1),Page(2:7/8),Diskblock(33),FileWrite,Openfile(108:7/1),Thread(65:7/W0)) this Page(2:7/8)
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(53:8/16)
[PageFaultHandler][do_handlePageFault] thread Thread(87:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 22919 offset = 391 page no = 22 Thread(87:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(87:8/RU) 22 Page(22:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(11) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(22:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(60:7/11)
[PageFaultHandler][do_handlePageFault] page Page(22:8/null) setframe Frame(11)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(770),Device(0),Page(22:8/11),Diskblock(214),FileRead,Openfile(82:8/0),Thread(87:8/W1)) this Page(22:8/11)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(87:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(87:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(11)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 117024/250000[PageTableEntry][do_unlock] this Page(2:7/8)
[PageTableEntry][do_unlock] this Page(7:7/23)
[PageFaultHandler][do_handlePageFault] thread Thread(79:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 42619 offset = 635 page no = 41 Thread(77:8/RU)
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(22:8/11)
[PageFaultHandler][do_handlePageFault] thread Thread(87:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 33918 offset = 126 page no = 33 Thread(65:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(65:7/RU) 21 Page(33:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(23) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(33:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(7:7/23)
[PageFaultHandler][do_handlePageFault] Frame(23) is dirty, do swap-out, Thread(65:7/W0)
[PageFaultHandler][SwapOut] page Page(7:7/23) frame Frame(23)file Openfile(68:7/0)
[PageFaultHandler][SwapOut] block no 7
[Info][PageTableEntry][do_lock] iorb IORB(Id(771),Device(0),Page(7:7/23),Diskblock(71),FileWrite,Openfile(68:7/0),Thread(65:7/W1)) this Page(7:7/23)
[Info][PageTableEntry][do_lock] Get frame Frame(23)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(7:7/23)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(23) Page(7:7/23)Thread(65:7/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(33:7/null) setframe Frame(23)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(772),Device(0),Page(33:7/23),Diskblock(97),FileRead,Openfile(68:7/0),Thread(65:7/W1)) this Page(33:7/23)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(65:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(65:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(23)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(773),Device(2),Page(3:8/15),Diskblock(3),FileRead,Openfile(112:8/2),Thread(87:8/W0)) this Page(3:8/15)
[Info][PageTableEntry][do_lock] Get frame Frame(15)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(774),Device(1),Page(2:7/8),Diskblock(29),FileWrite,Openfile(106:8/1),Thread(79:7/W0)) this Page(2:7/8)
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 38033 offset = 145 page no = 37 Thread(77:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(77:8/RU) 22 Page(37:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(1) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(37:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(42:7/1)
[PageFaultHandler][do_handlePageFault] Frame(1) is dirty, do swap-out, Thread(77:8/W0)
[PageFaultHandler][SwapOut] page Page(42:7/1) frame Frame(1)file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 42
[Info][PageTableEntry][do_lock] iorb IORB(Id(775),Device(0),Page(42:7/1),Diskblock(234),FileWrite,Openfile(82:8/0),Thread(77:8/W1)) this Page(42:7/1)
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(2:7/8)
[MMU][do_refer] address = 1591 offset = 567 page no = 1 Thread(79:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(79:7/RU) 22 Page(1:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(28) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(1:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(48:7/28)
[PageFaultHandler][do_handlePageFault] Frame(28) is dirty, do swap-out, Thread(79:7/W0)
[PageFaultHandler][SwapOut] page Page(48:7/28) frame Frame(28)file Openfile(68:7/0)
[PageFaultHandler][SwapOut] block no 48
[Info][PageTableEntry][do_lock] iorb IORB(Id(776),Device(0),Page(48:7/28),Diskblock(112),FileWrite,Openfile(68:7/0),Thread(79:7/W1)) this Page(48:7/28)
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(33:7/23)
[PageFaultHandler][do_handlePageFault] thread Thread(65:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 5413 offset = 293 page no = 5 Thread(65:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(65:7/RU) 22 Page(5:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(24) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(5:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(22:7/24)
[PageFaultHandler][do_handlePageFault] page Page(5:7/null) setframe Frame(24)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(777),Device(0),Page(5:7/24),Diskblock(69),FileRead,Openfile(68:7/0),Thread(65:7/W1)) this Page(5:7/24)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(65:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(65:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(24)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(42:7/1)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(1) Page(42:7/1)Thread(77:8/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(37:8/null) setframe Frame(1)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(778),Device(0),Page(37:8/1),Diskblock(229),FileRead,Openfile(82:8/0),Thread(77:8/W1)) this Page(37:8/1)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(77:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(77:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(48:7/28)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(28) Page(48:7/28)Thread(79:7/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(1:7/null) setframe Frame(28)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(779),Device(0),Page(1:7/28),Diskblock(65),FileRead,Openfile(68:7/0),Thread(79:7/W1)) this Page(1:7/28)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(79:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(79:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(5:7/24)
[PageFaultHandler][do_handlePageFault] thread Thread(65:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
Simulation progress: 118015/250000[MMU][do_refer] address = 23324 offset = 796 page no = 22 Thread(65:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(65:7/RU) 21 Page(22:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(2) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(22:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(28:7/2)
[PageFaultHandler][do_handlePageFault] page Page(22:7/null) setframe Frame(2)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(780),Device(0),Page(22:7/2),Diskblock(86),FileRead,Openfile(68:7/0),Thread(65:7/W1)) this Page(22:7/2)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(65:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(65:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(3:8/15)
[MMU][do_refer] address = 27415 offset = 791 page no = 26 Thread(89:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(89:8/RU) 21 Page(26:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(19) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(26:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(35:8/19)
[PageFaultHandler][do_handlePageFault] Frame(19) is dirty, do swap-out, Thread(89:8/W0)
[PageFaultHandler][SwapOut] page Page(35:8/19) frame Frame(19)file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 35
[Info][PageTableEntry][do_lock] iorb IORB(Id(781),Device(0),Page(35:8/19),Diskblock(227),FileWrite,Openfile(82:8/0),Thread(89:8/W1)) this Page(35:8/19)
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(37:8/1)
[PageFaultHandler][do_handlePageFault] thread Thread(77:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(1:7/28)
[PageFaultHandler][do_handlePageFault] thread Thread(79:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 51354 offset = 154 page no = 50 Thread(87:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(87:8/RU) 21 Page(50:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(1) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(50:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(37:8/1)
[PageFaultHandler][do_handlePageFault] Frame(1) is dirty, do swap-out, Thread(87:8/W0)
[PageFaultHandler][SwapOut] page Page(37:8/1) frame Frame(1)file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 37
[Info][PageTableEntry][do_lock] iorb IORB(Id(782),Device(0),Page(37:8/1),Diskblock(229),FileWrite,Openfile(82:8/0),Thread(87:8/W1)) this Page(37:8/1)
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(22:7/2)
[PageFaultHandler][do_handlePageFault] thread Thread(65:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 42265 offset = 281 page no = 41 Thread(65:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(65:7/RU) 22 Page(41:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(2) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(41:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(22:7/2)
[PageFaultHandler][do_handlePageFault] page Page(41:7/null) setframe Frame(2)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(783),Device(0),Page(41:7/2),Diskblock(105),FileRead,Openfile(68:7/0),Thread(65:7/W1)) this Page(41:7/2)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(65:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(65:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(35:8/19)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(19) Page(35:8/19)Thread(89:8/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(26:8/null) setframe Frame(19)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(784),Device(0),Page(26:8/19),Diskblock(218),FileRead,Openfile(82:8/0),Thread(89:8/W1)) this Page(26:8/19)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(89:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(89:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 25971 offset = 371 page no = 25 Thread(77:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(77:8/RU) 22 Page(25:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(22) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(25:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(59:8/22)
[PageFaultHandler][do_handlePageFault] page Page(25:8/null) setframe Frame(22)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(785),Device(0),Page(25:8/22),Diskblock(217),FileRead,Openfile(82:8/0),Thread(77:8/W1)) this Page(25:8/22)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(77:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(77:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(22)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(37:8/1)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(1) Page(37:8/1)Thread(87:8/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(50:8/null) setframe Frame(1)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(786),Device(0),Page(50:8/1),Diskblock(242),FileRead,Openfile(82:8/0),Thread(87:8/W1)) this Page(50:8/1)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(87:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(87:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(41:7/2)
[PageFaultHandler][do_handlePageFault] thread Thread(65:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[Info][PageTableEntry][do_lock] iorb IORB(Id(787),Device(1),Page(1:7/28),Diskblock(30),FileRead,Openfile(106:8/1),Thread(65:7/W0)) this Page(1:7/28)
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 119043/250000[PageTableEntry][do_unlock] this Page(1:7/28)
[PageTableEntry][do_unlock] this Page(26:8/19)
[PageFaultHandler][do_handlePageFault] thread Thread(89:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(25:8/22)
[PageFaultHandler][do_handlePageFault] thread Thread(77:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 45632 offset = 576 page no = 44 Thread(65:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(65:7/RU) 22 Page(44:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(22) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(44:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(25:8/22)
[PageFaultHandler][do_handlePageFault] Frame(22) is dirty, do swap-out, Thread(65:7/W0)
[PageFaultHandler][SwapOut] page Page(25:8/22) frame Frame(22)file Openfile(68:7/0)
[PageFaultHandler][SwapOut] block no 25
[Info][PageTableEntry][do_lock] iorb IORB(Id(788),Device(0),Page(25:8/22),Diskblock(89),FileWrite,Openfile(68:7/0),Thread(65:7/W1)) this Page(25:8/22)
[Info][PageTableEntry][do_lock] Get frame Frame(22)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 48181 offset = 53 page no = 47 Thread(90:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(90:7/RU) 22 Page(47:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(27) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(47:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(31:7/27)
[PageFaultHandler][do_handlePageFault] Frame(27) is dirty, do swap-out, Thread(90:7/W0)
[PageFaultHandler][SwapOut] page Page(31:7/27) frame Frame(27)file Openfile(68:7/0)
[PageFaultHandler][SwapOut] block no 31
[Info][PageTableEntry][do_lock] iorb IORB(Id(789),Device(0),Page(31:7/27),Diskblock(95),FileWrite,Openfile(68:7/0),Thread(90:7/W1)) this Page(31:7/27)
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(50:8/1)
[PageFaultHandler][do_handlePageFault] thread Thread(87:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(25:8/22)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(22) Page(25:8/22)Thread(65:7/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(44:7/null) setframe Frame(22)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(790),Device(0),Page(44:7/22),Diskblock(108),FileRead,Openfile(68:7/0),Thread(65:7/W1)) this Page(44:7/22)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(65:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(65:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(22)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(31:7/27)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(27) Page(31:7/27)Thread(90:7/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(47:7/null) setframe Frame(27)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(791),Device(0),Page(47:7/27),Diskblock(111),FileRead,Openfile(68:7/0),Thread(90:7/W1)) this Page(47:7/27)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(90:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(90:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 1948 offset = 924 page no = 1 Thread(88:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(88:8/RU) 22 Page(1:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(7) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(1:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(49:7/7)
[PageFaultHandler][do_handlePageFault] page Page(1:8/null) setframe Frame(7)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(792),Device(0),Page(1:8/7),Diskblock(193),FileRead,Openfile(82:8/0),Thread(88:8/W1)) this Page(1:8/7)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(88:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(88:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(7)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(44:7/22)
[PageFaultHandler][do_handlePageFault] thread Thread(65:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 58536 offset = 168 page no = 57 Thread(77:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(77:8/RU) 22 Page(57:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(22) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(57:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(44:7/22)
[PageFaultHandler][do_handlePageFault] Frame(22) is dirty, do swap-out, Thread(77:8/W0)
[PageFaultHandler][SwapOut] page Page(44:7/22) frame Frame(22)file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 44
[Info][PageTableEntry][do_lock] iorb IORB(Id(793),Device(0),Page(44:7/22),Diskblock(236),FileWrite,Openfile(82:8/0),Thread(77:8/W1)) this Page(44:7/22)
[Info][PageTableEntry][do_lock] Get frame Frame(22)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 4581 offset = 485 page no = 4 Thread(72:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(72:7/RU) 22 Page(4:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(9) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(4:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(62:7/9)
[PageFaultHandler][do_handlePageFault] Frame(9) is dirty, do swap-out, Thread(72:7/W0)
[PageFaultHandler][SwapOut] page Page(62:7/9) frame Frame(9)file Openfile(68:7/0)
[PageFaultHandler][SwapOut] block no 62
[Info][PageTableEntry][do_lock] iorb IORB(Id(794),Device(0),Page(62:7/9),Diskblock(126),FileWrite,Openfile(68:7/0),Thread(72:7/W1)) this Page(62:7/9)
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(47:7/27)
[PageFaultHandler][do_handlePageFault] thread Thread(90:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageCleanDaemon][unleash] osp.Memory.PageCleanDaemon@e14d43 execute time 120000
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(5)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(4)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(14)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(13)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(3)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(21)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(5)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(5) Page(16:7/5) isDirty true
[PageFaultHandler][SwapOut] file Openfile(68:7/0)
[PageFaultHandler][SwapOut] block no 16
[Info][PageTableEntry][do_lock] iorb IORB(Id(795),Device(0),Page(16:7/5),Diskblock(80),FileWrite,Openfile(68:7/0),Thread(91:0/W1)) this Page(16:7/5)
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 120042/250000[PageTableEntry][do_unlock] this Page(1:8/7)
[PageFaultHandler][do_handlePageFault] thread Thread(88:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 7327 offset = 159 page no = 7 Thread(89:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(89:8/RU) 22 Page(7:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(7) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(7:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(1:8/7)
[PageFaultHandler][do_handlePageFault] Frame(7) is dirty, do swap-out, Thread(89:8/W0)
[PageFaultHandler][SwapOut] page Page(1:8/7) frame Frame(7)file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 1
[Info][PageTableEntry][do_lock] iorb IORB(Id(796),Device(0),Page(1:8/7),Diskblock(193),FileWrite,Openfile(82:8/0),Thread(89:8/W1)) this Page(1:8/7)
[Info][PageTableEntry][do_lock] Get frame Frame(7)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(44:7/22)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(22) Page(44:7/22)Thread(77:8/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(57:8/null) setframe Frame(22)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(797),Device(0),Page(57:8/22),Diskblock(249),FileRead,Openfile(82:8/0),Thread(77:8/W1)) this Page(57:8/22)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(77:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(77:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(22)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 56641 offset = 321 page no = 55 Thread(88:8/RU)
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 17233 offset = 849 page no = 16 Thread(88:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(88:8/RU) 21 Page(16:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(17) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(16:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(32:8/17)
[PageFaultHandler][do_handlePageFault] page Page(16:8/null) setframe Frame(17)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(798),Device(0),Page(16:8/17),Diskblock(208),FileRead,Openfile(82:8/0),Thread(88:8/W1)) this Page(16:8/17)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(88:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(88:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(62:7/9)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(9) Page(62:7/9)Thread(72:7/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(4:7/null) setframe Frame(9)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(799),Device(0),Page(4:7/9),Diskblock(68),FileRead,Openfile(68:7/0),Thread(72:7/W1)) this Page(4:7/9)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(72:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(72:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 64055 offset = 567 page no = 62 Thread(65:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(65:7/RU) 22 Page(62:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(26) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(62:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(61:7/26)
[PageFaultHandler][do_handlePageFault] Frame(26) is dirty, do swap-out, Thread(65:7/W0)
[PageFaultHandler][SwapOut] page Page(61:7/26) frame Frame(26)file Openfile(68:7/0)
[PageFaultHandler][SwapOut] block no 61
[Info][PageTableEntry][do_lock] iorb IORB(Id(800),Device(0),Page(61:7/26),Diskblock(125),FileWrite,Openfile(68:7/0),Thread(65:7/W1)) this Page(61:7/26)
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(16:7/5)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(5) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(4)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(4) Page(8:8/4) isDirty true
[PageFaultHandler][SwapOut] file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 8
[Info][PageTableEntry][do_lock] iorb IORB(Id(801),Device(0),Page(8:8/4),Diskblock(200),FileWrite,Openfile(82:8/0),Thread(91:0/W1)) this Page(8:8/4)
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 39598 offset = 686 page no = 38 Thread(87:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(87:8/RU) 22 Page(38:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(29) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(38:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(33:8/29)
[PageFaultHandler][do_handlePageFault] Frame(29) is dirty, do swap-out, Thread(87:8/W0)
[PageFaultHandler][SwapOut] page Page(33:8/29) frame Frame(29)file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 33
[Info][PageTableEntry][do_lock] iorb IORB(Id(802),Device(0),Page(33:8/29),Diskblock(225),FileWrite,Openfile(82:8/0),Thread(87:8/W1)) this Page(33:8/29)
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 46365 offset = 285 page no = 45 Thread(90:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(90:7/RU) 21 Page(45:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(10) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(45:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(43:7/10)
[PageFaultHandler][do_handlePageFault] page Page(45:7/null) setframe Frame(10)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(803),Device(0),Page(45:7/10),Diskblock(109),FileRead,Openfile(68:7/0),Thread(90:7/W1)) this Page(45:7/10)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(90:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(90:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(10)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(1:8/7)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(7) Page(1:8/7)Thread(89:8/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(7:8/null) setframe Frame(7)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(804),Device(0),Page(7:8/7),Diskblock(199),FileRead,Openfile(82:8/0),Thread(89:8/W1)) this Page(7:8/7)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(89:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(89:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(7)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(57:8/22)
[PageFaultHandler][do_handlePageFault] thread Thread(77:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(16:8/17)
[PageFaultHandler][do_handlePageFault] thread Thread(88:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
Simulation progress: 121002/250000[MMU][do_refer] address = 10708 offset = 468 page no = 10 Thread(88:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(88:8/RU) 21 Page(10:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(17) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(10:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(16:8/17)
[PageFaultHandler][do_handlePageFault] page Page(10:8/null) setframe Frame(17)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(805),Device(0),Page(10:8/17),Diskblock(202),FileRead,Openfile(82:8/0),Thread(88:8/W1)) this Page(10:8/17)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(88:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(88:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(4:7/9)
[PageFaultHandler][do_handlePageFault] thread Thread(72:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 9741 offset = 525 page no = 9 Thread(72:7/RU)
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(61:7/26)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(26) Page(61:7/26)Thread(65:7/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(62:7/null) setframe Frame(26)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(806),Device(0),Page(62:7/26),Diskblock(126),FileRead,Openfile(68:7/0),Thread(65:7/W1)) this Page(62:7/26)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(65:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(65:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(8:8/4)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(4) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(14)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(14) Page(57:7/14) isDirty true
[PageFaultHandler][SwapOut] file Openfile(68:7/0)
[PageFaultHandler][SwapOut] block no 57
[Info][PageTableEntry][do_lock] iorb IORB(Id(807),Device(0),Page(57:7/14),Diskblock(121),FileWrite,Openfile(68:7/0),Thread(91:0/W1)) this Page(57:7/14)
[Info][PageTableEntry][do_lock] Get frame Frame(14)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(33:8/29)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(29) Page(33:8/29)Thread(87:8/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(38:8/null) setframe Frame(29)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(808),Device(0),Page(38:8/29),Diskblock(230),FileRead,Openfile(82:8/0),Thread(87:8/W1)) this Page(38:8/29)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(87:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(87:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(45:7/10)
[PageFaultHandler][do_handlePageFault] thread Thread(90:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 40700 offset = 764 page no = 39 Thread(90:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(90:7/RU) 21 Page(39:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(10) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(39:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(45:7/10)
[PageFaultHandler][do_handlePageFault] page Page(39:7/null) setframe Frame(10)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(809),Device(0),Page(39:7/10),Diskblock(103),FileRead,Openfile(68:7/0),Thread(90:7/W1)) this Page(39:7/10)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(90:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(90:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(10)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(7:8/7)
[PageFaultHandler][do_handlePageFault] thread Thread(89:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 9007 offset = 815 page no = 8 Thread(89:8/RU)
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(10:8/17)
[PageFaultHandler][do_handlePageFault] thread Thread(88:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
Simulation progress: 122003/250000[PageTableEntry][do_unlock] this Page(62:7/26)
[PageFaultHandler][do_handlePageFault] thread Thread(65:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 42451 offset = 467 page no = 41 Thread(89:8/RU)
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(57:7/14)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(14) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(13)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(13) Page(40:7/13) isDirty true
[PageFaultHandler][SwapOut] file Openfile(68:7/0)
[PageFaultHandler][SwapOut] block no 40
[Info][PageTableEntry][do_lock] iorb IORB(Id(810),Device(0),Page(40:7/13),Diskblock(104),FileWrite,Openfile(68:7/0),Thread(91:0/W1)) this Page(40:7/13)
[Info][PageTableEntry][do_lock] Get frame Frame(13)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 10949 offset = 709 page no = 10 Thread(88:8/RU)
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(38:8/29)
[PageFaultHandler][do_handlePageFault] thread Thread(87:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(39:7/10)
[PageFaultHandler][do_handlePageFault] thread Thread(90:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 5113 offset = 1017 page no = 4 Thread(65:7/RU)
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(40:7/13)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(13) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(3)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(3) Page(6:8/3) isDirty true
[PageFaultHandler][SwapOut] file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 6
[Info][PageTableEntry][do_lock] iorb IORB(Id(811),Device(0),Page(6:8/3),Diskblock(198),FileWrite,Openfile(82:8/0),Thread(91:0/W1)) this Page(6:8/3)
[Info][PageTableEntry][do_lock] Get frame Frame(3)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 31493 offset = 773 page no = 30 Thread(87:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(87:8/RU) 21 Page(30:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(7) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(30:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(7:8/7)
[PageFaultHandler][do_handlePageFault] Frame(7) is dirty, do swap-out, Thread(87:8/W0)
[PageFaultHandler][SwapOut] page Page(7:8/7) frame Frame(7)file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 7
[Info][PageTableEntry][do_lock] iorb IORB(Id(812),Device(0),Page(7:8/7),Diskblock(199),FileWrite,Openfile(82:8/0),Thread(87:8/W1)) this Page(7:8/7)
[Info][PageTableEntry][do_lock] Get frame Frame(7)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(6:8/3)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(3) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(21)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(21) Page(55:8/21) isDirty true
[PageFaultHandler][SwapOut] file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 55
[Info][PageTableEntry][do_lock] iorb IORB(Id(813),Device(0),Page(55:8/21),Diskblock(247),FileWrite,Openfile(82:8/0),Thread(91:0/W1)) this Page(55:8/21)
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(7:8/7)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(7) Page(7:8/7)Thread(87:8/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(30:8/null) setframe Frame(7)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(814),Device(0),Page(30:8/7),Diskblock(222),FileRead,Openfile(82:8/0),Thread(87:8/W1)) this Page(30:8/7)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(87:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(87:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(7)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 123020/250000[PageTableEntry][do_unlock] this Page(55:8/21)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(21) finish
[MMU][do_refer] address = 16203 offset = 843 page no = 15 Thread(88:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(88:8/RU) 21 Page(15:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(3) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(15:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(6:8/3)
[PageFaultHandler][do_handlePageFault] page Page(15:8/null) setframe Frame(3)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(815),Device(0),Page(15:8/3),Diskblock(207),FileRead,Openfile(82:8/0),Thread(88:8/W1)) this Page(15:8/3)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(88:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(88:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(3)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(30:8/7)
[PageFaultHandler][do_handlePageFault] thread Thread(87:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(15:8/3)
[PageFaultHandler][do_handlePageFault] thread Thread(88:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 27393 offset = 769 page no = 26 Thread(88:8/RU)
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 51053 offset = 877 page no = 49 Thread(88:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(88:8/RU) 21 Page(49:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(3) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(49:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(15:8/3)
[PageFaultHandler][do_handlePageFault] page Page(49:8/null) setframe Frame(3)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(816),Device(0),Page(49:8/3),Diskblock(241),FileRead,Openfile(82:8/0),Thread(88:8/W1)) this Page(49:8/3)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(88:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(88:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(3)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 30042 offset = 346 page no = 29 Thread(87:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(87:8/RU) 21 Page(29:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(26) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(29:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(62:7/26)
[PageFaultHandler][do_handlePageFault] Frame(26) is dirty, do swap-out, Thread(87:8/W0)
[PageFaultHandler][SwapOut] page Page(62:7/26) frame Frame(26)file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 62
[Info][PageTableEntry][do_lock] iorb IORB(Id(817),Device(0),Page(62:7/26),Diskblock(254),FileWrite,Openfile(82:8/0),Thread(87:8/W1)) this Page(62:7/26)
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 124006/250000[PageTableEntry][do_unlock] this Page(49:8/3)
[PageFaultHandler][do_handlePageFault] thread Thread(88:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 39113 offset = 201 page no = 38 Thread(92:11/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(92:11/RU) 22 Page(38:11/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(29) Reserved by Task(11/L)
[PageFaultHandler][do_handlePageFault] page Page(38:11/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(38:8/29)
[PageFaultHandler][do_handlePageFault] Frame(29) is dirty, do swap-out, Thread(92:11/W0)
[PageFaultHandler][SwapOut] page Page(38:8/29) frame Frame(29)file Openfile(118:11/0)
[PageFaultHandler][SwapOut] block no 38
[Info][PageTableEntry][do_lock] iorb IORB(Id(818),Device(0),Page(38:8/29),Diskblock(38),FileWrite,Openfile(118:11/0),Thread(92:11/W1)) this Page(38:8/29)
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 55359 offset = 63 page no = 54 Thread(65:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(65:7/RU) 22 Page(54:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(10) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(54:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(39:7/10)
[PageFaultHandler][do_handlePageFault] page Page(54:7/null) setframe Frame(10)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(819),Device(0),Page(54:7/10),Diskblock(118),FileRead,Openfile(68:7/0),Thread(65:7/W1)) this Page(54:7/10)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(65:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(65:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(10)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 62382 offset = 942 page no = 60 Thread(93:11/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(93:11/RU) 22 Page(60:11/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(25) Reserved by Task(11/L)
[PageFaultHandler][do_handlePageFault] page Page(60:11/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(26:7/25)
[PageFaultHandler][do_handlePageFault] page Page(60:11/null) setframe Frame(25)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(820),Device(0),Page(60:11/25),Diskblock(60),FileRead,Openfile(118:11/0),Thread(93:11/W1)) this Page(60:11/25)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(93:11/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(93:11/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(25)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(62:7/26)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(26) Page(62:7/26)Thread(87:8/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(29:8/null) setframe Frame(26)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(821),Device(0),Page(29:8/26),Diskblock(221),FileRead,Openfile(82:8/0),Thread(87:8/W1)) this Page(29:8/26)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(87:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(87:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 2005 offset = 981 page no = 1 Thread(94:12/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(94:12/RU) 22 Page(1:12/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(16) Reserved by Task(12/L)
[PageFaultHandler][do_handlePageFault] page Page(1:12/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(53:8/16)
[PageFaultHandler][do_handlePageFault] Frame(16) is dirty, do swap-out, Thread(94:12/W0)
[PageFaultHandler][SwapOut] page Page(53:8/16) frame Frame(16)file Openfile(124:12/0)
[PageFaultHandler][SwapOut] block no 53
[Info][PageTableEntry][do_lock] iorb IORB(Id(822),Device(0),Page(53:8/16),Diskblock(373),FileWrite,Openfile(124:12/0),Thread(94:12/W1)) this Page(53:8/16)
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 17700 offset = 292 page no = 17 Thread(88:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(88:8/RU) 21 Page(17:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(0) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(17:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(55:7/0)
[PageFaultHandler][do_handlePageFault] page Page(17:8/null) setframe Frame(0)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(823),Device(0),Page(17:8/0),Diskblock(209),FileRead,Openfile(82:8/0),Thread(88:8/W1)) this Page(17:8/0)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(88:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(88:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(38:8/29)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(29) Page(38:8/29)Thread(92:11/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(38:11/null) setframe Frame(29)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(824),Device(0),Page(38:11/29),Diskblock(38),FileRead,Openfile(118:11/0),Thread(92:11/W1)) this Page(38:11/29)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(92:11/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(92:11/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(54:7/10)
[PageFaultHandler][do_handlePageFault] thread Thread(65:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(60:11/25)
[PageFaultHandler][do_handlePageFault] thread Thread(93:11/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 4368 offset = 272 page no = 4 Thread(93:11/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(93:11/RU) 22 Page(4:11/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(25) Reserved by Task(11/L)
[PageFaultHandler][do_handlePageFault] page Page(4:11/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(60:11/25)
[PageFaultHandler][do_handlePageFault] Frame(25) is dirty, do swap-out, Thread(93:11/W0)
[PageFaultHandler][SwapOut] page Page(60:11/25) frame Frame(25)file Openfile(118:11/0)
[PageFaultHandler][SwapOut] block no 60
[Info][PageTableEntry][do_lock] iorb IORB(Id(825),Device(0),Page(60:11/25),Diskblock(60),FileWrite,Openfile(118:11/0),Thread(93:11/W1)) this Page(60:11/25)
[Info][PageTableEntry][do_lock] Get frame Frame(25)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(29:8/26)
[PageFaultHandler][do_handlePageFault] thread Thread(87:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
Simulation progress: 125020/250000[PageTableEntry][do_unlock] this Page(53:8/16)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(16) Page(53:8/16)Thread(94:12/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(1:12/null) setframe Frame(16)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(826),Device(0),Page(1:12/16),Diskblock(321),FileRead,Openfile(124:12/0),Thread(94:12/W1)) this Page(1:12/16)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(94:12/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(94:12/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(17:8/0)
[PageFaultHandler][do_handlePageFault] thread Thread(88:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(38:11/29)
[PageFaultHandler][do_handlePageFault] thread Thread(92:11/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 255 offset = 255 page no = 0 Thread(87:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(87:8/RU) 22 Page(0:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(26) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(0:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(29:8/26)
[PageFaultHandler][do_handlePageFault] page Page(0:8/null) setframe Frame(26)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(827),Device(0),Page(0:8/26),Diskblock(192),FileRead,Openfile(82:8/0),Thread(87:8/W1)) this Page(0:8/26)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(87:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(87:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(60:11/25)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(25) Page(60:11/25)Thread(93:11/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(4:11/null) setframe Frame(25)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(828),Device(0),Page(4:11/25),Diskblock(4),FileRead,Openfile(118:11/0),Thread(93:11/W1)) this Page(4:11/25)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(93:11/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(93:11/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(25)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 50740 offset = 564 page no = 49 Thread(85:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(85:7/RU) 21 Page(49:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(0) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(49:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(17:8/0)
[PageFaultHandler][do_handlePageFault] page Page(49:7/null) setframe Frame(0)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(829),Device(0),Page(49:7/0),Diskblock(113),FileRead,Openfile(68:7/0),Thread(85:7/W1)) this Page(49:7/0)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(85:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(85:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 24792 offset = 216 page no = 24 Thread(77:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(77:8/RU) 21 Page(24:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(23) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(24:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(33:7/23)
[PageFaultHandler][do_handlePageFault] page Page(24:8/null) setframe Frame(23)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(830),Device(0),Page(24:8/23),Diskblock(216),FileRead,Openfile(82:8/0),Thread(77:8/W1)) this Page(24:8/23)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(77:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(77:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(23)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(1:12/16)
[PageFaultHandler][do_handlePageFault] thread Thread(94:12/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(0:8/26)
[PageFaultHandler][do_handlePageFault] thread Thread(87:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 46433 offset = 353 page no = 45 Thread(94:12/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(94:12/RU) 21 Page(45:12/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(24) Reserved by Task(12/L)
[PageFaultHandler][do_handlePageFault] page Page(45:12/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(5:7/24)
[PageFaultHandler][do_handlePageFault] Frame(24) is dirty, do swap-out, Thread(94:12/W0)
[PageFaultHandler][SwapOut] page Page(5:7/24) frame Frame(24)file Openfile(124:12/0)
[PageFaultHandler][SwapOut] block no 5
[Info][PageTableEntry][do_lock] iorb IORB(Id(831),Device(0),Page(5:7/24),Diskblock(325),FileWrite,Openfile(124:12/0),Thread(94:12/W1)) this Page(5:7/24)
[Info][PageTableEntry][do_lock] Get frame Frame(24)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 126003/250000[MMU][do_refer] address = 4569 offset = 473 page no = 4 Thread(88:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(88:8/RU) 22 Page(4:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(8) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(4:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(2:7/8)
[PageFaultHandler][do_handlePageFault] Frame(8) is dirty, do swap-out, Thread(88:8/W0)
[PageFaultHandler][SwapOut] page Page(2:7/8) frame Frame(8)file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 2
[Info][PageTableEntry][do_lock] iorb IORB(Id(832),Device(0),Page(2:7/8),Diskblock(194),FileWrite,Openfile(82:8/0),Thread(88:8/W1)) this Page(2:7/8)
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(4:11/25)
[PageFaultHandler][do_handlePageFault] thread Thread(93:11/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(49:7/0)
[PageFaultHandler][do_handlePageFault] thread Thread(85:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[Info][PageTableEntry][do_lock] iorb IORB(Id(833),Device(1),Page(0:8/26),Diskblock(37),FileRead,Openfile(126:8/1),Thread(87:8/W0)) this Page(0:8/26)
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(24:8/23)
[PageFaultHandler][do_handlePageFault] thread Thread(77:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(0:8/26)
[MMU][do_refer] address = 20445 offset = 989 page no = 19 Thread(93:11/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(93:11/RU) 21 Page(19:11/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(0) Reserved by Task(11/L)
[PageFaultHandler][do_handlePageFault] page Page(19:11/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(49:7/0)
[PageFaultHandler][do_handlePageFault] page Page(19:11/null) setframe Frame(0)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(834),Device(0),Page(19:11/0),Diskblock(19),FileRead,Openfile(118:11/0),Thread(93:11/W1)) this Page(19:11/0)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(93:11/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(93:11/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(835),Device(1),Page(4:11/25),Diskblock(38),FileWrite,Openfile(126:8/1),Thread(92:11/W0)) this Page(4:11/25)
[Info][PageTableEntry][do_lock] Get frame Frame(25)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(5:7/24)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(24) Page(5:7/24)Thread(94:12/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(45:12/null) setframe Frame(24)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(836),Device(0),Page(45:12/24),Diskblock(365),FileRead,Openfile(124:12/0),Thread(94:12/W1)) this Page(45:12/24)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(94:12/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(94:12/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(24)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(4:11/25)
[PageTableEntry][do_unlock] this Page(2:7/8)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(8) Page(2:7/8)Thread(88:8/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(4:8/null) setframe Frame(8)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(837),Device(0),Page(4:8/8),Diskblock(196),FileRead,Openfile(82:8/0),Thread(88:8/W1)) this Page(4:8/8)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(88:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(88:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(838),Device(1),Page(0:8/26),Diskblock(38),FileRead,Openfile(126:8/1),Thread(87:8/W0)) this Page(0:8/26)
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 12300 offset = 12 page no = 12 Thread(92:11/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(92:11/RU) 21 Page(12:11/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(6) Reserved by Task(11/L)
[PageFaultHandler][do_handlePageFault] page Page(12:11/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(41:8/6)
[PageFaultHandler][do_handlePageFault] Frame(6) is dirty, do swap-out, Thread(92:11/W0)
[PageFaultHandler][SwapOut] page Page(41:8/6) frame Frame(6)file Openfile(118:11/0)
[PageFaultHandler][SwapOut] block no 41
[Info][PageTableEntry][do_lock] iorb IORB(Id(839),Device(0),Page(41:8/6),Diskblock(41),FileWrite,Openfile(118:11/0),Thread(92:11/W1)) this Page(41:8/6)
[Info][PageTableEntry][do_lock] Get frame Frame(6)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 44400 offset = 368 page no = 43 Thread(85:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(85:7/RU) 22 Page(43:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(12) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(43:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(35:7/12)
[PageFaultHandler][do_handlePageFault] Frame(12) is dirty, do swap-out, Thread(85:7/W0)
[PageFaultHandler][SwapOut] page Page(35:7/12) frame Frame(12)file Openfile(68:7/0)
[PageFaultHandler][SwapOut] block no 35
[Info][PageTableEntry][do_lock] iorb IORB(Id(840),Device(0),Page(35:7/12),Diskblock(99),FileWrite,Openfile(68:7/0),Thread(85:7/W1)) this Page(35:7/12)
[Info][PageTableEntry][do_lock] Get frame Frame(12)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(0:8/26)
[PageTableEntry][do_unlock] this Page(19:11/0)
[PageFaultHandler][do_handlePageFault] thread Thread(93:11/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
Simulation progress: 127106/250000[MMU][do_refer] address = 6783 offset = 639 page no = 6 Thread(93:11/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(93:11/RU) 22 Page(6:11/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(1) Reserved by Task(11/L)
[PageFaultHandler][do_handlePageFault] page Page(6:11/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(50:8/1)
[PageFaultHandler][do_handlePageFault] page Page(6:11/null) setframe Frame(1)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(841),Device(0),Page(6:11/1),Diskblock(6),FileRead,Openfile(118:11/0),Thread(93:11/W1)) this Page(6:11/1)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(93:11/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(93:11/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 3334 offset = 262 page no = 3 Thread(77:8/RU)
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(45:12/24)
[PageFaultHandler][do_handlePageFault] thread Thread(94:12/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(4:8/8)
[PageFaultHandler][do_handlePageFault] thread Thread(88:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 36947 offset = 83 page no = 36 Thread(94:12/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(94:12/RU) 22 Page(36:12/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(8) Reserved by Task(12/L)
[PageFaultHandler][do_handlePageFault] page Page(36:12/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(4:8/8)
[PageFaultHandler][do_handlePageFault] Frame(8) is dirty, do swap-out, Thread(94:12/W0)
[PageFaultHandler][SwapOut] page Page(4:8/8) frame Frame(8)file Openfile(124:12/0)
[PageFaultHandler][SwapOut] block no 4
[Info][PageTableEntry][do_lock] iorb IORB(Id(842),Device(0),Page(4:8/8),Diskblock(324),FileWrite,Openfile(124:12/0),Thread(94:12/W1)) this Page(4:8/8)
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(41:8/6)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(6) Page(41:8/6)Thread(92:11/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(12:11/null) setframe Frame(6)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(843),Device(0),Page(12:11/6),Diskblock(12),FileRead,Openfile(118:11/0),Thread(92:11/W1)) this Page(12:11/6)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(92:11/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(92:11/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(6)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(35:7/12)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(12) Page(35:7/12)Thread(85:7/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(43:7/null) setframe Frame(12)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(844),Device(0),Page(43:7/12),Diskblock(107),FileRead,Openfile(68:7/0),Thread(85:7/W1)) this Page(43:7/12)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(85:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(85:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(12)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(845),Device(1),Page(0:8/26),Diskblock(38),FileRead,Openfile(126:8/1),Thread(87:8/W0)) this Page(0:8/26)
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(6:11/1)
[PageFaultHandler][do_handlePageFault] thread Thread(93:11/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(0:8/26)
[MMU][do_refer] address = 1138 offset = 114 page no = 1 Thread(93:11/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(93:11/RU) 22 Page(1:11/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(1) Reserved by Task(11/L)
[PageFaultHandler][do_handlePageFault] page Page(1:11/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(6:11/1)
[PageFaultHandler][do_handlePageFault] Frame(1) is dirty, do swap-out, Thread(93:11/W0)
[PageFaultHandler][SwapOut] page Page(6:11/1) frame Frame(1)file Openfile(118:11/0)
[PageFaultHandler][SwapOut] block no 6
[Info][PageTableEntry][do_lock] iorb IORB(Id(846),Device(0),Page(6:11/1),Diskblock(6),FileWrite,Openfile(118:11/0),Thread(93:11/W1)) this Page(6:11/1)
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 128003/250000[Info][PageTableEntry][do_lock] iorb IORB(Id(847),Device(1),Page(0:8/26),Diskblock(27),FileWrite,Openfile(128:8/1),Thread(77:8/W0)) this Page(0:8/26)
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(848),Device(1),Page(3:8/15),Diskblock(27),FileRead,Openfile(128:8/1),Thread(87:8/W0)) this Page(3:8/15)
[Info][PageTableEntry][do_lock] Get frame Frame(15)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(0:8/26)
[MMU][do_refer] address = 40823 offset = 887 page no = 39 Thread(77:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(77:8/RU) 22 Page(39:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(5) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(39:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(16:7/5)
[PageFaultHandler][do_handlePageFault] page Page(39:8/null) setframe Frame(5)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(849),Device(0),Page(39:8/5),Diskblock(231),FileRead,Openfile(82:8/0),Thread(77:8/W1)) this Page(39:8/5)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(77:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(77:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(3:8/15)
[MMU][do_refer] address = 60145 offset = 753 page no = 58 Thread(87:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(87:8/RU) 21 Page(58:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(22) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(58:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(57:8/22)
[PageFaultHandler][do_handlePageFault] Frame(22) is dirty, do swap-out, Thread(87:8/W0)
[PageFaultHandler][SwapOut] page Page(57:8/22) frame Frame(22)file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 57
[Info][PageTableEntry][do_lock] iorb IORB(Id(850),Device(0),Page(57:8/22),Diskblock(249),FileWrite,Openfile(82:8/0),Thread(87:8/W1)) this Page(57:8/22)
[Info][PageTableEntry][do_lock] Get frame Frame(22)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(4:8/8)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(8) Page(4:8/8)Thread(94:12/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(36:12/null) setframe Frame(8)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(851),Device(0),Page(36:12/8),Diskblock(356),FileRead,Openfile(124:12/0),Thread(94:12/W1)) this Page(36:12/8)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(94:12/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(94:12/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(12:11/6)
[PageFaultHandler][do_handlePageFault] thread Thread(92:11/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(43:7/12)
[PageFaultHandler][do_handlePageFault] thread Thread(85:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(6:11/1)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(1) Page(6:11/1)Thread(93:11/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(1:11/null) setframe Frame(1)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(852),Device(0),Page(1:11/1),Diskblock(1),FileRead,Openfile(118:11/0),Thread(93:11/W1)) this Page(1:11/1)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(93:11/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(93:11/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(853),Device(1),Page(1:7/28),Diskblock(17),FileRead,Openfile(128:8/1),Thread(85:7/W0)) this Page(1:7/28)
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(1:7/28)
Simulation progress: 129007/250000[PageTableEntry][do_unlock] this Page(39:8/5)
[PageFaultHandler][do_handlePageFault] thread Thread(77:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 23967 offset = 415 page no = 23 Thread(85:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(85:7/RU) 21 Page(23:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(6) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(23:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(12:11/6)
[PageFaultHandler][do_handlePageFault] page Page(23:7/null) setframe Frame(6)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(854),Device(0),Page(23:7/6),Diskblock(87),FileRead,Openfile(68:7/0),Thread(85:7/W1)) this Page(23:7/6)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(85:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(85:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(6)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(57:8/22)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(22) Page(57:8/22)Thread(87:8/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(58:8/null) setframe Frame(22)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(855),Device(0),Page(58:8/22),Diskblock(250),FileRead,Openfile(82:8/0),Thread(87:8/W1)) this Page(58:8/22)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(87:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(87:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(22)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 28938 offset = 266 page no = 28 Thread(88:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(88:8/RU) 21 Page(28:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(5) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(28:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(39:8/5)
[PageFaultHandler][do_handlePageFault] Frame(5) is dirty, do swap-out, Thread(88:8/W0)
[PageFaultHandler][SwapOut] page Page(39:8/5) frame Frame(5)file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 39
[Info][PageTableEntry][do_lock] iorb IORB(Id(856),Device(0),Page(39:8/5),Diskblock(231),FileWrite,Openfile(82:8/0),Thread(88:8/W1)) this Page(39:8/5)
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(36:12/8)
[PageFaultHandler][do_handlePageFault] thread Thread(94:12/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 11788 offset = 524 page no = 11 Thread(82:10/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(82:10/RU) 21 Page(11:10/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(14) Reserved by Task(10/L)
[PageFaultHandler][do_handlePageFault] page Page(11:10/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(57:7/14)
[PageFaultHandler][do_handlePageFault] page Page(11:10/null) setframe Frame(14)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(857),Device(0),Page(11:10/14),Diskblock(267),FileRead,Openfile(96:10/0),Thread(82:10/W1)) this Page(11:10/14)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(82:10/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(82:10/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(14)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 58996 offset = 628 page no = 57 Thread(94:12/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(94:12/RU) 22 Page(57:12/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(18) Reserved by Task(12/L)
[PageFaultHandler][do_handlePageFault] page Page(57:12/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(46:8/18)
[PageFaultHandler][do_handlePageFault] Frame(18) is dirty, do swap-out, Thread(94:12/W0)
[PageFaultHandler][SwapOut] page Page(46:8/18) frame Frame(18)file Openfile(124:12/0)
[PageFaultHandler][SwapOut] block no 46
[Info][PageTableEntry][do_lock] iorb IORB(Id(858),Device(0),Page(46:8/18),Diskblock(366),FileWrite,Openfile(124:12/0),Thread(94:12/W1)) this Page(46:8/18)
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 40999 offset = 39 page no = 40 Thread(77:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(77:8/RU) 22 Page(40:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(17) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(40:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(10:8/17)
[PageFaultHandler][do_handlePageFault] page Page(40:8/null) setframe Frame(17)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(859),Device(0),Page(40:8/17),Diskblock(232),FileRead,Openfile(82:8/0),Thread(77:8/W1)) this Page(40:8/17)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(77:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(77:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(1:11/1)
[PageFaultHandler][do_handlePageFault] thread Thread(93:11/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(23:7/6)
[PageFaultHandler][do_handlePageFault] thread Thread(85:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 62857 offset = 393 page no = 61 Thread(93:11/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(93:11/RU) 21 Page(61:11/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(6) Reserved by Task(11/L)
[PageFaultHandler][do_handlePageFault] page Page(61:11/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(23:7/6)
[PageFaultHandler][do_handlePageFault] page Page(61:11/null) setframe Frame(6)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(860),Device(0),Page(61:11/6),Diskblock(61),FileRead,Openfile(118:11/0),Thread(93:11/W1)) this Page(61:11/6)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(93:11/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(93:11/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(6)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 130001/250000[PageTableEntry][do_unlock] this Page(58:8/22)
[PageFaultHandler][do_handlePageFault] thread Thread(87:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 39045 offset = 133 page no = 38 Thread(87:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(87:8/RU) 22 Page(38:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(13) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(38:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(40:7/13)
[PageFaultHandler][do_handlePageFault] page Page(38:8/null) setframe Frame(13)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(861),Device(0),Page(38:8/13),Diskblock(230),FileRead,Openfile(82:8/0),Thread(87:8/W1)) this Page(38:8/13)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(87:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(87:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(13)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(39:8/5)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(5) Page(39:8/5)Thread(88:8/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(28:8/null) setframe Frame(5)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(862),Device(0),Page(28:8/5),Diskblock(220),FileRead,Openfile(82:8/0),Thread(88:8/W1)) this Page(28:8/5)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(88:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(88:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(11:10/14)
[PageFaultHandler][do_handlePageFault] thread Thread(82:10/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[Info][PageTableEntry][do_lock] iorb IORB(Id(863),Device(2),Page(0:10/null),Diskblock(3),FileRead,Openfile(130:11/2),Thread(82:10/W0)) this Page(0:10/null)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] requrest_thread = Thread(82:10/W0)
[Info][PageTableEntry][do_lock] validating_thread is null, handlePageFault
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(82:10/W0) 23 Page(0:10/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(11) Reserved by Task(10/L)
[PageFaultHandler][do_handlePageFault] page Page(0:10/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(22:8/11)
[PageFaultHandler][do_handlePageFault] Frame(11) is dirty, do swap-out, Thread(82:10/W1)
[PageFaultHandler][SwapOut] page Page(22:8/11) frame Frame(11)file Openfile(96:10/0)
[PageFaultHandler][SwapOut] block no 22
[Info][PageTableEntry][do_lock] iorb IORB(Id(864),Device(0),Page(22:8/11),Diskblock(278),FileWrite,Openfile(96:10/0),Thread(82:10/W2)) this Page(22:8/11)
[Info][PageTableEntry][do_lock] Get frame Frame(11)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(46:8/18)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(18) Page(46:8/18)Thread(94:12/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(57:12/null) setframe Frame(18)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(865),Device(0),Page(57:12/18),Diskblock(377),FileRead,Openfile(124:12/0),Thread(94:12/W1)) this Page(57:12/18)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(94:12/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(94:12/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(40:8/17)
[PageFaultHandler][do_handlePageFault] thread Thread(77:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
Simulation progress: 131019/250000[MMU][do_refer] address = 29956 offset = 260 page no = 29 Thread(77:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(77:8/RU) 21 Page(29:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(7) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(29:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(30:8/7)
[PageFaultHandler][do_handlePageFault] page Page(29:8/null) setframe Frame(7)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(866),Device(0),Page(29:8/7),Diskblock(221),FileRead,Openfile(82:8/0),Thread(77:8/W1)) this Page(29:8/7)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(77:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(77:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(7)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(61:11/6)
[PageFaultHandler][do_handlePageFault] thread Thread(93:11/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 2525 offset = 477 page no = 2 Thread(92:11/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(92:11/RU) 22 Page(2:11/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(21) Reserved by Task(11/L)
[PageFaultHandler][do_handlePageFault] page Page(2:11/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(55:8/21)
[PageFaultHandler][do_handlePageFault] page Page(2:11/null) setframe Frame(21)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(867),Device(0),Page(2:11/21),Diskblock(2),FileRead,Openfile(118:11/0),Thread(92:11/W1)) this Page(2:11/21)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(92:11/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(92:11/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(38:8/13)
[PageFaultHandler][do_handlePageFault] thread Thread(87:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(28:8/5)
[PageFaultHandler][do_handlePageFault] thread Thread(88:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(22:8/11)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(11) Page(22:8/11)Thread(82:10/W1) finish
[PageFaultHandler][do_handlePageFault] page Page(0:10/null) setframe Frame(11)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(868),Device(0),Page(0:10/11),Diskblock(256),FileRead,Openfile(96:10/0),Thread(82:10/W2)) this Page(0:10/11)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(82:10/W2)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(82:10/W2)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(11)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 132020/250000[PageTableEntry][do_unlock] this Page(57:12/18)
[PageFaultHandler][do_handlePageFault] thread Thread(94:12/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(29:8/7)
[PageFaultHandler][do_handlePageFault] thread Thread(77:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(2:11/21)
[PageFaultHandler][do_handlePageFault] thread Thread(92:11/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(0:10/11)
[PageFaultHandler][do_handlePageFault] thread Thread(82:10/W1) status = 31
 Thread do_handlePageFault Success
[Info][PageTableEntry][do_lock] Get frame Frame(11)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 61972 offset = 532 page no = 60 Thread(92:11/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(92:11/RU) 22 Page(60:11/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(18) Reserved by Task(11/L)
[PageFaultHandler][do_handlePageFault] page Page(60:11/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(57:12/18)
[PageFaultHandler][do_handlePageFault] Frame(18) is dirty, do swap-out, Thread(92:11/W0)
[PageFaultHandler][SwapOut] page Page(57:12/18) frame Frame(18)file Openfile(118:11/0)
[PageFaultHandler][SwapOut] block no 57
[Info][PageTableEntry][do_lock] iorb IORB(Id(869),Device(0),Page(57:12/18),Diskblock(57),FileWrite,Openfile(118:11/0),Thread(92:11/W1)) this Page(57:12/18)
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 14777 offset = 441 page no = 14 Thread(90:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(90:7/RU) 21 Page(14:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(13) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(14:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(38:8/13)
[PageFaultHandler][do_handlePageFault] Frame(13) is dirty, do swap-out, Thread(90:7/W0)
[PageFaultHandler][SwapOut] page Page(38:8/13) frame Frame(13)file Openfile(68:7/0)
[PageFaultHandler][SwapOut] block no 38
[Info][PageTableEntry][do_lock] iorb IORB(Id(870),Device(0),Page(38:8/13),Diskblock(102),FileWrite,Openfile(68:7/0),Thread(90:7/W1)) this Page(38:8/13)
[Info][PageTableEntry][do_lock] Get frame Frame(13)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(0:10/11)
Simulation progress: 133055/250000[PageTableEntry][do_unlock] this Page(57:12/18)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(18) Page(57:12/18)Thread(92:11/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(60:11/null) setframe Frame(18)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(871),Device(0),Page(60:11/18),Diskblock(60),FileRead,Openfile(118:11/0),Thread(92:11/W1)) this Page(60:11/18)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(92:11/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(92:11/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 23226 offset = 698 page no = 22 Thread(82:10/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(82:10/RU) 21 Page(22:10/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(21) Reserved by Task(10/L)
[PageFaultHandler][do_handlePageFault] page Page(22:10/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(2:11/21)
[PageFaultHandler][do_handlePageFault] Frame(21) is dirty, do swap-out, Thread(82:10/W0)
[PageFaultHandler][SwapOut] page Page(2:11/21) frame Frame(21)file Openfile(96:10/0)
[PageFaultHandler][SwapOut] block no 2
[Info][PageTableEntry][do_lock] iorb IORB(Id(872),Device(0),Page(2:11/21),Diskblock(258),FileWrite,Openfile(96:10/0),Thread(82:10/W1)) this Page(2:11/21)
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(38:8/13)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(13) Page(38:8/13)Thread(90:7/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(14:7/null) setframe Frame(13)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(873),Device(0),Page(14:7/13),Diskblock(78),FileRead,Openfile(68:7/0),Thread(90:7/W1)) this Page(14:7/13)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(90:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(90:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(13)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(60:11/18)
[PageFaultHandler][do_handlePageFault] thread Thread(92:11/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 49608 offset = 456 page no = 48 Thread(89:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(89:8/RU) 22 Page(48:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(28) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(48:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(1:7/28)
[PageFaultHandler][do_handlePageFault] Frame(28) is dirty, do swap-out, Thread(89:8/W0)
[PageFaultHandler][SwapOut] page Page(1:7/28) frame Frame(28)file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 1
[Info][PageTableEntry][do_lock] iorb IORB(Id(874),Device(0),Page(1:7/28),Diskblock(193),FileWrite,Openfile(82:8/0),Thread(89:8/W1)) this Page(1:7/28)
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(2:11/21)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(21) Page(2:11/21)Thread(82:10/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(22:10/null) setframe Frame(21)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(875),Device(0),Page(22:10/21),Diskblock(278),FileRead,Openfile(96:10/0),Thread(82:10/W1)) this Page(22:10/21)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(82:10/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(82:10/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(14:7/13)
[PageFaultHandler][do_handlePageFault] thread Thread(90:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 40330 offset = 394 page no = 39 Thread(77:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(77:8/RU) 21 Page(39:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(13) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(39:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(14:7/13)
[PageFaultHandler][do_handlePageFault] page Page(39:8/null) setframe Frame(13)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(876),Device(0),Page(39:8/13),Diskblock(231),FileRead,Openfile(82:8/0),Thread(77:8/W1)) this Page(39:8/13)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(77:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(77:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(13)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 3940 offset = 868 page no = 3 Thread(92:11/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(92:11/RU) 22 Page(3:11/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(25) Reserved by Task(11/L)
[PageFaultHandler][do_handlePageFault] page Page(3:11/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(4:11/25)
[PageFaultHandler][do_handlePageFault] Frame(25) is dirty, do swap-out, Thread(92:11/W0)
[PageFaultHandler][SwapOut] page Page(4:11/25) frame Frame(25)file Openfile(118:11/0)
[PageFaultHandler][SwapOut] block no 4
[Info][PageTableEntry][do_lock] iorb IORB(Id(877),Device(0),Page(4:11/25),Diskblock(4),FileWrite,Openfile(118:11/0),Thread(92:11/W1)) this Page(4:11/25)
[Info][PageTableEntry][do_lock] Get frame Frame(25)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 49772 offset = 620 page no = 48 Thread(96:8/RU)
[PageTableEntry][do_unlock] this Page(1:7/28)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(28) Page(1:7/28)Thread(89:8/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(48:8/null) setframe Frame(28)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(878),Device(0),Page(48:8/28),Diskblock(240),FileRead,Openfile(82:8/0),Thread(89:8/W1)) this Page(48:8/28)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(89:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(89:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 54029 offset = 781 page no = 52 Thread(97:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(97:8/RU) 22 Page(52:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(19) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(52:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(26:8/19)
[PageFaultHandler][do_handlePageFault] page Page(52:8/null) setframe Frame(19)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(879),Device(0),Page(52:8/19),Diskblock(244),FileRead,Openfile(82:8/0),Thread(97:8/W1)) this Page(52:8/19)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(97:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(97:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 134070/250000[PageTableEntry][do_unlock] this Page(22:10/21)
[PageFaultHandler][do_handlePageFault] thread Thread(82:10/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 16094 offset = 734 page no = 15 Thread(82:10/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(82:10/RU) 22 Page(15:10/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(26) Reserved by Task(10/L)
[PageFaultHandler][do_handlePageFault] page Page(15:10/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(0:8/26)
[PageFaultHandler][do_handlePageFault] Frame(26) is dirty, do swap-out, Thread(82:10/W0)
[PageFaultHandler][SwapOut] page Page(0:8/26) frame Frame(26)file Openfile(96:10/0)
[PageFaultHandler][SwapOut] block no 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(880),Device(0),Page(0:8/26),Diskblock(256),FileWrite,Openfile(96:10/0),Thread(82:10/W1)) this Page(0:8/26)
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(39:8/13)
[PageFaultHandler][do_handlePageFault] thread Thread(77:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(4:11/25)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(25) Page(4:11/25)Thread(92:11/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(3:11/null) setframe Frame(25)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(881),Device(0),Page(3:11/25),Diskblock(3),FileRead,Openfile(118:11/0),Thread(92:11/W1)) this Page(3:11/25)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(92:11/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(92:11/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(25)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(48:8/28)
[PageFaultHandler][do_handlePageFault] thread Thread(89:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 11960 offset = 696 page no = 11 Thread(96:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(96:8/RU) 21 Page(11:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(28) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(11:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(48:8/28)
[PageFaultHandler][do_handlePageFault] Frame(28) is dirty, do swap-out, Thread(96:8/W0)
[PageFaultHandler][SwapOut] page Page(48:8/28) frame Frame(28)file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 48
[Info][PageTableEntry][do_lock] iorb IORB(Id(882),Device(0),Page(48:8/28),Diskblock(240),FileWrite,Openfile(82:8/0),Thread(96:8/W1)) this Page(48:8/28)
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 34147 offset = 355 page no = 33 Thread(87:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(87:8/RU) 22 Page(33:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(24) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(33:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(45:12/24)
[PageFaultHandler][do_handlePageFault] page Page(33:8/null) setframe Frame(24)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(883),Device(0),Page(33:8/24),Diskblock(225),FileRead,Openfile(82:8/0),Thread(87:8/W1)) this Page(33:8/24)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(87:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(87:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(24)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(52:8/19)
[PageFaultHandler][do_handlePageFault] thread Thread(97:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
Simulation progress: 135059/250000[MMU][do_refer] address = 9568 offset = 352 page no = 9 Thread(97:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(97:8/RU) 22 Page(9:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(19) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(9:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(52:8/19)
[PageFaultHandler][do_handlePageFault] Frame(19) is dirty, do swap-out, Thread(97:8/W0)
[PageFaultHandler][SwapOut] page Page(52:8/19) frame Frame(19)file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 52
[Info][PageTableEntry][do_lock] iorb IORB(Id(884),Device(0),Page(52:8/19),Diskblock(244),FileWrite,Openfile(82:8/0),Thread(97:8/W1)) this Page(52:8/19)
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(0:8/26)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(26) Page(0:8/26)Thread(82:10/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(15:10/null) setframe Frame(26)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(885),Device(0),Page(15:10/26),Diskblock(271),FileRead,Openfile(96:10/0),Thread(82:10/W1)) this Page(15:10/26)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(82:10/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(82:10/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(3:11/25)
[PageFaultHandler][do_handlePageFault] thread Thread(92:11/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(48:8/28)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(28) Page(48:8/28)Thread(96:8/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(11:8/null) setframe Frame(28)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(886),Device(0),Page(11:8/28),Diskblock(203),FileRead,Openfile(82:8/0),Thread(96:8/W1)) this Page(11:8/28)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(96:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(96:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(33:8/24)
[PageFaultHandler][do_handlePageFault] thread Thread(87:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(52:8/19)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(19) Page(52:8/19)Thread(97:8/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(9:8/null) setframe Frame(19)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(887),Device(0),Page(9:8/19),Diskblock(201),FileRead,Openfile(82:8/0),Thread(97:8/W1)) this Page(9:8/19)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(97:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(97:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 136001/250000[Info][PageTableEntry][do_lock] iorb IORB(Id(888),Device(1),Page(0:11/null),Diskblock(15),FileRead,Openfile(134:11/1),Thread(92:11/W0)) this Page(0:11/null)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] requrest_thread = Thread(92:11/W0)
[Info][PageTableEntry][do_lock] validating_thread is null, handlePageFault
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(92:11/W0) 23 Page(0:11/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(0) Reserved by Task(11/L)
[PageFaultHandler][do_handlePageFault] page Page(0:11/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(19:11/0)
[PageFaultHandler][do_handlePageFault] page Page(0:11/null) setframe Frame(0)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(889),Device(0),Page(0:11/0),Diskblock(0),FileRead,Openfile(118:11/0),Thread(92:11/W2)) this Page(0:11/0)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(92:11/W2)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(92:11/W2)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 58520 offset = 152 page no = 57 Thread(87:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(87:8/RU) 21 Page(57:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(12) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(57:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(43:7/12)
[PageFaultHandler][do_handlePageFault] Frame(12) is dirty, do swap-out, Thread(87:8/W0)
[PageFaultHandler][SwapOut] page Page(43:7/12) frame Frame(12)file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 43
[Info][PageTableEntry][do_lock] iorb IORB(Id(890),Device(0),Page(43:7/12),Diskblock(235),FileWrite,Openfile(82:8/0),Thread(87:8/W1)) this Page(43:7/12)
[Info][PageTableEntry][do_lock] Get frame Frame(12)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(15:10/26)
[PageFaultHandler][do_handlePageFault] thread Thread(82:10/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 19246 offset = 814 page no = 18 Thread(95:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(95:8/RU) 21 Page(18:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(27) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(18:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(47:7/27)
[PageFaultHandler][do_handlePageFault] Frame(27) is dirty, do swap-out, Thread(95:8/W0)
[PageFaultHandler][SwapOut] page Page(47:7/27) frame Frame(27)file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 47
[Info][PageTableEntry][do_lock] iorb IORB(Id(891),Device(0),Page(47:7/27),Diskblock(239),FileWrite,Openfile(82:8/0),Thread(95:8/W1)) this Page(47:7/27)
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(11:8/28)
[PageFaultHandler][do_handlePageFault] thread Thread(96:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 61546 offset = 106 page no = 60 Thread(88:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(88:8/RU) 21 Page(60:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(9) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(60:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(4:7/9)
[PageFaultHandler][do_handlePageFault] Frame(9) is dirty, do swap-out, Thread(88:8/W0)
[PageFaultHandler][SwapOut] page Page(4:7/9) frame Frame(9)file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 4
[Info][PageTableEntry][do_lock] iorb IORB(Id(892),Device(0),Page(4:7/9),Diskblock(196),FileWrite,Openfile(82:8/0),Thread(88:8/W1)) this Page(4:7/9)
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(9:8/19)
[PageFaultHandler][do_handlePageFault] thread Thread(97:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 37603 offset = 739 page no = 36 Thread(89:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(89:8/RU) 22 Page(36:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(19) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(36:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(9:8/19)
[PageFaultHandler][do_handlePageFault] Frame(19) is dirty, do swap-out, Thread(89:8/W0)
[PageFaultHandler][SwapOut] page Page(9:8/19) frame Frame(19)file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 9
[Info][PageTableEntry][do_lock] iorb IORB(Id(893),Device(0),Page(9:8/19),Diskblock(201),FileWrite,Openfile(82:8/0),Thread(89:8/W1)) this Page(9:8/19)
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(0:11/0)
[PageFaultHandler][do_handlePageFault] thread Thread(92:11/W1) status = 31
 Thread do_handlePageFault Success
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(0:11/0)
[MMU][do_refer] address = 48777 offset = 649 page no = 47 Thread(98:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(98:8/RU) 22 Page(47:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(1) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(47:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(1:11/1)
[PageFaultHandler][do_handlePageFault] Frame(1) is dirty, do swap-out, Thread(98:8/W0)
[PageFaultHandler][SwapOut] page Page(1:11/1) frame Frame(1)file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 1
[Info][PageTableEntry][do_lock] iorb IORB(Id(894),Device(0),Page(1:11/1),Diskblock(193),FileWrite,Openfile(82:8/0),Thread(98:8/W1)) this Page(1:11/1)
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 39721 offset = 809 page no = 38 Thread(82:10/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(82:10/RU) 22 Page(38:10/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(22) Reserved by Task(10/L)
[PageFaultHandler][do_handlePageFault] page Page(38:10/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(58:8/22)
[PageFaultHandler][do_handlePageFault] page Page(38:10/null) setframe Frame(22)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(895),Device(0),Page(38:10/22),Diskblock(294),FileRead,Openfile(96:10/0),Thread(82:10/W1)) this Page(38:10/22)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(82:10/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(82:10/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(22)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(43:7/12)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(12) Page(43:7/12)Thread(87:8/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(57:8/null) setframe Frame(12)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(896),Device(0),Page(57:8/12),Diskblock(249),FileRead,Openfile(82:8/0),Thread(87:8/W1)) this Page(57:8/12)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(87:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(87:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(12)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 137052/250000[MMU][do_refer] address = 16030 offset = 670 page no = 15 Thread(92:11/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(92:11/RU) 21 Page(15:11/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(4) Reserved by Task(11/L)
[PageFaultHandler][do_handlePageFault] page Page(15:11/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(8:8/4)
[PageFaultHandler][do_handlePageFault] page Page(15:11/null) setframe Frame(4)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(897),Device(0),Page(15:11/4),Diskblock(15),FileRead,Openfile(118:11/0),Thread(92:11/W1)) this Page(15:11/4)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(92:11/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(92:11/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(47:7/27)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(27) Page(47:7/27)Thread(95:8/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(18:8/null) setframe Frame(27)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(898),Device(0),Page(18:8/27),Diskblock(210),FileRead,Openfile(82:8/0),Thread(95:8/W1)) this Page(18:8/27)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(95:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(95:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(4:7/9)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(9) Page(4:7/9)Thread(88:8/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(60:8/null) setframe Frame(9)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(899),Device(0),Page(60:8/9),Diskblock(252),FileRead,Openfile(82:8/0),Thread(88:8/W1)) this Page(60:8/9)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(88:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(88:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(9:8/19)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(19) Page(9:8/19)Thread(89:8/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(36:8/null) setframe Frame(19)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(900),Device(0),Page(36:8/19),Diskblock(228),FileRead,Openfile(82:8/0),Thread(89:8/W1)) this Page(36:8/19)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(89:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(89:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(1:11/1)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(1) Page(1:11/1)Thread(98:8/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(47:8/null) setframe Frame(1)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(901),Device(0),Page(47:8/1),Diskblock(239),FileRead,Openfile(82:8/0),Thread(98:8/W1)) this Page(47:8/1)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(98:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(98:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(38:10/22)
[PageFaultHandler][do_handlePageFault] thread Thread(82:10/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(57:8/12)
[PageFaultHandler][do_handlePageFault] thread Thread(87:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
Simulation progress: 138021/250000[MMU][do_refer] address = 17170 offset = 786 page no = 16 Thread(82:10/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(82:10/RU) 22 Page(16:10/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(8) Reserved by Task(10/L)
[PageFaultHandler][do_handlePageFault] page Page(16:10/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(36:12/8)
[PageFaultHandler][do_handlePageFault] Frame(8) is dirty, do swap-out, Thread(82:10/W0)
[PageFaultHandler][SwapOut] page Page(36:12/8) frame Frame(8)file Openfile(96:10/0)
[PageFaultHandler][SwapOut] block no 36
[Info][PageTableEntry][do_lock] iorb IORB(Id(902),Device(0),Page(36:12/8),Diskblock(292),FileWrite,Openfile(96:10/0),Thread(82:10/W1)) this Page(36:12/8)
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(15:11/4)
[PageFaultHandler][do_handlePageFault] thread Thread(92:11/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 3641 offset = 569 page no = 3 Thread(92:11/RU)
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 58171 offset = 827 page no = 56 Thread(87:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(87:8/RU) 21 Page(56:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(5) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(56:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(28:8/5)
[PageFaultHandler][do_handlePageFault] page Page(56:8/null) setframe Frame(5)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(903),Device(0),Page(56:8/5),Diskblock(248),FileRead,Openfile(82:8/0),Thread(87:8/W1)) this Page(56:8/5)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(87:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(87:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(904),Device(1),Page(0:11/0),Diskblock(17),FileRead,Openfile(134:11/1),Thread(92:11/W0)) this Page(0:11/0)
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(18:8/27)
[PageFaultHandler][do_handlePageFault] thread Thread(95:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(0:11/0)
[MMU][do_refer] address = 29000 offset = 328 page no = 28 Thread(95:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(95:8/RU) 21 Page(28:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(27) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(28:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(18:8/27)
[PageFaultHandler][do_handlePageFault] page Page(28:8/null) setframe Frame(27)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(905),Device(0),Page(28:8/27),Diskblock(220),FileRead,Openfile(82:8/0),Thread(95:8/W1)) this Page(28:8/27)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(95:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(95:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(906),Device(1),Page(0:11/0),Diskblock(27),FileRead,Openfile(134:11/1),Thread(92:11/W0)) this Page(0:11/0)
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(60:8/9)
[PageFaultHandler][do_handlePageFault] thread Thread(88:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(0:11/0)
[MMU][do_refer] address = 60541 offset = 125 page no = 59 Thread(92:11/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(92:11/RU) 22 Page(59:11/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(20) Reserved by Task(11/L)
[PageFaultHandler][do_handlePageFault] page Page(59:11/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(9:7/20)
[PageFaultHandler][do_handlePageFault] Frame(20) is dirty, do swap-out, Thread(92:11/W0)
[PageFaultHandler][SwapOut] page Page(9:7/20) frame Frame(20)file Openfile(118:11/0)
[PageFaultHandler][SwapOut] block no 9
[Info][PageTableEntry][do_lock] iorb IORB(Id(907),Device(0),Page(9:7/20),Diskblock(9),FileWrite,Openfile(118:11/0),Thread(92:11/W1)) this Page(9:7/20)
[Info][PageTableEntry][do_lock] Get frame Frame(20)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 43421 offset = 413 page no = 42 Thread(88:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(88:8/RU) 22 Page(42:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(17) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(42:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(40:8/17)
[PageFaultHandler][do_handlePageFault] Frame(17) is dirty, do swap-out, Thread(88:8/W0)
[PageFaultHandler][SwapOut] page Page(40:8/17) frame Frame(17)file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 40
[Info][PageTableEntry][do_lock] iorb IORB(Id(908),Device(0),Page(40:8/17),Diskblock(232),FileWrite,Openfile(82:8/0),Thread(88:8/W1)) this Page(40:8/17)
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(36:8/19)
[PageFaultHandler][do_handlePageFault] thread Thread(89:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(47:8/1)
[PageFaultHandler][do_handlePageFault] thread Thread(98:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
Simulation progress: 139020/250000[MMU][do_refer] address = 44887 offset = 855 page no = 43 Thread(98:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(98:8/RU) 21 Page(43:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(1) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(43:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(47:8/1)
[PageFaultHandler][do_handlePageFault] Frame(1) is dirty, do swap-out, Thread(98:8/W0)
[PageFaultHandler][SwapOut] page Page(47:8/1) frame Frame(1)file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 47
[Info][PageTableEntry][do_lock] iorb IORB(Id(909),Device(0),Page(47:8/1),Diskblock(239),FileWrite,Openfile(82:8/0),Thread(98:8/W1)) this Page(47:8/1)
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(36:12/8)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(8) Page(36:12/8)Thread(82:10/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(16:10/null) setframe Frame(8)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(910),Device(0),Page(16:10/8),Diskblock(272),FileRead,Openfile(96:10/0),Thread(82:10/W1)) this Page(16:10/8)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(82:10/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(82:10/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(56:8/5)
[PageFaultHandler][do_handlePageFault] thread Thread(87:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[Info][PageTableEntry][do_lock] iorb IORB(Id(911),Device(1),Page(3:8/15),Diskblock(17),FileRead,Openfile(134:11/1),Thread(87:8/W0)) this Page(3:8/15)
[Info][PageTableEntry][do_lock] Get frame Frame(15)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(912),Device(1),Page(11:8/28),Diskblock(29),FileRead,Openfile(136:8/1),Thread(89:8/W0)) this Page(11:8/28)
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(3:8/15)
[PageTableEntry][do_unlock] this Page(28:8/27)
[PageFaultHandler][do_handlePageFault] thread Thread(95:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(11:8/28)
[MMU][do_refer] address = 44503 offset = 471 page no = 43 Thread(87:8/RU)
[PageTableEntry][do_unlock] this Page(9:7/20)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(20) Page(9:7/20)Thread(92:11/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(59:11/null) setframe Frame(20)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(913),Device(0),Page(59:11/20),Diskblock(59),FileRead,Openfile(118:11/0),Thread(92:11/W1)) this Page(59:11/20)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(92:11/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(92:11/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(20)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 46848 offset = 768 page no = 45 Thread(89:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(89:8/RU) 22 Page(45:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(27) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(45:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(28:8/27)
[PageFaultHandler][do_handlePageFault] page Page(45:8/null) setframe Frame(27)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(914),Device(0),Page(45:8/27),Diskblock(237),FileRead,Openfile(82:8/0),Thread(89:8/W1)) this Page(45:8/27)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(89:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(89:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 3429 offset = 357 page no = 3 Thread(95:8/RU)
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(40:8/17)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(17) Page(40:8/17)Thread(88:8/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(42:8/null) setframe Frame(17)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(915),Device(0),Page(42:8/17),Diskblock(234),FileRead,Openfile(82:8/0),Thread(88:8/W1)) this Page(42:8/17)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(88:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(88:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageCleanDaemon][unleash] osp.Memory.PageCleanDaemon@e14d43 execute time 140000
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(15)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(11)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(16)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(29)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(10)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(18)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(15)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(15) Page(3:8/15) isDirty true
[PageFaultHandler][SwapOut] file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 3
[Info][PageTableEntry][do_lock] iorb IORB(Id(916),Device(0),Page(3:8/15),Diskblock(195),FileWrite,Openfile(82:8/0),Thread(99:0/W1)) this Page(3:8/15)
[Info][PageTableEntry][do_lock] Get frame Frame(15)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 140129/250000[PageTableEntry][do_unlock] this Page(47:8/1)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(1) Page(47:8/1)Thread(98:8/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(43:8/null) setframe Frame(1)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(917),Device(0),Page(43:8/1),Diskblock(235),FileRead,Openfile(82:8/0),Thread(98:8/W1)) this Page(43:8/1)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(98:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(98:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(16:10/8)
[PageFaultHandler][do_handlePageFault] thread Thread(82:10/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(59:11/20)
[PageFaultHandler][do_handlePageFault] thread Thread(92:11/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 9209 offset = 1017 page no = 8 Thread(100:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(100:8/RU) 22 Page(8:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(3) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(8:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(49:8/3)
[PageFaultHandler][do_handlePageFault] page Page(8:8/null) setframe Frame(3)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(918),Device(0),Page(8:8/3),Diskblock(200),FileRead,Openfile(82:8/0),Thread(100:8/W1)) this Page(8:8/3)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(100:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(100:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(3)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(45:8/27)
[PageFaultHandler][do_handlePageFault] thread Thread(89:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
Simulation progress: 141005/250000[PageTableEntry][do_unlock] this Page(42:8/17)
[PageFaultHandler][do_handlePageFault] thread Thread(88:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 6373 offset = 229 page no = 6 Thread(82:10/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(82:10/RU) 22 Page(6:10/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(17) Reserved by Task(10/L)
[PageFaultHandler][do_handlePageFault] page Page(6:10/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(42:8/17)
[PageFaultHandler][do_handlePageFault] Frame(17) is dirty, do swap-out, Thread(82:10/W0)
[PageFaultHandler][SwapOut] page Page(42:8/17) frame Frame(17)file Openfile(96:10/0)
[PageFaultHandler][SwapOut] block no 42
[Info][PageTableEntry][do_lock] iorb IORB(Id(919),Device(0),Page(42:8/17),Diskblock(298),FileWrite,Openfile(96:10/0),Thread(82:10/W1)) this Page(42:8/17)
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 46390 offset = 310 page no = 45 Thread(94:12/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(94:12/RU) 22 Page(45:12/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(21) Reserved by Task(12/L)
[PageFaultHandler][do_handlePageFault] page Page(45:12/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(22:10/21)
[PageFaultHandler][do_handlePageFault] page Page(45:12/null) setframe Frame(21)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(920),Device(0),Page(45:12/21),Diskblock(365),FileRead,Openfile(124:12/0),Thread(94:12/W1)) this Page(45:12/21)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(94:12/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(94:12/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(3:8/15)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(15) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(11)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(11) Page(0:10/11) isDirty true
[PageFaultHandler][SwapOut] file Openfile(96:10/0)
[PageFaultHandler][SwapOut] block no 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(921),Device(0),Page(0:10/11),Diskblock(256),FileWrite,Openfile(96:10/0),Thread(99:0/W1)) this Page(0:10/11)
[Info][PageTableEntry][do_lock] Get frame Frame(11)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 37874 offset = 1010 page no = 36 Thread(88:8/RU)
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 10114 offset = 898 page no = 9 Thread(88:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(88:8/RU) 22 Page(9:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(15) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(9:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(3:8/15)
[PageFaultHandler][do_handlePageFault] page Page(9:8/null) setframe Frame(15)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(922),Device(0),Page(9:8/15),Diskblock(201),FileRead,Openfile(82:8/0),Thread(88:8/W1)) this Page(9:8/15)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(88:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(88:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(15)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(43:8/1)
[PageFaultHandler][do_handlePageFault] thread Thread(98:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(8:8/3)
[PageFaultHandler][do_handlePageFault] thread Thread(100:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[Info][PageTableEntry][do_lock] iorb IORB(Id(923),Device(1),Page(8:8/3),Diskblock(28),FileRead,Openfile(134:11/1),Thread(98:8/W0)) this Page(8:8/3)
[Info][PageTableEntry][do_lock] Get frame Frame(3)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 18162 offset = 754 page no = 17 Thread(89:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(89:8/RU) 22 Page(17:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(25) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(17:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(3:11/25)
[PageFaultHandler][do_handlePageFault] Frame(25) is dirty, do swap-out, Thread(89:8/W0)
[PageFaultHandler][SwapOut] page Page(3:11/25) frame Frame(25)file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 3
[Info][PageTableEntry][do_lock] iorb IORB(Id(924),Device(0),Page(3:11/25),Diskblock(195),FileWrite,Openfile(82:8/0),Thread(89:8/W1)) this Page(3:11/25)
[Info][PageTableEntry][do_lock] Get frame Frame(25)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(8:8/3)
[PageTableEntry][do_unlock] this Page(42:8/17)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(17) Page(42:8/17)Thread(82:10/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(6:10/null) setframe Frame(17)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(925),Device(0),Page(6:10/17),Diskblock(262),FileRead,Openfile(96:10/0),Thread(82:10/W1)) this Page(6:10/17)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(82:10/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(82:10/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 48659 offset = 531 page no = 47 Thread(87:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(87:8/RU) 21 Page(47:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(3) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(47:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(8:8/3)
[PageFaultHandler][do_handlePageFault] Frame(3) is dirty, do swap-out, Thread(87:8/W0)
[PageFaultHandler][SwapOut] page Page(8:8/3) frame Frame(3)file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 8
[Info][PageTableEntry][do_lock] iorb IORB(Id(926),Device(0),Page(8:8/3),Diskblock(200),FileWrite,Openfile(82:8/0),Thread(87:8/W1)) this Page(8:8/3)
[Info][PageTableEntry][do_lock] Get frame Frame(3)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 142040/250000[PageTableEntry][do_unlock] this Page(45:12/21)
[PageFaultHandler][do_handlePageFault] thread Thread(94:12/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(0:10/11)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(11) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(16)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(16) Page(1:12/16) isDirty true
[PageFaultHandler][SwapOut] file Openfile(124:12/0)
[PageFaultHandler][SwapOut] block no 1
[Info][PageTableEntry][do_lock] iorb IORB(Id(927),Device(0),Page(1:12/16),Diskblock(321),FileWrite,Openfile(124:12/0),Thread(99:0/W1)) this Page(1:12/16)
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 33221 offset = 453 page no = 32 Thread(98:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(98:8/RU) 21 Page(32:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(21) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(32:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(45:12/21)
[PageFaultHandler][do_handlePageFault] Frame(21) is dirty, do swap-out, Thread(98:8/W0)
[PageFaultHandler][SwapOut] page Page(45:12/21) frame Frame(21)file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 45
[Info][PageTableEntry][do_lock] iorb IORB(Id(928),Device(0),Page(45:12/21),Diskblock(237),FileWrite,Openfile(82:8/0),Thread(98:8/W1)) this Page(45:12/21)
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 11149 offset = 909 page no = 10 Thread(94:12/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(94:12/RU) 21 Page(10:12/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(26) Reserved by Task(12/L)
[PageFaultHandler][do_handlePageFault] page Page(10:12/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(15:10/26)
[PageFaultHandler][do_handlePageFault] Frame(26) is dirty, do swap-out, Thread(94:12/W0)
[PageFaultHandler][SwapOut] page Page(15:10/26) frame Frame(26)file Openfile(124:12/0)
[PageFaultHandler][SwapOut] block no 15
[Info][PageTableEntry][do_lock] iorb IORB(Id(929),Device(0),Page(15:10/26),Diskblock(335),FileWrite,Openfile(124:12/0),Thread(94:12/W1)) this Page(15:10/26)
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 18786 offset = 354 page no = 18 Thread(101:11/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(101:11/RU) 22 Page(18:11/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(23) Reserved by Task(11/L)
[PageFaultHandler][do_handlePageFault] page Page(18:11/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(24:8/23)
[PageFaultHandler][do_handlePageFault] page Page(18:11/null) setframe Frame(23)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(930),Device(0),Page(18:11/23),Diskblock(18),FileRead,Openfile(118:11/0),Thread(101:11/W1)) this Page(18:11/23)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(101:11/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(101:11/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(23)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(9:8/15)
[PageFaultHandler][do_handlePageFault] thread Thread(88:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[Info][PageTableEntry][do_lock] iorb IORB(Id(931),Device(1),Page(9:8/15),Diskblock(28),FileRead,Openfile(134:11/1),Thread(88:8/W0)) this Page(9:8/15)
[Info][PageTableEntry][do_lock] Get frame Frame(15)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(3:11/25)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(25) Page(3:11/25)Thread(89:8/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(17:8/null) setframe Frame(25)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(932),Device(0),Page(17:8/25),Diskblock(209),FileRead,Openfile(82:8/0),Thread(89:8/W1)) this Page(17:8/25)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(89:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(89:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(25)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(9:8/15)
[MMU][do_refer] address = 65214 offset = 702 page no = 63 Thread(88:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(88:8/RU) 21 Page(63:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(24) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(63:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(33:8/24)
[PageFaultHandler][do_handlePageFault] Frame(24) is dirty, do swap-out, Thread(88:8/W0)
[PageFaultHandler][SwapOut] page Page(33:8/24) frame Frame(24)file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 33
[Info][PageTableEntry][do_lock] iorb IORB(Id(933),Device(0),Page(33:8/24),Diskblock(225),FileWrite,Openfile(82:8/0),Thread(88:8/W1)) this Page(33:8/24)
[Info][PageTableEntry][do_lock] Get frame Frame(24)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(6:10/17)
[PageFaultHandler][do_handlePageFault] thread Thread(82:10/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 45855 offset = 799 page no = 44 Thread(82:10/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(82:10/RU) 21 Page(44:10/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(2) Reserved by Task(10/L)
[PageFaultHandler][do_handlePageFault] page Page(44:10/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(41:7/2)
[PageFaultHandler][do_handlePageFault] Frame(2) is dirty, do swap-out, Thread(82:10/W0)
[PageFaultHandler][SwapOut] page Page(41:7/2) frame Frame(2)file Openfile(96:10/0)
[PageFaultHandler][SwapOut] block no 41
[Info][PageTableEntry][do_lock] iorb IORB(Id(934),Device(0),Page(41:7/2),Diskblock(297),FileWrite,Openfile(96:10/0),Thread(82:10/W1)) this Page(41:7/2)
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(8:8/3)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(3) Page(8:8/3)Thread(87:8/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(47:8/null) setframe Frame(3)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(935),Device(0),Page(47:8/3),Diskblock(239),FileRead,Openfile(82:8/0),Thread(87:8/W1)) this Page(47:8/3)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(87:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(87:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(3)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 44002 offset = 994 page no = 42 Thread(100:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(100:8/RU) 22 Page(42:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(12) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(42:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(57:8/12)
[PageFaultHandler][do_handlePageFault] page Page(42:8/null) setframe Frame(12)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(936),Device(0),Page(42:8/12),Diskblock(234),FileRead,Openfile(82:8/0),Thread(100:8/W1)) this Page(42:8/12)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(100:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(100:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(12)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 143044/250000[PageTableEntry][do_unlock] this Page(1:12/16)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(16) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(29)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(29) Page(38:11/29) isDirty true
[PageFaultHandler][SwapOut] file Openfile(118:11/0)
[PageFaultHandler][SwapOut] block no 38
[Info][PageTableEntry][do_lock] iorb IORB(Id(937),Device(0),Page(38:11/29),Diskblock(38),FileWrite,Openfile(118:11/0),Thread(99:0/W1)) this Page(38:11/29)
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(45:12/21)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(21) Page(45:12/21)Thread(98:8/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(32:8/null) setframe Frame(21)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(938),Device(0),Page(32:8/21),Diskblock(224),FileRead,Openfile(82:8/0),Thread(98:8/W1)) this Page(32:8/21)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(98:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(98:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(15:10/26)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(26) Page(15:10/26)Thread(94:12/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(10:12/null) setframe Frame(26)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(939),Device(0),Page(10:12/26),Diskblock(330),FileRead,Openfile(124:12/0),Thread(94:12/W1)) this Page(10:12/26)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(94:12/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(94:12/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(18:11/23)
[PageFaultHandler][do_handlePageFault] thread Thread(101:11/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 51621 offset = 421 page no = 50 Thread(101:11/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(101:11/RU) 22 Page(50:11/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(16) Reserved by Task(11/L)
[PageFaultHandler][do_handlePageFault] page Page(50:11/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(1:12/16)
[PageFaultHandler][do_handlePageFault] page Page(50:11/null) setframe Frame(16)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(940),Device(0),Page(50:11/16),Diskblock(50),FileRead,Openfile(118:11/0),Thread(101:11/W1)) this Page(50:11/16)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(101:11/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(101:11/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(17:8/25)
[PageFaultHandler][do_handlePageFault] thread Thread(89:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
Simulation progress: 144031/250000[MMU][do_refer] address = 42362 offset = 378 page no = 41 Thread(89:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(89:8/RU) 22 Page(41:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(25) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(41:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(17:8/25)
[PageFaultHandler][do_handlePageFault] Frame(25) is dirty, do swap-out, Thread(89:8/W0)
[PageFaultHandler][SwapOut] page Page(17:8/25) frame Frame(25)file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 17
[Info][PageTableEntry][do_lock] iorb IORB(Id(941),Device(0),Page(17:8/25),Diskblock(209),FileWrite,Openfile(82:8/0),Thread(89:8/W1)) this Page(17:8/25)
[Info][PageTableEntry][do_lock] Get frame Frame(25)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(33:8/24)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(24) Page(33:8/24)Thread(88:8/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(63:8/null) setframe Frame(24)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(942),Device(0),Page(63:8/24),Diskblock(255),FileRead,Openfile(82:8/0),Thread(88:8/W1)) this Page(63:8/24)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(88:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(88:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(24)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(41:7/2)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(2) Page(41:7/2)Thread(82:10/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(44:10/null) setframe Frame(2)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(943),Device(0),Page(44:10/2),Diskblock(300),FileRead,Openfile(96:10/0),Thread(82:10/W1)) this Page(44:10/2)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(82:10/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(82:10/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(47:8/3)
[PageFaultHandler][do_handlePageFault] thread Thread(87:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 10978 offset = 738 page no = 10 Thread(87:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(87:8/RU) 21 Page(10:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(28) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(10:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(11:8/28)
[PageFaultHandler][do_handlePageFault] Frame(28) is dirty, do swap-out, Thread(87:8/W0)
[PageFaultHandler][SwapOut] page Page(11:8/28) frame Frame(28)file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 11
[Info][PageTableEntry][do_lock] iorb IORB(Id(944),Device(0),Page(11:8/28),Diskblock(203),FileWrite,Openfile(82:8/0),Thread(87:8/W1)) this Page(11:8/28)
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(42:8/12)
[PageFaultHandler][do_handlePageFault] thread Thread(100:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(38:11/29)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(29) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(10)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(10) Page(54:7/10) isDirty true
[PageFaultHandler][SwapOut] file Openfile(68:7/0)
[PageFaultHandler][SwapOut] block no 54
[Info][PageTableEntry][do_lock] iorb IORB(Id(945),Device(0),Page(54:7/10),Diskblock(118),FileWrite,Openfile(68:7/0),Thread(99:0/W1)) this Page(54:7/10)
[Info][PageTableEntry][do_lock] Get frame Frame(10)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 25342 offset = 766 page no = 24 Thread(100:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(100:8/RU) 21 Page(24:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(12) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(24:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(42:8/12)
[PageFaultHandler][do_handlePageFault] Frame(12) is dirty, do swap-out, Thread(100:8/W0)
[PageFaultHandler][SwapOut] page Page(42:8/12) frame Frame(12)file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 42
[Info][PageTableEntry][do_lock] iorb IORB(Id(946),Device(0),Page(42:8/12),Diskblock(234),FileWrite,Openfile(82:8/0),Thread(100:8/W1)) this Page(42:8/12)
[Info][PageTableEntry][do_lock] Get frame Frame(12)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 145010/250000[PageTableEntry][do_unlock] this Page(32:8/21)
[PageFaultHandler][do_handlePageFault] thread Thread(98:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[Info][PageTableEntry][do_lock] iorb IORB(Id(947),Device(1),Page(9:8/15),Diskblock(9),FileRead,Openfile(142:8/1),Thread(98:8/W0)) this Page(9:8/15)
[Info][PageTableEntry][do_lock] Get frame Frame(15)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(9:8/15)
[MMU][do_refer] address = 25864 offset = 264 page no = 25 Thread(98:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(98:8/RU) 22 Page(25:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(21) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(25:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(32:8/21)
[PageFaultHandler][do_handlePageFault] page Page(25:8/null) setframe Frame(21)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(948),Device(0),Page(25:8/21),Diskblock(217),FileRead,Openfile(82:8/0),Thread(98:8/W1)) this Page(25:8/21)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(98:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(98:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(10:12/26)
[PageFaultHandler][do_handlePageFault] thread Thread(94:12/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[Info][PageTableEntry][do_lock] iorb IORB(Id(949),Device(1),Page(10:12/26),Diskblock(18),FileRead,Openfile(142:8/1),Thread(94:12/W0)) this Page(10:12/26)
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(10:12/26)
[PageTableEntry][do_unlock] this Page(50:11/16)
[PageFaultHandler][do_handlePageFault] thread Thread(101:11/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 56029 offset = 733 page no = 54 Thread(101:11/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(101:11/RU) 21 Page(54:11/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(26) Reserved by Task(11/L)
[PageFaultHandler][do_handlePageFault] page Page(54:11/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(10:12/26)
[PageFaultHandler][do_handlePageFault] Frame(26) is dirty, do swap-out, Thread(101:11/W0)
[PageFaultHandler][SwapOut] page Page(10:12/26) frame Frame(26)file Openfile(118:11/0)
[PageFaultHandler][SwapOut] block no 10
[Info][PageTableEntry][do_lock] iorb IORB(Id(950),Device(0),Page(10:12/26),Diskblock(10),FileWrite,Openfile(118:11/0),Thread(101:11/W1)) this Page(10:12/26)
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(17:8/25)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(25) Page(17:8/25)Thread(89:8/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(41:8/null) setframe Frame(25)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(951),Device(0),Page(41:8/25),Diskblock(233),FileRead,Openfile(82:8/0),Thread(89:8/W1)) this Page(41:8/25)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(89:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(89:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(25)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 146013/250000[PageTableEntry][do_unlock] this Page(63:8/24)
[PageFaultHandler][do_handlePageFault] thread Thread(88:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 22649 offset = 121 page no = 22 Thread(88:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(88:8/RU) 22 Page(22:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(22) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(22:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(38:10/22)
[PageFaultHandler][do_handlePageFault] Frame(22) is dirty, do swap-out, Thread(88:8/W0)
[PageFaultHandler][SwapOut] page Page(38:10/22) frame Frame(22)file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 38
[Info][PageTableEntry][do_lock] iorb IORB(Id(952),Device(0),Page(38:10/22),Diskblock(230),FileWrite,Openfile(82:8/0),Thread(88:8/W1)) this Page(38:10/22)
[Info][PageTableEntry][do_lock] Get frame Frame(22)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(44:10/2)
[PageFaultHandler][do_handlePageFault] thread Thread(82:10/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 40723 offset = 787 page no = 39 Thread(82:10/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(82:10/RU) 22 Page(39:10/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(4) Reserved by Task(10/L)
[PageFaultHandler][do_handlePageFault] page Page(39:10/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(15:11/4)
[PageFaultHandler][do_handlePageFault] page Page(39:10/null) setframe Frame(4)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(953),Device(0),Page(39:10/4),Diskblock(295),FileRead,Openfile(96:10/0),Thread(82:10/W1)) this Page(39:10/4)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(82:10/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(82:10/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(11:8/28)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(28) Page(11:8/28)Thread(87:8/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(10:8/null) setframe Frame(28)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(954),Device(0),Page(10:8/28),Diskblock(202),FileRead,Openfile(82:8/0),Thread(87:8/W1)) this Page(10:8/28)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(87:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(87:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(54:7/10)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(10) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(18)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(18) Page(60:11/18) isDirty true
[PageFaultHandler][SwapOut] file Openfile(118:11/0)
[PageFaultHandler][SwapOut] block no 60
[Info][PageTableEntry][do_lock] iorb IORB(Id(955),Device(0),Page(60:11/18),Diskblock(60),FileWrite,Openfile(118:11/0),Thread(99:0/W1)) this Page(60:11/18)
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(42:8/12)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(12) Page(42:8/12)Thread(100:8/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(24:8/null) setframe Frame(12)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(956),Device(0),Page(24:8/12),Diskblock(216),FileRead,Openfile(82:8/0),Thread(100:8/W1)) this Page(24:8/12)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(100:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(100:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(12)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(25:8/21)
[PageFaultHandler][do_handlePageFault] thread Thread(98:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 39085 offset = 173 page no = 38 Thread(98:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(98:8/RU) 22 Page(38:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(21) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(38:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(25:8/21)
[PageFaultHandler][do_handlePageFault] Frame(21) is dirty, do swap-out, Thread(98:8/W0)
[PageFaultHandler][SwapOut] page Page(25:8/21) frame Frame(21)file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 25
[Info][PageTableEntry][do_lock] iorb IORB(Id(957),Device(0),Page(25:8/21),Diskblock(217),FileWrite,Openfile(82:8/0),Thread(98:8/W1)) this Page(25:8/21)
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 147050/250000[PageTableEntry][do_unlock] this Page(10:12/26)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(26) Page(10:12/26)Thread(101:11/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(54:11/null) setframe Frame(26)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(958),Device(0),Page(54:11/26),Diskblock(54),FileRead,Openfile(118:11/0),Thread(101:11/W1)) this Page(54:11/26)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(101:11/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(101:11/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(41:8/25)
[PageFaultHandler][do_handlePageFault] thread Thread(89:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 3310 offset = 238 page no = 3 Thread(89:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(89:8/RU) 21 Page(3:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(5) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(3:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(56:8/5)
[PageFaultHandler][do_handlePageFault] page Page(3:8/null) setframe Frame(5)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(959),Device(0),Page(3:8/5),Diskblock(195),FileRead,Openfile(82:8/0),Thread(89:8/W1)) this Page(3:8/5)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(89:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(89:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(38:10/22)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(22) Page(38:10/22)Thread(88:8/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(22:8/null) setframe Frame(22)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(960),Device(0),Page(22:8/22),Diskblock(214),FileRead,Openfile(82:8/0),Thread(88:8/W1)) this Page(22:8/22)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(88:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(88:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(22)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(39:10/4)
[PageFaultHandler][do_handlePageFault] thread Thread(82:10/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 2071 offset = 23 page no = 2 Thread(82:10/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(82:10/RU) 21 Page(2:10/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(4) Reserved by Task(10/L)
[PageFaultHandler][do_handlePageFault] page Page(2:10/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(39:10/4)
[PageFaultHandler][do_handlePageFault] Frame(4) is dirty, do swap-out, Thread(82:10/W0)
[PageFaultHandler][SwapOut] page Page(39:10/4) frame Frame(4)file Openfile(96:10/0)
[PageFaultHandler][SwapOut] block no 39
[Info][PageTableEntry][do_lock] iorb IORB(Id(961),Device(0),Page(39:10/4),Diskblock(295),FileWrite,Openfile(96:10/0),Thread(82:10/W1)) this Page(39:10/4)
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(10:8/28)
[PageFaultHandler][do_handlePageFault] thread Thread(87:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(60:11/18)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(18) finish
[MMU][do_refer] address = 53518 offset = 270 page no = 52 Thread(87:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(87:8/RU) 22 Page(52:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(6) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(52:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(61:11/6)
[PageFaultHandler][do_handlePageFault] page Page(52:8/null) setframe Frame(6)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(962),Device(0),Page(52:8/6),Diskblock(244),FileRead,Openfile(82:8/0),Thread(87:8/W1)) this Page(52:8/6)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(87:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(87:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(6)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 148066/250000[PageTableEntry][do_unlock] this Page(24:8/12)
[PageFaultHandler][do_handlePageFault] thread Thread(100:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 22352 offset = 848 page no = 21 Thread(100:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(100:8/RU) 22 Page(21:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(12) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(21:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(24:8/12)
[PageFaultHandler][do_handlePageFault] page Page(21:8/null) setframe Frame(12)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(963),Device(0),Page(21:8/12),Diskblock(213),FileRead,Openfile(82:8/0),Thread(100:8/W1)) this Page(21:8/12)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(100:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(100:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(12)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(25:8/21)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(21) Page(25:8/21)Thread(98:8/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(38:8/null) setframe Frame(21)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(964),Device(0),Page(38:8/21),Diskblock(230),FileRead,Openfile(82:8/0),Thread(98:8/W1)) this Page(38:8/21)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(98:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(98:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(54:11/26)
[PageFaultHandler][do_handlePageFault] thread Thread(101:11/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 49333 offset = 181 page no = 48 Thread(101:11/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(101:11/RU) 22 Page(48:11/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(26) Reserved by Task(11/L)
[PageFaultHandler][do_handlePageFault] page Page(48:11/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(54:11/26)
[PageFaultHandler][do_handlePageFault] page Page(48:11/null) setframe Frame(26)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(965),Device(0),Page(48:11/26),Diskblock(48),FileRead,Openfile(118:11/0),Thread(101:11/W1)) this Page(48:11/26)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(101:11/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(101:11/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(3:8/5)
[PageFaultHandler][do_handlePageFault] thread Thread(89:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(22:8/22)
[PageFaultHandler][do_handlePageFault] thread Thread(88:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
Simulation progress: 149075/250000[PageTableEntry][do_unlock] this Page(39:10/4)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(4) Page(39:10/4)Thread(82:10/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(2:10/null) setframe Frame(4)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(966),Device(0),Page(2:10/4),Diskblock(258),FileRead,Openfile(96:10/0),Thread(82:10/W1)) this Page(2:10/4)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(82:10/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(82:10/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(52:8/6)
[PageFaultHandler][do_handlePageFault] thread Thread(87:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(21:8/12)
[PageFaultHandler][do_handlePageFault] thread Thread(100:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 59118 offset = 750 page no = 57 Thread(90:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(90:7/RU) 21 Page(57:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(6) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(57:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(52:8/6)
[PageFaultHandler][do_handlePageFault] Frame(6) is dirty, do swap-out, Thread(90:7/W0)
[PageFaultHandler][SwapOut] page Page(52:8/6) frame Frame(6)file Openfile(68:7/0)
[PageFaultHandler][SwapOut] block no 52
[Info][PageTableEntry][do_lock] iorb IORB(Id(967),Device(0),Page(52:8/6),Diskblock(116),FileWrite,Openfile(68:7/0),Thread(90:7/W1)) this Page(52:8/6)
[Info][PageTableEntry][do_lock] Get frame Frame(6)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(38:8/21)
[PageFaultHandler][do_handlePageFault] thread Thread(98:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 55952 offset = 656 page no = 54 Thread(98:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(98:8/RU) 21 Page(54:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(11) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(54:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(0:10/11)
[PageFaultHandler][do_handlePageFault] page Page(54:8/null) setframe Frame(11)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(968),Device(0),Page(54:8/11),Diskblock(246),FileRead,Openfile(82:8/0),Thread(98:8/W1)) this Page(54:8/11)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(98:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(98:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(11)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(48:11/26)
[PageFaultHandler][do_handlePageFault] thread Thread(101:11/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 41354 offset = 394 page no = 40 Thread(102:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(102:8/RU) 22 Page(40:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(26) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(40:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(48:11/26)
[PageFaultHandler][do_handlePageFault] Frame(26) is dirty, do swap-out, Thread(102:8/W0)
[PageFaultHandler][SwapOut] page Page(48:11/26) frame Frame(26)file Openfile(82:8/0)
[PageFaultHandler][SwapOut] block no 48
[Info][PageTableEntry][do_lock] iorb IORB(Id(969),Device(0),Page(48:11/26),Diskblock(240),FileWrite,Openfile(82:8/0),Thread(102:8/W1)) this Page(48:11/26)
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 150016/250000[PageTableEntry][do_unlock] this Page(2:10/4)
[PageFaultHandler][do_handlePageFault] thread Thread(82:10/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(52:8/6)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(6) Page(52:8/6)Thread(90:7/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(57:7/null) setframe Frame(6)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(970),Device(0),Page(57:7/6),Diskblock(121),FileRead,Openfile(68:7/0),Thread(90:7/W1)) this Page(57:7/6)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(90:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(90:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(6)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 56801 offset = 481 page no = 55 Thread(87:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(87:8/RU) 22 Page(55:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(29) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(55:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(38:11/29)
[PageFaultHandler][do_handlePageFault] page Page(55:8/null) setframe Frame(29)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(971),Device(0),Page(55:8/29),Diskblock(247),FileRead,Openfile(82:8/0),Thread(87:8/W1)) this Page(55:8/29)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(87:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(87:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(54:8/11)
[PageFaultHandler][do_handlePageFault] thread Thread(98:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[Info][PageTableEntry][do_lock] iorb IORB(Id(972),Device(1),Page(3:8/5),Diskblock(18),FileWrite,Openfile(146:8/1),Thread(98:8/W0)) this Page(3:8/5)
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(48:11/26)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(26) Page(48:11/26)Thread(102:8/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(40:8/null) setframe Frame(26)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(973),Device(0),Page(40:8/26),Diskblock(232),FileRead,Openfile(82:8/0),Thread(102:8/W1)) this Page(40:8/26)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(102:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(102:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(3:8/5)
[PageTableEntry][do_unlock] this Page(57:7/6)
[PageFaultHandler][do_handlePageFault] thread Thread(90:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 7939 offset = 771 page no = 7 Thread(82:10/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(82:10/RU) 21 Page(7:10/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(6) Reserved by Task(10/L)
[PageFaultHandler][do_handlePageFault] page Page(7:10/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(57:7/6)
[PageFaultHandler][do_handlePageFault] page Page(7:10/null) setframe Frame(6)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(974),Device(0),Page(7:10/6),Diskblock(263),FileRead,Openfile(96:10/0),Thread(82:10/W1)) this Page(7:10/6)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(82:10/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(82:10/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(6)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(55:8/29)
[PageFaultHandler][do_handlePageFault] thread Thread(87:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
Simulation progress: 151001/250000[MMU][do_refer] address = 43855 offset = 847 page no = 42 Thread(98:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(98:8/RU) 21 Page(42:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(11) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(42:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(54:8/11)
[PageFaultHandler][do_handlePageFault] page Page(42:8/null) setframe Frame(11)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(975),Device(0),Page(42:8/11),Diskblock(234),FileRead,Openfile(82:8/0),Thread(98:8/W1)) this Page(42:8/11)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(98:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(98:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(11)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 53773 offset = 525 page no = 52 Thread(87:8/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(87:8/RU) 21 Page(52:8/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(3) Reserved by Task(8/L)
[PageFaultHandler][do_handlePageFault] page Page(52:8/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(47:8/3)
[PageFaultHandler][do_handlePageFault] page Page(52:8/null) setframe Frame(3)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(976),Device(0),Page(52:8/3),Diskblock(244),FileRead,Openfile(82:8/0),Thread(87:8/W1)) this Page(52:8/3)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(87:8/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(87:8/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(3)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(40:8/26)
[PageFaultHandler][do_handlePageFault] thread Thread(102:8/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 37933 offset = 45 page no = 37 Thread(90:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(90:7/RU) 21 Page(37:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(17) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(37:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(6:10/17)
[PageFaultHandler][do_handlePageFault] Frame(17) is dirty, do swap-out, Thread(90:7/W0)
[PageFaultHandler][SwapOut] page Page(6:10/17) frame Frame(17)file Openfile(68:7/0)
[PageFaultHandler][SwapOut] block no 6
[Info][PageTableEntry][do_lock] iorb IORB(Id(977),Device(0),Page(6:10/17),Diskblock(70),FileWrite,Openfile(68:7/0),Thread(90:7/W1)) this Page(6:10/17)
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(42:8/11)
[PageFaultHandler][do_handlePageFault] thread Thread(98:8/KL) status = 22
[PageFaultHandler][do_handlePageFault] Thread already killed after swap-in
[MMU][do_refer] return from interrupt
[PageTableEntry][do_unlock] this Page(52:8/3)
[PageFaultHandler][do_handlePageFault] thread Thread(87:8/KL) status = 22
[PageFaultHandler][do_handlePageFault] Thread already killed after swap-in
[MMU][do_refer] return from interrupt
[PageTable][do_deallocateMemory] this Pagetable(Task(8/T))
[PageTable][do_deallocateMemory]  page_table_entry Page(3:8/5) frame_table_entry Frame(5)
[PageTable][do_deallocateMemory]  page_table_entry Page(9:8/15) frame_table_entry Frame(15)
[PageTable][do_deallocateMemory]  page_table_entry Page(10:8/28) frame_table_entry Frame(28)
[PageTable][do_deallocateMemory]  page_table_entry Page(21:8/12) frame_table_entry Frame(12)
[PageTable][do_deallocateMemory]  page_table_entry Page(22:8/22) frame_table_entry Frame(22)
[PageTable][do_deallocateMemory]  page_table_entry Page(29:8/7) frame_table_entry Frame(7)
[PageTable][do_deallocateMemory]  page_table_entry Page(36:8/19) frame_table_entry Frame(19)
[PageTable][do_deallocateMemory]  page_table_entry Page(38:8/21) frame_table_entry Frame(21)
[PageTable][do_deallocateMemory]  page_table_entry Page(39:8/13) frame_table_entry Frame(13)
[PageTable][do_deallocateMemory]  page_table_entry Page(40:8/26) frame_table_entry Frame(26)
[PageTable][do_deallocateMemory]  page_table_entry Page(41:8/25) frame_table_entry Frame(25)
[PageTable][do_deallocateMemory]  page_table_entry Page(43:8/1) frame_table_entry Frame(1)
[PageTable][do_deallocateMemory]  page_table_entry Page(45:8/27) frame_table_entry Frame(27)
[PageTable][do_deallocateMemory]  page_table_entry Page(55:8/29) frame_table_entry Frame(29)
[PageTable][do_deallocateMemory]  page_table_entry Page(60:8/9) frame_table_entry Frame(9)
[PageTable][do_deallocateMemory]  page_table_entry Page(63:8/24) frame_table_entry Frame(24)
[PageTableEntry][do_unlock] this Page(7:10/6)
[PageFaultHandler][do_handlePageFault] thread Thread(82:10/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 48690 offset = 562 page no = 47 Thread(82:10/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(82:10/RU) 21 Page(47:10/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(6) Reserved by Task(10/L)
[PageFaultHandler][do_handlePageFault] page Page(47:10/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(7:10/6)
[PageFaultHandler][do_handlePageFault] page Page(47:10/null) setframe Frame(6)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(978),Device(0),Page(47:10/6),Diskblock(303),FileRead,Openfile(96:10/0),Thread(82:10/W1)) this Page(47:10/6)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(82:10/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(82:10/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(6)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(6:10/17)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(17) Page(6:10/17)Thread(90:7/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(37:7/null) setframe Frame(17)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(979),Device(0),Page(37:7/17),Diskblock(101),FileRead,Openfile(68:7/0),Thread(90:7/W1)) this Page(37:7/17)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(90:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(90:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(47:10/6)
[PageFaultHandler][do_handlePageFault] thread Thread(82:10/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 32727 offset = 983 page no = 31 Thread(82:10/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(82:10/RU) 22 Page(31:10/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(3) Reserved by Task(10/L)
[PageFaultHandler][do_handlePageFault] page Page(31:10/null)
[PageFaultHandler][do_handlePageFault] page Page(31:10/null) setframe Frame(3)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(980),Device(0),Page(31:10/3),Diskblock(287),FileRead,Openfile(96:10/0),Thread(82:10/W1)) this Page(31:10/3)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(82:10/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(82:10/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(3)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(37:7/17)
[PageFaultHandler][do_handlePageFault] thread Thread(90:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 54381 offset = 109 page no = 53 Thread(90:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(90:7/RU) 22 Page(53:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(17) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(53:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(37:7/17)
[PageFaultHandler][do_handlePageFault] page Page(53:7/null) setframe Frame(17)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(981),Device(0),Page(53:7/17),Diskblock(117),FileRead,Openfile(68:7/0),Thread(90:7/W1)) this Page(53:7/17)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(90:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(90:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 152040/250000[PageTableEntry][do_unlock] this Page(31:10/3)
[PageFaultHandler][do_handlePageFault] thread Thread(82:10/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 43759 offset = 751 page no = 42 Thread(104:10/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(104:10/RU) 21 Page(42:10/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(2) Reserved by Task(10/L)
[PageFaultHandler][do_handlePageFault] page Page(42:10/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(44:10/2)
[PageFaultHandler][do_handlePageFault] page Page(42:10/null) setframe Frame(2)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(982),Device(0),Page(42:10/2),Diskblock(298),FileRead,Openfile(96:10/0),Thread(104:10/W1)) this Page(42:10/2)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(104:10/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(104:10/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(53:7/17)
[PageFaultHandler][do_handlePageFault] thread Thread(90:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 56259 offset = 963 page no = 54 Thread(90:7/RU)
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 25742 offset = 142 page no = 25 Thread(82:10/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(82:10/RU) 22 Page(25:10/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(17) Reserved by Task(10/L)
[PageFaultHandler][do_handlePageFault] page Page(25:10/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(53:7/17)
[PageFaultHandler][do_handlePageFault] Frame(17) is dirty, do swap-out, Thread(82:10/W0)
[PageFaultHandler][SwapOut] page Page(53:7/17) frame Frame(17)file Openfile(96:10/0)
[PageFaultHandler][SwapOut] block no 53
[Info][PageTableEntry][do_lock] iorb IORB(Id(983),Device(0),Page(53:7/17),Diskblock(309),FileWrite,Openfile(96:10/0),Thread(82:10/W1)) this Page(53:7/17)
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 23257 offset = 729 page no = 22 Thread(90:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(90:7/RU) 22 Page(22:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(18) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(22:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(60:11/18)
[PageFaultHandler][do_handlePageFault] page Page(22:7/null) setframe Frame(18)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(984),Device(0),Page(22:7/18),Diskblock(86),FileRead,Openfile(68:7/0),Thread(90:7/W1)) this Page(22:7/18)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(90:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(90:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(42:10/2)
[PageFaultHandler][do_handlePageFault] thread Thread(104:10/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(53:7/17)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(17) Page(53:7/17)Thread(82:10/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(25:10/null) setframe Frame(17)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(985),Device(0),Page(25:10/17),Diskblock(281),FileRead,Openfile(96:10/0),Thread(82:10/W1)) this Page(25:10/17)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(82:10/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(82:10/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(22:7/18)
[PageFaultHandler][do_handlePageFault] thread Thread(90:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 19240 offset = 808 page no = 18 Thread(90:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(90:7/RU) 22 Page(18:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(24) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(18:7/null)
[PageFaultHandler][do_handlePageFault] page Page(18:7/null) setframe Frame(24)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(986),Device(0),Page(18:7/24),Diskblock(82),FileRead,Openfile(68:7/0),Thread(90:7/W1)) this Page(18:7/24)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(90:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(90:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(24)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 153005/250000[PageTableEntry][do_unlock] this Page(25:10/17)
[PageFaultHandler][do_handlePageFault] thread Thread(82:10/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 4707 offset = 611 page no = 4 Thread(82:10/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(82:10/RU) 22 Page(4:10/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(0) Reserved by Task(10/L)
[PageFaultHandler][do_handlePageFault] page Page(4:10/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(0:11/0)
[PageFaultHandler][do_handlePageFault] Frame(0) is dirty, do swap-out, Thread(82:10/W0)
[PageFaultHandler][SwapOut] page Page(0:11/0) frame Frame(0)file Openfile(96:10/0)
[PageFaultHandler][SwapOut] block no 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(987),Device(0),Page(0:11/0),Diskblock(256),FileWrite,Openfile(96:10/0),Thread(82:10/W1)) this Page(0:11/0)
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(18:7/24)
[PageFaultHandler][do_handlePageFault] thread Thread(90:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 34043 offset = 251 page no = 33 Thread(90:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(90:7/RU) 22 Page(33:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(24) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(33:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(18:7/24)
[PageFaultHandler][do_handlePageFault] Frame(24) is dirty, do swap-out, Thread(90:7/W0)
[PageFaultHandler][SwapOut] page Page(18:7/24) frame Frame(24)file Openfile(68:7/0)
[PageFaultHandler][SwapOut] block no 18
[Info][PageTableEntry][do_lock] iorb IORB(Id(988),Device(0),Page(18:7/24),Diskblock(82),FileWrite,Openfile(68:7/0),Thread(90:7/W1)) this Page(18:7/24)
[Info][PageTableEntry][do_lock] Get frame Frame(24)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(0:11/0)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(0) Page(0:11/0)Thread(82:10/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(4:10/null) setframe Frame(0)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(989),Device(0),Page(4:10/0),Diskblock(260),FileRead,Openfile(96:10/0),Thread(82:10/W1)) this Page(4:10/0)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(82:10/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(82:10/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(18:7/24)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(24) Page(18:7/24)Thread(90:7/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(33:7/null) setframe Frame(24)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(990),Device(0),Page(33:7/24),Diskblock(97),FileRead,Openfile(68:7/0),Thread(90:7/W1)) this Page(33:7/24)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(90:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(90:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(24)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(4:10/0)
[PageFaultHandler][do_handlePageFault] thread Thread(82:10/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
Simulation progress: 154035/250000[PageTableEntry][do_unlock] this Page(33:7/24)
[PageFaultHandler][do_handlePageFault] thread Thread(90:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 62202 offset = 762 page no = 60 Thread(90:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(90:7/RU) 21 Page(60:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(14) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(60:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(11:10/14)
[PageFaultHandler][do_handlePageFault] page Page(60:7/null) setframe Frame(14)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(991),Device(0),Page(60:7/14),Diskblock(124),FileRead,Openfile(68:7/0),Thread(90:7/W1)) this Page(60:7/14)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(90:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(90:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(14)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(60:7/14)
[PageFaultHandler][do_handlePageFault] thread Thread(90:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 43430 offset = 422 page no = 42 Thread(90:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(90:7/RU) 21 Page(42:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(8) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(42:7/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(16:10/8)
[PageFaultHandler][do_handlePageFault] Frame(8) is dirty, do swap-out, Thread(90:7/W0)
[PageFaultHandler][SwapOut] page Page(16:10/8) frame Frame(8)file Openfile(68:7/0)
[PageFaultHandler][SwapOut] block no 16
[Info][PageTableEntry][do_lock] iorb IORB(Id(992),Device(0),Page(16:10/8),Diskblock(80),FileWrite,Openfile(68:7/0),Thread(90:7/W1)) this Page(16:10/8)
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(16:10/8)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(8) Page(16:10/8)Thread(90:7/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(42:7/null) setframe Frame(8)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(993),Device(0),Page(42:7/8),Diskblock(106),FileRead,Openfile(68:7/0),Thread(90:7/W1)) this Page(42:7/8)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(90:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(90:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(42:7/8)
[PageFaultHandler][do_handlePageFault] thread Thread(90:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 8399 offset = 207 page no = 8 Thread(90:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(90:7/RU) 21 Page(8:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(25) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(8:7/null)
[PageFaultHandler][do_handlePageFault] page Page(8:7/null) setframe Frame(25)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(994),Device(0),Page(8:7/25),Diskblock(72),FileRead,Openfile(68:7/0),Thread(90:7/W1)) this Page(8:7/25)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(90:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(90:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(25)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(8:7/25)
[PageFaultHandler][do_handlePageFault] thread Thread(90:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 54388 offset = 116 page no = 53 Thread(90:7/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(90:7/RU) 21 Page(53:7/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(28) Reserved by Task(7/L)
[PageFaultHandler][do_handlePageFault] page Page(53:7/null)
[PageFaultHandler][do_handlePageFault] page Page(53:7/null) setframe Frame(28)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(995),Device(0),Page(53:7/28),Diskblock(117),FileRead,Openfile(68:7/0),Thread(90:7/W1)) this Page(53:7/28)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(90:7/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(90:7/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(53:7/28)
[PageFaultHandler][do_handlePageFault] thread Thread(90:7/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTable][do_deallocateMemory] this Pagetable(Task(7/T))
[PageTable][do_deallocateMemory]  page_table_entry Page(8:7/25) frame_table_entry Frame(25)
[PageTable][do_deallocateMemory]  page_table_entry Page(22:7/18) frame_table_entry Frame(18)
[PageTable][do_deallocateMemory]  page_table_entry Page(33:7/24) frame_table_entry Frame(24)
[PageTable][do_deallocateMemory]  page_table_entry Page(42:7/8) frame_table_entry Frame(8)
[PageTable][do_deallocateMemory]  page_table_entry Page(53:7/28) frame_table_entry Frame(28)
[PageTable][do_deallocateMemory]  page_table_entry Page(54:7/10) frame_table_entry Frame(10)
[PageTable][do_deallocateMemory]  page_table_entry Page(60:7/14) frame_table_entry Frame(14)
Simulation progress: 155025/250000[PageTable][do_deallocateMemory] this Pagetable(Task(12/T))
Simulation progress: 156037/250000Simulation progress: 157054/250000Simulation progress: 158060/250000Simulation progress: 159028/250000[PageCleanDaemon][unleash] osp.Memory.PageCleanDaemon@e14d43 execute time 160000
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(20)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(23)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(3)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(17)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(0)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(16)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(20)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(20) Page(59:11/20) isDirty true
[PageFaultHandler][SwapOut] file Openfile(118:11/0)
[PageFaultHandler][SwapOut] block no 59
[Info][PageTableEntry][do_lock] iorb IORB(Id(996),Device(0),Page(59:11/20),Diskblock(59),FileWrite,Openfile(118:11/0),Thread(105:0/W1)) this Page(59:11/20)
[Info][PageTableEntry][do_lock] Get frame Frame(20)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 160020/250000[PageTableEntry][do_unlock] this Page(59:11/20)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(20) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(23)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(23) Page(18:11/23) isDirty true
[PageFaultHandler][SwapOut] file Openfile(118:11/0)
[PageFaultHandler][SwapOut] block no 18
[Info][PageTableEntry][do_lock] iorb IORB(Id(997),Device(0),Page(18:11/23),Diskblock(18),FileWrite,Openfile(118:11/0),Thread(105:0/W1)) this Page(18:11/23)
[Info][PageTableEntry][do_lock] Get frame Frame(23)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(18:11/23)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(23) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(3)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(3) Page(31:10/3) isDirty true
[PageFaultHandler][SwapOut] file Openfile(96:10/0)
[PageFaultHandler][SwapOut] block no 31
[Info][PageTableEntry][do_lock] iorb IORB(Id(998),Device(0),Page(31:10/3),Diskblock(287),FileWrite,Openfile(96:10/0),Thread(105:0/W1)) this Page(31:10/3)
[Info][PageTableEntry][do_lock] Get frame Frame(3)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTable][do_deallocateMemory] this Pagetable(Task(11/T))
[PageTable][do_deallocateMemory]  page_table_entry Page(18:11/23) frame_table_entry Frame(23)
[PageTable][do_deallocateMemory]  page_table_entry Page(50:11/16) frame_table_entry Frame(16)
[PageTable][do_deallocateMemory] owner_task Task(0/L)
[PageTable][do_deallocateMemory]  page_table_entry Page(59:11/20) frame_table_entry Frame(20)
[PageTableEntry][do_unlock] this Page(31:10/3)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(3) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(17)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(17) Page(25:10/17) isDirty true
[PageFaultHandler][SwapOut] file Openfile(96:10/0)
[PageFaultHandler][SwapOut] block no 25
[Info][PageTableEntry][do_lock] iorb IORB(Id(999),Device(0),Page(25:10/17),Diskblock(281),FileWrite,Openfile(96:10/0),Thread(105:0/W1)) this Page(25:10/17)
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 57482 offset = 138 page no = 56 Thread(106:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(106:13/RU) 21 Page(56:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(19) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(56:13/null)
[PageFaultHandler][do_handlePageFault] page Page(56:13/null) setframe Frame(19)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1000),Device(0),Page(56:13/19),Diskblock(56),FileRead,Openfile(152:13/0),Thread(106:13/W1)) this Page(56:13/19)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(106:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(106:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(25:10/17)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(17) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(0)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(0) Page(4:10/0) isDirty true
[PageFaultHandler][SwapOut] file Openfile(96:10/0)
[PageFaultHandler][SwapOut] block no 4
[Info][PageTableEntry][do_lock] iorb IORB(Id(1001),Device(0),Page(4:10/0),Diskblock(260),FileWrite,Openfile(96:10/0),Thread(105:0/W1)) this Page(4:10/0)
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(56:13/19)
[PageFaultHandler][do_handlePageFault] thread Thread(106:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
Simulation progress: 161062/250000[PageTableEntry][do_unlock] this Page(4:10/0)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(0) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(16)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame page is null Frame(16) isDirty false
[Info][PageTableEntry][do_lock] iorb IORB(Id(1002),Device(1),Page(56:13/19),Diskblock(29),FileRead,Openfile(154:13/1),Thread(108:13/W0)) this Page(56:13/19)
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(56:13/19)
[MMU][do_refer] address = 49876 offset = 724 page no = 48 Thread(108:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(108:13/RU) 22 Page(48:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(20) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(48:13/null)
[PageFaultHandler][do_handlePageFault] page Page(48:13/null) setframe Frame(20)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1003),Device(0),Page(48:13/20),Diskblock(48),FileRead,Openfile(152:13/0),Thread(108:13/W1)) this Page(48:13/20)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(108:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(108:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(20)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(48:13/20)
[PageFaultHandler][do_handlePageFault] thread Thread(108:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 30919 offset = 199 page no = 30 Thread(108:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(108:13/RU) 21 Page(30:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(5) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(30:13/null)
[PageFaultHandler][do_handlePageFault] page Page(30:13/null) setframe Frame(5)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1004),Device(0),Page(30:13/5),Diskblock(30),FileRead,Openfile(152:13/0),Thread(108:13/W1)) this Page(30:13/5)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(108:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(108:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(30:13/5)
[PageFaultHandler][do_handlePageFault] thread Thread(108:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 3532 offset = 460 page no = 3 Thread(108:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(108:13/RU) 21 Page(3:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(12) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(3:13/null)
[PageFaultHandler][do_handlePageFault] page Page(3:13/null) setframe Frame(12)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1005),Device(0),Page(3:13/12),Diskblock(3),FileRead,Openfile(152:13/0),Thread(108:13/W1)) this Page(3:13/12)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(108:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(108:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(12)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(3:13/12)
[PageFaultHandler][do_handlePageFault] thread Thread(108:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 40294 offset = 358 page no = 39 Thread(108:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(108:13/RU) 21 Page(39:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(1) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(39:13/null)
[PageFaultHandler][do_handlePageFault] page Page(39:13/null) setframe Frame(1)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1006),Device(0),Page(39:13/1),Diskblock(39),FileRead,Openfile(152:13/0),Thread(108:13/W1)) this Page(39:13/1)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(108:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(108:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(39:13/1)
[PageFaultHandler][do_handlePageFault] thread Thread(108:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 47504 offset = 400 page no = 46 Thread(109:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(109:13/RU) 21 Page(46:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(7) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(46:13/null)
[PageFaultHandler][do_handlePageFault] page Page(46:13/null) setframe Frame(7)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1007),Device(0),Page(46:13/7),Diskblock(46),FileRead,Openfile(152:13/0),Thread(109:13/W1)) this Page(46:13/7)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(109:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(109:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(7)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 162030/250000[MMU][do_refer] address = 28727 offset = 55 page no = 28 Thread(108:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(108:13/RU) 21 Page(28:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(27) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(28:13/null)
[PageFaultHandler][do_handlePageFault] page Page(28:13/null) setframe Frame(27)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1008),Device(0),Page(28:13/27),Diskblock(28),FileRead,Openfile(152:13/0),Thread(108:13/W1)) this Page(28:13/27)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(108:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(108:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(46:13/7)
[PageFaultHandler][do_handlePageFault] thread Thread(109:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 31733 offset = 1013 page no = 30 Thread(109:13/RU)
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(28:13/27)
[PageFaultHandler][do_handlePageFault] thread Thread(108:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 24228 offset = 676 page no = 23 Thread(108:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(108:13/RU) 21 Page(23:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(27) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(23:13/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(28:13/27)
[PageFaultHandler][do_handlePageFault] page Page(23:13/null) setframe Frame(27)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1009),Device(0),Page(23:13/27),Diskblock(23),FileRead,Openfile(152:13/0),Thread(108:13/W1)) this Page(23:13/27)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(108:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(108:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(23:13/27)
[PageFaultHandler][do_handlePageFault] thread Thread(108:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 6070 offset = 950 page no = 5 Thread(109:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(109:13/RU) 22 Page(5:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(21) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(5:13/null)
[PageFaultHandler][do_handlePageFault] page Page(5:13/null) setframe Frame(21)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1010),Device(0),Page(5:13/21),Diskblock(5),FileRead,Openfile(152:13/0),Thread(109:13/W1)) this Page(5:13/21)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(109:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(109:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(5:13/21)
[PageFaultHandler][do_handlePageFault] thread Thread(109:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 45071 offset = 15 page no = 44 Thread(110:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(110:13/RU) 21 Page(44:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(4) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(44:13/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(2:10/4)
[PageFaultHandler][do_handlePageFault] page Page(44:13/null) setframe Frame(4)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1011),Device(0),Page(44:13/4),Diskblock(44),FileRead,Openfile(152:13/0),Thread(110:13/W1)) this Page(44:13/4)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(110:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(110:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(44:13/4)
[PageFaultHandler][do_handlePageFault] thread Thread(110:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 18243 offset = 835 page no = 17 Thread(109:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(109:13/RU) 21 Page(17:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(15) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(17:13/null)
[PageFaultHandler][do_handlePageFault] page Page(17:13/null) setframe Frame(15)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1012),Device(0),Page(17:13/15),Diskblock(17),FileRead,Openfile(152:13/0),Thread(109:13/W1)) this Page(17:13/15)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(109:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(109:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(15)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(17:13/15)
[PageFaultHandler][do_handlePageFault] thread Thread(109:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
Simulation progress: 163019/250000[Info][PageTableEntry][do_lock] iorb IORB(Id(1013),Device(1),Page(3:13/12),Diskblock(29),FileRead,Openfile(154:13/1),Thread(111:13/W0)) this Page(3:13/12)
[Info][PageTableEntry][do_lock] Get frame Frame(12)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(1014),Device(1),Page(5:13/21),Diskblock(29),FileRead,Openfile(154:13/1),Thread(109:13/W0)) this Page(5:13/21)
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(3:13/12)
[MMU][do_refer] address = 45468 offset = 412 page no = 44 Thread(110:13/RU)
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(5:13/21)
[MMU][do_refer] address = 51099 offset = 923 page no = 49 Thread(109:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(109:13/RU) 22 Page(49:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(29) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(49:13/null)
[PageFaultHandler][do_handlePageFault] page Page(49:13/null) setframe Frame(29)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1015),Device(0),Page(49:13/29),Diskblock(49),FileRead,Openfile(152:13/0),Thread(109:13/W1)) this Page(49:13/29)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(109:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(109:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(49:13/29)
[PageFaultHandler][do_handlePageFault] thread Thread(109:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
Simulation progress: 164032/250000[PageTable][do_deallocateMemory] this Pagetable(Task(10/T))
[PageTable][do_deallocateMemory]  page_table_entry Page(4:10/0) frame_table_entry Frame(0)
[PageTable][do_deallocateMemory]  page_table_entry Page(25:10/17) frame_table_entry Frame(17)
[PageTable][do_deallocateMemory]  page_table_entry Page(31:10/3) frame_table_entry Frame(3)
[PageTable][do_deallocateMemory]  page_table_entry Page(42:10/2) frame_table_entry Frame(2)
[PageTable][do_deallocateMemory]  page_table_entry Page(47:10/6) frame_table_entry Frame(6)
[MMU][do_refer] address = 26911 offset = 287 page no = 26 Thread(115:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(115:13/RU) 21 Page(26:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(10) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(26:13/null)
[PageFaultHandler][do_handlePageFault] page Page(26:13/null) setframe Frame(10)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1016),Device(0),Page(26:13/10),Diskblock(26),FileRead,Openfile(152:13/0),Thread(115:13/W1)) this Page(26:13/10)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(115:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(115:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(10)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(26:13/10)
[PageFaultHandler][do_handlePageFault] thread Thread(115:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 54517 offset = 245 page no = 53 Thread(110:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(110:13/RU) 22 Page(53:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(13) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(53:13/null)
[PageFaultHandler][do_handlePageFault] page Page(53:13/null) setframe Frame(13)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1017),Device(0),Page(53:13/13),Diskblock(53),FileRead,Openfile(152:13/0),Thread(110:13/W1)) this Page(53:13/13)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(110:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(110:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(13)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(53:13/13)
[PageFaultHandler][do_handlePageFault] thread Thread(110:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 386 offset = 386 page no = 0 Thread(115:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(115:13/RU) 22 Page(0:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(26) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(0:13/null)
[PageFaultHandler][do_handlePageFault] page Page(0:13/null) setframe Frame(26)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1018),Device(0),Page(0:13/26),Diskblock(0),FileRead,Openfile(152:13/0),Thread(115:13/W1)) this Page(0:13/26)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(115:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(115:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(0:13/26)
[PageFaultHandler][do_handlePageFault] thread Thread(115:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 34805 offset = 1013 page no = 33 Thread(14:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(14:3/RU) 22 Page(33:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(11) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(33:3/null)
[PageFaultHandler][do_handlePageFault] page Page(33:3/null) setframe Frame(11)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1019),Device(0),Page(33:3/11),Diskblock(161),FileRead,Openfile(10:3/0),Thread(14:3/W1)) this Page(33:3/11)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(14:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(14:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(11)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 165060/250000[PageTableEntry][do_unlock] this Page(33:3/11)
[PageFaultHandler][do_handlePageFault] thread Thread(14:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 50056 offset = 904 page no = 48 Thread(115:13/RU)
[MMU][do_refer] Do memory read.
[Info][PageTableEntry][do_lock] iorb IORB(Id(1020),Device(1),Page(0:13/26),Diskblock(29),FileRead,Openfile(154:13/1),Thread(115:13/W0)) this Page(0:13/26)
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 7251 offset = 83 page no = 7 Thread(118:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(118:14/RU) 22 Page(7:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(6) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(7:14/null)
[PageFaultHandler][do_handlePageFault] page Page(7:14/null) setframe Frame(6)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1021),Device(0),Page(7:14/6),Diskblock(71),FileRead,Openfile(156:14/0),Thread(118:14/W1)) this Page(7:14/6)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(118:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(118:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(6)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(7:14/6)
[PageFaultHandler][do_handlePageFault] thread Thread(118:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(0:13/26)
[MMU][do_refer] address = 42353 offset = 369 page no = 41 Thread(14:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(14:3/RU) 22 Page(41:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(23) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(41:3/null)
[PageFaultHandler][do_handlePageFault] page Page(41:3/null) setframe Frame(23)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1022),Device(0),Page(41:3/23),Diskblock(169),FileRead,Openfile(10:3/0),Thread(14:3/W1)) this Page(41:3/23)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(14:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(14:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(23)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 9698 offset = 482 page no = 9 Thread(109:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(109:13/RU) 22 Page(9:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(3) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(9:13/null)
[PageFaultHandler][do_handlePageFault] page Page(9:13/null) setframe Frame(3)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1023),Device(0),Page(9:13/3),Diskblock(9),FileRead,Openfile(152:13/0),Thread(109:13/W1)) this Page(9:13/3)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(109:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(109:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(3)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 4217 offset = 121 page no = 4 Thread(118:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(118:14/RU) 21 Page(4:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(2) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(4:14/null)
[PageFaultHandler][do_handlePageFault] page Page(4:14/null) setframe Frame(2)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1024),Device(0),Page(4:14/2),Diskblock(68),FileRead,Openfile(156:14/0),Thread(118:14/W1)) this Page(4:14/2)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(118:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(118:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(41:3/23)
[PageFaultHandler][do_handlePageFault] thread Thread(14:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(9:13/3)
[PageFaultHandler][do_handlePageFault] thread Thread(109:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(4:14/2)
[PageFaultHandler][do_handlePageFault] thread Thread(118:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
Simulation progress: 166011/250000[MMU][do_refer] address = 15129 offset = 793 page no = 14 Thread(113:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(113:13/RU) 22 Page(14:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(3) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(14:13/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(9:13/3)
[PageFaultHandler][do_handlePageFault] Frame(3) is dirty, do swap-out, Thread(113:13/W0)
[PageFaultHandler][SwapOut] page Page(9:13/3) frame Frame(3)file Openfile(152:13/0)
[PageFaultHandler][SwapOut] block no 9
[Info][PageTableEntry][do_lock] iorb IORB(Id(1025),Device(0),Page(9:13/3),Diskblock(9),FileWrite,Openfile(152:13/0),Thread(113:13/W1)) this Page(9:13/3)
[Info][PageTableEntry][do_lock] Get frame Frame(3)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(9:13/3)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(3) Page(9:13/3)Thread(113:13/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(14:13/null) setframe Frame(3)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1026),Device(0),Page(14:13/3),Diskblock(14),FileRead,Openfile(152:13/0),Thread(113:13/W1)) this Page(14:13/3)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(113:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(113:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(3)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(14:13/3)
[PageFaultHandler][do_handlePageFault] thread Thread(113:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 40245 offset = 309 page no = 39 Thread(118:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(118:14/RU) 21 Page(39:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(18) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(39:14/null)
[PageFaultHandler][do_handlePageFault] page Page(39:14/null) setframe Frame(18)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1027),Device(0),Page(39:14/18),Diskblock(103),FileRead,Openfile(156:14/0),Thread(118:14/W1)) this Page(39:14/18)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(118:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(118:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(39:14/18)
[PageFaultHandler][do_handlePageFault] thread Thread(118:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 5685 offset = 565 page no = 5 Thread(119:13/RU)
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 18373 offset = 965 page no = 17 Thread(119:13/RU)
[MMU][do_refer] Do memory read.
Simulation progress: 167020/250000[MMU][do_refer] address = 35066 offset = 250 page no = 34 Thread(109:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(109:13/RU) 21 Page(34:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(17) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(34:13/null)
[PageFaultHandler][do_handlePageFault] page Page(34:13/null) setframe Frame(17)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1028),Device(0),Page(34:13/17),Diskblock(34),FileRead,Openfile(152:13/0),Thread(109:13/W1)) this Page(34:13/17)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(109:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(109:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 21626 offset = 122 page no = 21 Thread(113:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(113:13/RU) 22 Page(21:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(0) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(21:13/null)
[PageFaultHandler][do_handlePageFault] page Page(21:13/null) setframe Frame(0)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1029),Device(0),Page(21:13/0),Diskblock(21),FileRead,Openfile(152:13/0),Thread(113:13/W1)) this Page(21:13/0)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(113:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(113:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(34:13/17)
[PageFaultHandler][do_handlePageFault] thread Thread(109:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 12399 offset = 111 page no = 12 Thread(110:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(110:13/RU) 21 Page(12:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(16) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(12:13/null)
[PageFaultHandler][do_handlePageFault] page Page(12:13/null) setframe Frame(16)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1030),Device(0),Page(12:13/16),Diskblock(12),FileRead,Openfile(152:13/0),Thread(110:13/W1)) this Page(12:13/16)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(110:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(110:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(21:13/0)
[PageFaultHandler][do_handlePageFault] thread Thread(113:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 4147 offset = 51 page no = 4 Thread(118:14/RU)
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(12:13/16)
[PageFaultHandler][do_handlePageFault] thread Thread(110:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
Simulation progress: 168108/250000[MMU][do_refer] address = 29496 offset = 824 page no = 28 Thread(110:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(110:13/RU) 21 Page(28:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(0) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(28:13/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(21:13/0)
[PageFaultHandler][do_handlePageFault] Frame(0) is dirty, do swap-out, Thread(110:13/W0)
[PageFaultHandler][SwapOut] page Page(21:13/0) frame Frame(0)file Openfile(152:13/0)
[PageFaultHandler][SwapOut] block no 21
[Info][PageTableEntry][do_lock] iorb IORB(Id(1031),Device(0),Page(21:13/0),Diskblock(21),FileWrite,Openfile(152:13/0),Thread(110:13/W1)) this Page(21:13/0)
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(21:13/0)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(0) Page(21:13/0)Thread(110:13/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(28:13/null) setframe Frame(0)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1032),Device(0),Page(28:13/0),Diskblock(28),FileRead,Openfile(152:13/0),Thread(110:13/W1)) this Page(28:13/0)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(110:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(110:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(28:13/0)
[PageFaultHandler][do_handlePageFault] thread Thread(110:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 60015 offset = 623 page no = 58 Thread(115:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(115:13/RU) 22 Page(58:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(14) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(58:13/null)
[PageFaultHandler][do_handlePageFault] page Page(58:13/null) setframe Frame(14)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1033),Device(0),Page(58:13/14),Diskblock(58),FileRead,Openfile(152:13/0),Thread(115:13/W1)) this Page(58:13/14)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(115:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(115:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(14)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(58:13/14)
[PageFaultHandler][do_handlePageFault] thread Thread(115:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 23115 offset = 587 page no = 22 Thread(14:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(14:3/RU) 21 Page(22:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(8) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(22:3/null)
[PageFaultHandler][do_handlePageFault] page Page(22:3/null) setframe Frame(8)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1034),Device(0),Page(22:3/8),Diskblock(150),FileRead,Openfile(10:3/0),Thread(14:3/W1)) this Page(22:3/8)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(14:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(14:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(22:3/8)
[PageFaultHandler][do_handlePageFault] thread Thread(14:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 10135 offset = 919 page no = 9 Thread(109:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(109:13/RU) 21 Page(9:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(25) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(9:13/null)
[PageFaultHandler][do_handlePageFault] page Page(9:13/null) setframe Frame(25)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1035),Device(0),Page(9:13/25),Diskblock(9),FileRead,Openfile(152:13/0),Thread(109:13/W1)) this Page(9:13/25)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(109:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(109:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(25)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 57230 offset = 910 page no = 55 Thread(110:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(110:13/RU) 21 Page(55:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(28) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(55:13/null)
[PageFaultHandler][do_handlePageFault] page Page(55:13/null) setframe Frame(28)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1036),Device(0),Page(55:13/28),Diskblock(55),FileRead,Openfile(152:13/0),Thread(110:13/W1)) this Page(55:13/28)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(110:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(110:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 169031/250000[MMU][do_refer] address = 12156 offset = 892 page no = 11 Thread(120:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(120:13/RU) 21 Page(11:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(19) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(11:13/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(56:13/19)
[PageFaultHandler][do_handlePageFault] Frame(19) is dirty, do swap-out, Thread(120:13/W0)
[PageFaultHandler][SwapOut] page Page(56:13/19) frame Frame(19)file Openfile(152:13/0)
[PageFaultHandler][SwapOut] block no 56
[Info][PageTableEntry][do_lock] iorb IORB(Id(1037),Device(0),Page(56:13/19),Diskblock(56),FileWrite,Openfile(152:13/0),Thread(120:13/W1)) this Page(56:13/19)
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(9:13/25)
[PageFaultHandler][do_handlePageFault] thread Thread(109:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(55:13/28)
[PageFaultHandler][do_handlePageFault] thread Thread(110:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(56:13/19)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(19) Page(56:13/19)Thread(120:13/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(11:13/null) setframe Frame(19)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1038),Device(0),Page(11:13/19),Diskblock(11),FileRead,Openfile(152:13/0),Thread(120:13/W1)) this Page(11:13/19)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(120:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(120:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 4851 offset = 755 page no = 4 Thread(109:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(109:13/RU) 21 Page(4:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(28) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(4:13/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(55:13/28)
[PageFaultHandler][do_handlePageFault] page Page(4:13/null) setframe Frame(28)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1039),Device(0),Page(4:13/28),Diskblock(4),FileRead,Openfile(152:13/0),Thread(109:13/W1)) this Page(4:13/28)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(109:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(109:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 10811 offset = 571 page no = 10 Thread(115:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(115:13/RU) 21 Page(10:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(20) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(10:13/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(48:13/20)
[PageFaultHandler][do_handlePageFault] Frame(20) is dirty, do swap-out, Thread(115:13/W0)
[PageFaultHandler][SwapOut] page Page(48:13/20) frame Frame(20)file Openfile(152:13/0)
[PageFaultHandler][SwapOut] block no 48
[Info][PageTableEntry][do_lock] iorb IORB(Id(1040),Device(0),Page(48:13/20),Diskblock(48),FileWrite,Openfile(152:13/0),Thread(115:13/W1)) this Page(48:13/20)
[Info][PageTableEntry][do_lock] Get frame Frame(20)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(11:13/19)
[PageFaultHandler][do_handlePageFault] thread Thread(120:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(4:13/28)
[PageFaultHandler][do_handlePageFault] thread Thread(109:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 35481 offset = 665 page no = 34 Thread(110:13/RU)
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(48:13/20)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(20) Page(48:13/20)Thread(115:13/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(10:13/null) setframe Frame(20)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1041),Device(0),Page(10:13/20),Diskblock(10),FileRead,Openfile(152:13/0),Thread(115:13/W1)) this Page(10:13/20)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(115:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(115:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(20)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(10:13/20)
[PageFaultHandler][do_handlePageFault] thread Thread(115:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
Simulation progress: 170049/250000[MMU][do_refer] address = 26447 offset = 847 page no = 25 Thread(109:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(109:13/RU) 22 Page(25:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(20) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(25:13/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(10:13/20)
[PageFaultHandler][do_handlePageFault] page Page(25:13/null) setframe Frame(20)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1042),Device(0),Page(25:13/20),Diskblock(25),FileRead,Openfile(152:13/0),Thread(109:13/W1)) this Page(25:13/20)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(109:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(109:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(20)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(25:13/20)
[PageFaultHandler][do_handlePageFault] thread Thread(109:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 50731 offset = 555 page no = 49 Thread(115:13/RU)
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 3297 offset = 225 page no = 3 Thread(118:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(118:14/RU) 22 Page(3:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(1) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(3:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(39:13/1)
[PageFaultHandler][do_handlePageFault] page Page(3:14/null) setframe Frame(1)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1043),Device(0),Page(3:14/1),Diskblock(67),FileRead,Openfile(156:14/0),Thread(118:14/W1)) this Page(3:14/1)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(118:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(118:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(3:14/1)
[PageFaultHandler][do_handlePageFault] thread Thread(118:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 17661 offset = 253 page no = 17 Thread(109:13/RU)
[MMU][do_refer] Do memory read.
[Info][PageTableEntry][do_lock] iorb IORB(Id(1044),Device(1),Page(1:13/null),Diskblock(10),FileRead,Openfile(158:13/1),Thread(109:13/W0)) this Page(1:13/null)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] requrest_thread = Thread(109:13/W0)
[Info][PageTableEntry][do_lock] validating_thread is null, handlePageFault
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(109:13/W0) 23 Page(1:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(7) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(1:13/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(46:13/7)
[PageFaultHandler][do_handlePageFault] page Page(1:13/null) setframe Frame(7)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1045),Device(0),Page(1:13/7),Diskblock(1),FileRead,Openfile(152:13/0),Thread(109:13/W2)) this Page(1:13/7)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(109:13/W2)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(109:13/W2)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(7)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(1:13/7)
[PageFaultHandler][do_handlePageFault] thread Thread(109:13/W1) status = 31
 Thread do_handlePageFault Success
[Info][PageTableEntry][do_lock] Get frame Frame(7)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(1:13/7)
Simulation progress: 171045/250000[MMU][do_refer] address = 38119 offset = 231 page no = 37 Thread(122:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(122:13/RU) 22 Page(37:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(22) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(37:13/null)
[PageFaultHandler][do_handlePageFault] page Page(37:13/null) setframe Frame(22)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1046),Device(0),Page(37:13/22),Diskblock(37),FileRead,Openfile(152:13/0),Thread(122:13/W1)) this Page(37:13/22)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(122:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(122:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(22)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 7173 offset = 5 page no = 7 Thread(114:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(114:13/RU) 22 Page(7:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(27) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(7:13/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(23:13/27)
[PageFaultHandler][do_handlePageFault] page Page(7:13/null) setframe Frame(27)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1047),Device(0),Page(7:13/27),Diskblock(7),FileRead,Openfile(152:13/0),Thread(114:13/W1)) this Page(7:13/27)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(114:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(114:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 61243 offset = 827 page no = 59 Thread(118:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(118:14/RU) 22 Page(59:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(21) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(59:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(5:13/21)
[PageFaultHandler][do_handlePageFault] Frame(21) is dirty, do swap-out, Thread(118:14/W0)
[PageFaultHandler][SwapOut] page Page(5:13/21) frame Frame(21)file Openfile(156:14/0)
[PageFaultHandler][SwapOut] block no 5
[Info][PageTableEntry][do_lock] iorb IORB(Id(1048),Device(0),Page(5:13/21),Diskblock(69),FileWrite,Openfile(156:14/0),Thread(118:14/W1)) this Page(5:13/21)
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(1049),Device(1),Page(0:13/26),Diskblock(33),FileRead,Openfile(158:13/1),Thread(120:13/W0)) this Page(0:13/26)
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(37:13/22)
[PageFaultHandler][do_handlePageFault] thread Thread(122:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[Info][PageTableEntry][do_lock] iorb IORB(Id(1050),Device(1),Page(1:13/7),Diskblock(32),FileRead,Openfile(158:13/1),Thread(113:13/W0)) this Page(1:13/7)
[Info][PageTableEntry][do_lock] Get frame Frame(7)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(7:13/27)
[PageFaultHandler][do_handlePageFault] thread Thread(114:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[Info][PageTableEntry][do_lock] iorb IORB(Id(1051),Device(1),Page(3:13/12),Diskblock(10),FileRead,Openfile(158:13/1),Thread(122:13/W0)) this Page(3:13/12)
[Info][PageTableEntry][do_lock] Get frame Frame(12)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(0:13/26)
[PageTableEntry][do_unlock] this Page(5:13/21)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(21) Page(5:13/21)Thread(118:14/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(59:14/null) setframe Frame(21)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1052),Device(0),Page(59:14/21),Diskblock(123),FileRead,Openfile(156:14/0),Thread(118:14/W1)) this Page(59:14/21)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(118:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(118:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(1:13/7)
[PageTableEntry][do_unlock] this Page(3:13/12)
[PageTableEntry][do_unlock] this Page(59:14/21)
[PageFaultHandler][do_handlePageFault] thread Thread(118:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 1978 offset = 954 page no = 1 Thread(121:13/RU)
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 5081 offset = 985 page no = 4 Thread(121:13/RU)
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 17244 offset = 860 page no = 16 Thread(121:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(121:13/RU) 21 Page(16:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(27) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(16:13/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(7:13/27)
[PageFaultHandler][do_handlePageFault] Frame(27) is dirty, do swap-out, Thread(121:13/W0)
[PageFaultHandler][SwapOut] page Page(7:13/27) frame Frame(27)file Openfile(152:13/0)
[PageFaultHandler][SwapOut] block no 7
[Info][PageTableEntry][do_lock] iorb IORB(Id(1053),Device(0),Page(7:13/27),Diskblock(7),FileWrite,Openfile(152:13/0),Thread(121:13/W1)) this Page(7:13/27)
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(7:13/27)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(27) Page(7:13/27)Thread(121:13/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(16:13/null) setframe Frame(27)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1054),Device(0),Page(16:13/27),Diskblock(16),FileRead,Openfile(152:13/0),Thread(121:13/W1)) this Page(16:13/27)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(121:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(121:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(16:13/27)
[PageFaultHandler][do_handlePageFault] thread Thread(121:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
Simulation progress: 172003/250000[MMU][do_refer] address = 63811 offset = 323 page no = 62 Thread(118:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(118:14/RU) 22 Page(62:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(4) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(62:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(44:13/4)
[PageFaultHandler][do_handlePageFault] page Page(62:14/null) setframe Frame(4)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1055),Device(0),Page(62:14/4),Diskblock(126),FileRead,Openfile(156:14/0),Thread(118:14/W1)) this Page(62:14/4)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(118:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(118:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 10684 offset = 444 page no = 10 Thread(123:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(123:13/RU) 21 Page(10:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(29) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(10:13/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(49:13/29)
[PageFaultHandler][do_handlePageFault] Frame(29) is dirty, do swap-out, Thread(123:13/W0)
[PageFaultHandler][SwapOut] page Page(49:13/29) frame Frame(29)file Openfile(152:13/0)
[PageFaultHandler][SwapOut] block no 49
[Info][PageTableEntry][do_lock] iorb IORB(Id(1056),Device(0),Page(49:13/29),Diskblock(49),FileWrite,Openfile(152:13/0),Thread(123:13/W1)) this Page(49:13/29)
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(62:14/4)
[PageFaultHandler][do_handlePageFault] thread Thread(118:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(49:13/29)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(29) Page(49:13/29)Thread(123:13/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(10:13/null) setframe Frame(29)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1057),Device(0),Page(10:13/29),Diskblock(10),FileRead,Openfile(152:13/0),Thread(123:13/W1)) this Page(10:13/29)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(123:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(123:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(10:13/29)
[PageFaultHandler][do_handlePageFault] thread Thread(123:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 51750 offset = 550 page no = 50 Thread(109:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(109:13/RU) 22 Page(50:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(29) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(50:13/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(10:13/29)
[PageFaultHandler][do_handlePageFault] page Page(50:13/null) setframe Frame(29)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1058),Device(0),Page(50:13/29),Diskblock(50),FileRead,Openfile(152:13/0),Thread(109:13/W1)) this Page(50:13/29)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(109:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(109:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(50:13/29)
[PageFaultHandler][do_handlePageFault] thread Thread(109:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 22588 offset = 60 page no = 22 Thread(121:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(121:13/RU) 22 Page(22:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(13) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(22:13/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(53:13/13)
[PageFaultHandler][do_handlePageFault] Frame(13) is dirty, do swap-out, Thread(121:13/W0)
[PageFaultHandler][SwapOut] page Page(53:13/13) frame Frame(13)file Openfile(152:13/0)
[PageFaultHandler][SwapOut] block no 53
[Info][PageTableEntry][do_lock] iorb IORB(Id(1059),Device(0),Page(53:13/13),Diskblock(53),FileWrite,Openfile(152:13/0),Thread(121:13/W1)) this Page(53:13/13)
[Info][PageTableEntry][do_lock] Get frame Frame(13)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(53:13/13)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(13) Page(53:13/13)Thread(121:13/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(22:13/null) setframe Frame(13)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1060),Device(0),Page(22:13/13),Diskblock(22),FileRead,Openfile(152:13/0),Thread(121:13/W1)) this Page(22:13/13)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(121:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(121:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(13)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 42835 offset = 851 page no = 41 Thread(123:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(123:13/RU) 22 Page(41:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(26) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(41:13/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(0:13/26)
[PageFaultHandler][do_handlePageFault] Frame(26) is dirty, do swap-out, Thread(123:13/W0)
[PageFaultHandler][SwapOut] page Page(0:13/26) frame Frame(26)file Openfile(152:13/0)
[PageFaultHandler][SwapOut] block no 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(1061),Device(0),Page(0:13/26),Diskblock(0),FileWrite,Openfile(152:13/0),Thread(123:13/W1)) this Page(0:13/26)
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(22:13/13)
[PageFaultHandler][do_handlePageFault] thread Thread(121:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(0:13/26)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(26) Page(0:13/26)Thread(123:13/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(41:13/null) setframe Frame(26)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1062),Device(0),Page(41:13/26),Diskblock(41),FileRead,Openfile(152:13/0),Thread(123:13/W1)) this Page(41:13/26)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(123:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(123:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 33947 offset = 155 page no = 33 Thread(118:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(118:14/RU) 22 Page(33:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(11) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(33:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(33:3/11)
[PageFaultHandler][do_handlePageFault] Frame(11) is dirty, do swap-out, Thread(118:14/W0)
[PageFaultHandler][SwapOut] page Page(33:3/11) frame Frame(11)file Openfile(156:14/0)
[PageFaultHandler][SwapOut] block no 33
[Info][PageTableEntry][do_lock] iorb IORB(Id(1063),Device(0),Page(33:3/11),Diskblock(97),FileWrite,Openfile(156:14/0),Thread(118:14/W1)) this Page(33:3/11)
[Info][PageTableEntry][do_lock] Get frame Frame(11)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(41:13/26)
[PageFaultHandler][do_handlePageFault] thread Thread(123:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 13984 offset = 672 page no = 13 Thread(121:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(121:13/RU) 21 Page(13:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(26) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(13:13/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(41:13/26)
[PageFaultHandler][do_handlePageFault] Frame(26) is dirty, do swap-out, Thread(121:13/W0)
[PageFaultHandler][SwapOut] page Page(41:13/26) frame Frame(26)file Openfile(152:13/0)
[PageFaultHandler][SwapOut] block no 41
[Info][PageTableEntry][do_lock] iorb IORB(Id(1064),Device(0),Page(41:13/26),Diskblock(41),FileWrite,Openfile(152:13/0),Thread(121:13/W1)) this Page(41:13/26)
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(33:3/11)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(11) Page(33:3/11)Thread(118:14/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(33:14/null) setframe Frame(11)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1065),Device(0),Page(33:14/11),Diskblock(97),FileRead,Openfile(156:14/0),Thread(118:14/W1)) this Page(33:14/11)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(118:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(118:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(11)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(41:13/26)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(26) Page(41:13/26)Thread(121:13/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(13:13/null) setframe Frame(26)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1066),Device(0),Page(13:13/26),Diskblock(13),FileRead,Openfile(152:13/0),Thread(121:13/W1)) this Page(13:13/26)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(121:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(121:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 173015/250000[PageTableEntry][do_unlock] this Page(33:14/11)
[PageFaultHandler][do_handlePageFault] thread Thread(118:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 51561 offset = 361 page no = 50 Thread(111:13/RU)
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(13:13/26)
[PageFaultHandler][do_handlePageFault] thread Thread(121:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 33573 offset = 805 page no = 32 Thread(120:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(120:13/RU) 22 Page(32:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(23) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(32:13/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(41:3/23)
[PageFaultHandler][do_handlePageFault] Frame(23) is dirty, do swap-out, Thread(120:13/W0)
[PageFaultHandler][SwapOut] page Page(41:3/23) frame Frame(23)file Openfile(152:13/0)
[PageFaultHandler][SwapOut] block no 41
[Info][PageTableEntry][do_lock] iorb IORB(Id(1067),Device(0),Page(41:3/23),Diskblock(41),FileWrite,Openfile(152:13/0),Thread(120:13/W1)) this Page(41:3/23)
[Info][PageTableEntry][do_lock] Get frame Frame(23)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(41:3/23)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(23) Page(41:3/23)Thread(120:13/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(32:13/null) setframe Frame(23)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1068),Device(0),Page(32:13/23),Diskblock(32),FileRead,Openfile(152:13/0),Thread(120:13/W1)) this Page(32:13/23)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(120:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(120:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(23)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(32:13/23)
[PageFaultHandler][do_handlePageFault] thread Thread(120:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 35040 offset = 224 page no = 34 Thread(118:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(118:14/RU) 21 Page(34:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(2) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(34:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(4:14/2)
[PageFaultHandler][do_handlePageFault] page Page(34:14/null) setframe Frame(2)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1069),Device(0),Page(34:14/2),Diskblock(98),FileRead,Openfile(156:14/0),Thread(118:14/W1)) this Page(34:14/2)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(118:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(118:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 2621 offset = 573 page no = 2 Thread(121:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(121:13/RU) 21 Page(2:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(9) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(2:13/null)
[PageFaultHandler][do_handlePageFault] page Page(2:13/null) setframe Frame(9)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1070),Device(0),Page(2:13/9),Diskblock(2),FileRead,Openfile(152:13/0),Thread(121:13/W1)) this Page(2:13/9)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(121:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(121:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(34:14/2)
[PageFaultHandler][do_handlePageFault] thread Thread(118:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(2:13/9)
[PageFaultHandler][do_handlePageFault] thread Thread(121:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 60004 offset = 612 page no = 58 Thread(120:13/RU)
[MMU][do_refer] Do memory write.
Simulation progress: 174020/250000[Info][PageTableEntry][do_lock] iorb IORB(Id(1071),Device(1),Page(0:13/null),Diskblock(17),FileWrite,Openfile(160:13/1),Thread(113:13/W0)) this Page(0:13/null)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] requrest_thread = Thread(113:13/W0)
[Info][PageTableEntry][do_lock] validating_thread is null, handlePageFault
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(113:13/W0) 23 Page(0:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(9) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(0:13/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(2:13/9)
[PageFaultHandler][do_handlePageFault] page Page(0:13/null) setframe Frame(9)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1072),Device(0),Page(0:13/9),Diskblock(0),FileRead,Openfile(152:13/0),Thread(113:13/W2)) this Page(0:13/9)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(113:13/W2)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(113:13/W2)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(0:13/9)
[PageFaultHandler][do_handlePageFault] thread Thread(113:13/W1) status = 31
 Thread do_handlePageFault Success
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 27110 offset = 486 page no = 26 Thread(125:13/RU)
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(0:13/9)
[MMU][do_refer] address = 47584 offset = 480 page no = 46 Thread(120:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(120:13/RU) 21 Page(46:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(18) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(46:13/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(39:14/18)
[PageFaultHandler][do_handlePageFault] page Page(46:13/null) setframe Frame(18)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1073),Device(0),Page(46:13/18),Diskblock(46),FileRead,Openfile(152:13/0),Thread(120:13/W1)) this Page(46:13/18)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(120:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(120:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(46:13/18)
[PageFaultHandler][do_handlePageFault] thread Thread(120:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
Simulation progress: 175031/250000[MMU][do_refer] address = 21258 offset = 778 page no = 20 Thread(117:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(117:13/RU) 22 Page(20:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(17) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(20:13/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(34:13/17)
[PageFaultHandler][do_handlePageFault] page Page(20:13/null) setframe Frame(17)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1074),Device(0),Page(20:13/17),Diskblock(20),FileRead,Openfile(152:13/0),Thread(117:13/W1)) this Page(20:13/17)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(117:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(117:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(20:13/17)
[PageFaultHandler][do_handlePageFault] thread Thread(117:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 64923 offset = 411 page no = 63 Thread(113:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(113:13/RU) 21 Page(63:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(16) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(63:13/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(12:13/16)
[PageFaultHandler][do_handlePageFault] page Page(63:13/null) setframe Frame(16)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1075),Device(0),Page(63:13/16),Diskblock(63),FileRead,Openfile(152:13/0),Thread(113:13/W1)) this Page(63:13/16)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(113:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(113:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(63:13/16)
[PageFaultHandler][do_handlePageFault] thread Thread(113:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 28514 offset = 866 page no = 27 Thread(117:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(117:13/RU) 21 Page(27:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(24) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(27:13/null)
[PageFaultHandler][do_handlePageFault] page Page(27:13/null) setframe Frame(24)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1076),Device(0),Page(27:13/24),Diskblock(27),FileRead,Openfile(152:13/0),Thread(117:13/W1)) this Page(27:13/24)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(117:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(117:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(24)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(27:13/24)
[PageFaultHandler][do_handlePageFault] thread Thread(117:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 35734 offset = 918 page no = 34 Thread(120:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(120:13/RU) 22 Page(34:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(0) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(34:13/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(28:13/0)
[PageFaultHandler][do_handlePageFault] page Page(34:13/null) setframe Frame(0)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1077),Device(0),Page(34:13/0),Diskblock(34),FileRead,Openfile(152:13/0),Thread(120:13/W1)) this Page(34:13/0)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(120:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(120:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(34:13/0)
[PageFaultHandler][do_handlePageFault] thread Thread(120:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[Info][PageTableEntry][do_lock] iorb IORB(Id(1078),Device(1),Page(0:13/9),Diskblock(5),FileRead,Openfile(162:13/1),Thread(117:13/W0)) this Page(0:13/9)
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(0:13/9)
[MMU][do_refer] address = 61093 offset = 677 page no = 59 Thread(120:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(120:13/RU) 22 Page(59:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(14) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(59:13/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(58:13/14)
[PageFaultHandler][do_handlePageFault] Frame(14) is dirty, do swap-out, Thread(120:13/W0)
[PageFaultHandler][SwapOut] page Page(58:13/14) frame Frame(14)file Openfile(152:13/0)
[PageFaultHandler][SwapOut] block no 58
[Info][PageTableEntry][do_lock] iorb IORB(Id(1079),Device(0),Page(58:13/14),Diskblock(58),FileWrite,Openfile(152:13/0),Thread(120:13/W1)) this Page(58:13/14)
[Info][PageTableEntry][do_lock] Get frame Frame(14)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 176033/250000[PageTableEntry][do_unlock] this Page(58:13/14)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(14) Page(58:13/14)Thread(120:13/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(59:13/null) setframe Frame(14)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1080),Device(0),Page(59:13/14),Diskblock(59),FileRead,Openfile(152:13/0),Thread(120:13/W1)) this Page(59:13/14)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(120:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(120:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(14)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(59:13/14)
[PageFaultHandler][do_handlePageFault] thread Thread(120:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 19801 offset = 345 page no = 19 Thread(117:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(117:13/RU) 22 Page(19:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(8) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(19:13/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(22:3/8)
[PageFaultHandler][do_handlePageFault] page Page(19:13/null) setframe Frame(8)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1081),Device(0),Page(19:13/8),Diskblock(19),FileRead,Openfile(152:13/0),Thread(117:13/W1)) this Page(19:13/8)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(117:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(117:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 30056 offset = 360 page no = 29 Thread(113:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(113:13/RU) 21 Page(29:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(25) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(29:13/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(9:13/25)
[PageFaultHandler][do_handlePageFault] page Page(29:13/null) setframe Frame(25)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1082),Device(0),Page(29:13/25),Diskblock(29),FileRead,Openfile(152:13/0),Thread(113:13/W1)) this Page(29:13/25)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(113:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(113:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(25)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(19:13/8)
[PageFaultHandler][do_handlePageFault] thread Thread(117:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 13418 offset = 106 page no = 13 Thread(120:13/RU)
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(29:13/25)
[PageFaultHandler][do_handlePageFault] thread Thread(113:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 45690 offset = 634 page no = 44 Thread(117:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(117:13/RU) 22 Page(44:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(25) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(44:13/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(29:13/25)
[PageFaultHandler][do_handlePageFault] page Page(44:13/null) setframe Frame(25)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1083),Device(0),Page(44:13/25),Diskblock(44),FileRead,Openfile(152:13/0),Thread(117:13/W1)) this Page(44:13/25)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(117:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(117:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(25)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 48803 offset = 675 page no = 47 Thread(122:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(122:13/RU) 22 Page(47:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(5) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(47:13/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(30:13/5)
[PageFaultHandler][do_handlePageFault] page Page(47:13/null) setframe Frame(5)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1084),Device(0),Page(47:13/5),Diskblock(47),FileRead,Openfile(152:13/0),Thread(122:13/W1)) this Page(47:13/5)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(122:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(122:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(44:13/25)
[PageFaultHandler][do_handlePageFault] thread Thread(117:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(47:13/5)
[PageFaultHandler][do_handlePageFault] thread Thread(122:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 62569 offset = 105 page no = 61 Thread(126:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(126:14/RU) 21 Page(61:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(5) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(61:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(47:13/5)
[PageFaultHandler][do_handlePageFault] Frame(5) is dirty, do swap-out, Thread(126:14/W0)
[PageFaultHandler][SwapOut] page Page(47:13/5) frame Frame(5)file Openfile(156:14/0)
[PageFaultHandler][SwapOut] block no 47
[Info][PageTableEntry][do_lock] iorb IORB(Id(1085),Device(0),Page(47:13/5),Diskblock(111),FileWrite,Openfile(156:14/0),Thread(126:14/W1)) this Page(47:13/5)
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(47:13/5)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(5) Page(47:13/5)Thread(126:14/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(61:14/null) setframe Frame(5)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1086),Device(0),Page(61:14/5),Diskblock(125),FileRead,Openfile(156:14/0),Thread(126:14/W1)) this Page(61:14/5)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(126:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(126:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 11418 offset = 154 page no = 11 Thread(113:13/RU)
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 55985 offset = 689 page no = 54 Thread(122:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(122:13/RU) 21 Page(54:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(12) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(54:13/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(3:13/12)
[PageFaultHandler][do_handlePageFault] Frame(12) is dirty, do swap-out, Thread(122:13/W0)
[PageFaultHandler][SwapOut] page Page(3:13/12) frame Frame(12)file Openfile(152:13/0)
[PageFaultHandler][SwapOut] block no 3
[Info][PageTableEntry][do_lock] iorb IORB(Id(1087),Device(0),Page(3:13/12),Diskblock(3),FileWrite,Openfile(152:13/0),Thread(122:13/W1)) this Page(3:13/12)
[Info][PageTableEntry][do_lock] Get frame Frame(12)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(61:14/5)
[PageFaultHandler][do_handlePageFault] thread Thread(126:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
Simulation progress: 177021/250000[PageTableEntry][do_unlock] this Page(3:13/12)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(12) Page(3:13/12)Thread(122:13/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(54:13/null) setframe Frame(12)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1088),Device(0),Page(54:13/12),Diskblock(54),FileRead,Openfile(152:13/0),Thread(122:13/W1)) this Page(54:13/12)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(122:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(122:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(12)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 1612 offset = 588 page no = 1 Thread(117:13/RU)
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(54:13/12)
[PageFaultHandler][do_handlePageFault] thread Thread(122:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 7369 offset = 201 page no = 7 Thread(126:14/RU)
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 62394 offset = 954 page no = 60 Thread(118:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(118:14/RU) 21 Page(60:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(12) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(60:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(54:13/12)
[PageFaultHandler][do_handlePageFault] page Page(60:14/null) setframe Frame(12)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1089),Device(0),Page(60:14/12),Diskblock(124),FileRead,Openfile(156:14/0),Thread(118:14/W1)) this Page(60:14/12)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(118:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(118:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(12)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 48928 offset = 800 page no = 47 Thread(124:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(124:13/RU) 22 Page(47:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(1) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(47:13/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(3:14/1)
[PageFaultHandler][do_handlePageFault] Frame(1) is dirty, do swap-out, Thread(124:13/W0)
[PageFaultHandler][SwapOut] page Page(3:14/1) frame Frame(1)file Openfile(152:13/0)
[PageFaultHandler][SwapOut] block no 3
[Info][PageTableEntry][do_lock] iorb IORB(Id(1090),Device(0),Page(3:14/1),Diskblock(3),FileWrite,Openfile(152:13/0),Thread(124:13/W1)) this Page(3:14/1)
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 16741 offset = 357 page no = 16 Thread(122:13/RU)
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(60:14/12)
[PageFaultHandler][do_handlePageFault] thread Thread(118:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 7893 offset = 725 page no = 7 Thread(117:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(117:13/RU) 21 Page(7:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(7) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(7:13/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(1:13/7)
[PageFaultHandler][do_handlePageFault] Frame(7) is dirty, do swap-out, Thread(117:13/W0)
[PageFaultHandler][SwapOut] page Page(1:13/7) frame Frame(7)file Openfile(152:13/0)
[PageFaultHandler][SwapOut] block no 1
[Info][PageTableEntry][do_lock] iorb IORB(Id(1091),Device(0),Page(1:13/7),Diskblock(1),FileWrite,Openfile(152:13/0),Thread(117:13/W1)) this Page(1:13/7)
[Info][PageTableEntry][do_lock] Get frame Frame(7)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(3:14/1)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(1) Page(3:14/1)Thread(124:13/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(47:13/null) setframe Frame(1)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1092),Device(0),Page(47:13/1),Diskblock(47),FileRead,Openfile(152:13/0),Thread(124:13/W1)) this Page(47:13/1)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(124:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(124:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(1:13/7)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(7) Page(1:13/7)Thread(117:13/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(7:13/null) setframe Frame(7)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1093),Device(0),Page(7:13/7),Diskblock(7),FileRead,Openfile(152:13/0),Thread(117:13/W1)) this Page(7:13/7)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(117:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(117:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(7)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(47:13/1)
[PageFaultHandler][do_handlePageFault] thread Thread(124:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(7:13/7)
[PageFaultHandler][do_handlePageFault] thread Thread(117:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
Simulation progress: 178052/250000[MMU][do_refer] address = 8804 offset = 612 page no = 8 Thread(118:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(118:14/RU) 21 Page(8:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(1) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(8:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(47:13/1)
[PageFaultHandler][do_handlePageFault] Frame(1) is dirty, do swap-out, Thread(118:14/W0)
[PageFaultHandler][SwapOut] page Page(47:13/1) frame Frame(1)file Openfile(156:14/0)
[PageFaultHandler][SwapOut] block no 47
[Info][PageTableEntry][do_lock] iorb IORB(Id(1094),Device(0),Page(47:13/1),Diskblock(111),FileWrite,Openfile(156:14/0),Thread(118:14/W1)) this Page(47:13/1)
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 20853 offset = 373 page no = 20 Thread(122:13/RU)
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(47:13/1)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(1) Page(47:13/1)Thread(118:14/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(8:14/null) setframe Frame(1)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1095),Device(0),Page(8:14/1),Diskblock(72),FileRead,Openfile(156:14/0),Thread(118:14/W1)) this Page(8:14/1)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(118:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(118:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(8:14/1)
[PageFaultHandler][do_handlePageFault] thread Thread(118:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 4793 offset = 697 page no = 4 Thread(120:13/RU)
[MMU][do_refer] Do memory read.
Simulation progress: 179021/250000[MMU][do_refer] address = 63494 offset = 6 page no = 62 Thread(118:14/RU)
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 53166 offset = 942 page no = 51 Thread(118:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(118:14/RU) 21 Page(51:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(21) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(51:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(59:14/21)
[PageFaultHandler][do_handlePageFault] Frame(21) is dirty, do swap-out, Thread(118:14/W0)
[PageFaultHandler][SwapOut] page Page(59:14/21) frame Frame(21)file Openfile(156:14/0)
[PageFaultHandler][SwapOut] block no 59
[Info][PageTableEntry][do_lock] iorb IORB(Id(1096),Device(0),Page(59:14/21),Diskblock(123),FileWrite,Openfile(156:14/0),Thread(118:14/W1)) this Page(59:14/21)
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 10167 offset = 951 page no = 9 Thread(126:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(126:14/RU) 21 Page(9:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(15) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(9:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(17:13/15)
[PageFaultHandler][do_handlePageFault] page Page(9:14/null) setframe Frame(15)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1097),Device(0),Page(9:14/15),Diskblock(73),FileRead,Openfile(156:14/0),Thread(126:14/W1)) this Page(9:14/15)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(126:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(126:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(15)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(59:14/21)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(21) Page(59:14/21)Thread(118:14/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(51:14/null) setframe Frame(21)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1098),Device(0),Page(51:14/21),Diskblock(115),FileRead,Openfile(156:14/0),Thread(118:14/W1)) this Page(51:14/21)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(118:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(118:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 40312 offset = 376 page no = 39 Thread(124:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(124:13/RU) 22 Page(39:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(27) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(39:13/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(16:13/27)
[PageFaultHandler][do_handlePageFault] page Page(39:13/null) setframe Frame(27)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1099),Device(0),Page(39:13/27),Diskblock(39),FileRead,Openfile(152:13/0),Thread(124:13/W1)) this Page(39:13/27)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(124:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(124:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(9:14/15)
[PageFaultHandler][do_handlePageFault] thread Thread(126:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(51:14/21)
[PageFaultHandler][do_handlePageFault] thread Thread(118:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(39:13/27)
[PageFaultHandler][do_handlePageFault] thread Thread(124:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 32225 offset = 481 page no = 31 Thread(118:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(118:14/RU) 22 Page(31:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(27) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(31:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(39:13/27)
[PageFaultHandler][do_handlePageFault] Frame(27) is dirty, do swap-out, Thread(118:14/W0)
[PageFaultHandler][SwapOut] page Page(39:13/27) frame Frame(27)file Openfile(156:14/0)
[PageFaultHandler][SwapOut] block no 39
[Info][PageTableEntry][do_lock] iorb IORB(Id(1100),Device(0),Page(39:13/27),Diskblock(103),FileWrite,Openfile(156:14/0),Thread(118:14/W1)) this Page(39:13/27)
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(39:13/27)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(27) Page(39:13/27)Thread(118:14/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(31:14/null) setframe Frame(27)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1101),Device(0),Page(31:14/27),Diskblock(95),FileRead,Openfile(156:14/0),Thread(118:14/W1)) this Page(31:14/27)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(118:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(118:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(31:14/27)
[PageFaultHandler][do_handlePageFault] thread Thread(118:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageCleanDaemon][unleash] osp.Memory.PageCleanDaemon@e14d43 execute time 180000
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(4)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(29)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(13)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(11)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(6)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(26)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(4)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(4) Page(62:14/4) isDirty true
[PageFaultHandler][SwapOut] file Openfile(156:14/0)
[PageFaultHandler][SwapOut] block no 62
[Info][PageTableEntry][do_lock] iorb IORB(Id(1102),Device(0),Page(62:14/4),Diskblock(126),FileWrite,Openfile(156:14/0),Thread(128:0/W1)) this Page(62:14/4)
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 180024/250000[PageTableEntry][do_unlock] this Page(62:14/4)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(4) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(29)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(29) Page(50:13/29) isDirty true
[PageFaultHandler][SwapOut] file Openfile(152:13/0)
[PageFaultHandler][SwapOut] block no 50
[Info][PageTableEntry][do_lock] iorb IORB(Id(1103),Device(0),Page(50:13/29),Diskblock(50),FileWrite,Openfile(152:13/0),Thread(128:0/W1)) this Page(50:13/29)
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(50:13/29)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(29) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(13)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(13) Page(22:13/13) isDirty true
[PageFaultHandler][SwapOut] file Openfile(152:13/0)
[PageFaultHandler][SwapOut] block no 22
[Info][PageTableEntry][do_lock] iorb IORB(Id(1104),Device(0),Page(22:13/13),Diskblock(22),FileWrite,Openfile(152:13/0),Thread(128:0/W1)) this Page(22:13/13)
[Info][PageTableEntry][do_lock] Get frame Frame(13)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(22:13/13)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(13) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(11)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(11) Page(33:14/11) isDirty true
[PageFaultHandler][SwapOut] file Openfile(156:14/0)
[PageFaultHandler][SwapOut] block no 33
[Info][PageTableEntry][do_lock] iorb IORB(Id(1105),Device(0),Page(33:14/11),Diskblock(97),FileWrite,Openfile(156:14/0),Thread(128:0/W1)) this Page(33:14/11)
[Info][PageTableEntry][do_lock] Get frame Frame(11)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 60807 offset = 391 page no = 59 Thread(124:13/RU)
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(33:14/11)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(11) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(6)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(6) Page(7:14/6) isDirty true
[PageFaultHandler][SwapOut] file Openfile(156:14/0)
[PageFaultHandler][SwapOut] block no 7
[Info][PageTableEntry][do_lock] iorb IORB(Id(1106),Device(0),Page(7:14/6),Diskblock(71),FileWrite,Openfile(156:14/0),Thread(128:0/W1)) this Page(7:14/6)
[Info][PageTableEntry][do_lock] Get frame Frame(6)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(7:14/6)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(6) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(26)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(26) Page(13:13/26) isDirty true
[PageFaultHandler][SwapOut] file Openfile(152:13/0)
[PageFaultHandler][SwapOut] block no 13
[Info][PageTableEntry][do_lock] iorb IORB(Id(1107),Device(0),Page(13:13/26),Diskblock(13),FileWrite,Openfile(152:13/0),Thread(128:0/W1)) this Page(13:13/26)
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(13:13/26)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(26) finish
[MMU][do_refer] address = 25421 offset = 845 page no = 24 Thread(122:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(122:13/RU) 21 Page(24:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(4) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(24:13/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(62:14/4)
[PageFaultHandler][do_handlePageFault] page Page(24:13/null) setframe Frame(4)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1108),Device(0),Page(24:13/4),Diskblock(24),FileRead,Openfile(152:13/0),Thread(122:13/W1)) this Page(24:13/4)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(122:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(122:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(24:13/4)
[PageFaultHandler][do_handlePageFault] thread Thread(122:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 17409 offset = 1 page no = 17 Thread(124:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(124:13/RU) 21 Page(17:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(29) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(17:13/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(50:13/29)
[PageFaultHandler][do_handlePageFault] page Page(17:13/null) setframe Frame(29)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1109),Device(0),Page(17:13/29),Diskblock(17),FileRead,Openfile(152:13/0),Thread(124:13/W1)) this Page(17:13/29)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(124:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(124:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(17:13/29)
[PageFaultHandler][do_handlePageFault] thread Thread(124:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 58335 offset = 991 page no = 56 Thread(118:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(118:14/RU) 21 Page(56:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(13) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(56:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(22:13/13)
[PageFaultHandler][do_handlePageFault] page Page(56:14/null) setframe Frame(13)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1110),Device(0),Page(56:14/13),Diskblock(120),FileRead,Openfile(156:14/0),Thread(118:14/W1)) this Page(56:14/13)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(118:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(118:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(13)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(56:14/13)
[PageFaultHandler][do_handlePageFault] thread Thread(118:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 47577 offset = 473 page no = 46 Thread(124:13/RU)
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 18029 offset = 621 page no = 17 Thread(124:13/RU)
[MMU][do_refer] Do memory write.
Simulation progress: 181016/250000[MMU][do_refer] address = 4017 offset = 945 page no = 3 Thread(124:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(124:13/RU) 22 Page(3:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(11) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(3:13/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(33:14/11)
[PageFaultHandler][do_handlePageFault] page Page(3:13/null) setframe Frame(11)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1111),Device(0),Page(3:13/11),Diskblock(3),FileRead,Openfile(152:13/0),Thread(124:13/W1)) this Page(3:13/11)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(124:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(124:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(11)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(3:13/11)
[PageFaultHandler][do_handlePageFault] thread Thread(124:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 16261 offset = 901 page no = 15 Thread(122:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(122:13/RU) 21 Page(15:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(6) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(15:13/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(7:14/6)
[PageFaultHandler][do_handlePageFault] page Page(15:13/null) setframe Frame(6)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1112),Device(0),Page(15:13/6),Diskblock(15),FileRead,Openfile(152:13/0),Thread(122:13/W1)) this Page(15:13/6)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(122:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(122:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(6)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(15:13/6)
[PageFaultHandler][do_handlePageFault] thread Thread(122:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[Info][PageTableEntry][do_lock] iorb IORB(Id(1113),Device(2),Page(0:13/9),Diskblock(15),FileRead,Openfile(168:13/2),Thread(124:13/W0)) this Page(0:13/9)
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(1114),Device(2),Page(3:13/11),Diskblock(15),FileRead,Openfile(168:13/2),Thread(122:13/W0)) this Page(3:13/11)
[Info][PageTableEntry][do_lock] Get frame Frame(11)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(1115),Device(1),Page(8:14/1),Diskblock(26),FileRead,Openfile(166:14/1),Thread(118:14/W0)) this Page(8:14/1)
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(8:14/1)
Simulation progress: 182089/250000[PageTableEntry][do_unlock] this Page(0:13/9)
[MMU][do_refer] address = 11454 offset = 190 page no = 11 Thread(113:13/RU)
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 36733 offset = 893 page no = 35 Thread(113:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(113:13/RU) 22 Page(35:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(26) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(35:13/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(13:13/26)
[PageFaultHandler][do_handlePageFault] page Page(35:13/null) setframe Frame(26)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1116),Device(0),Page(35:13/26),Diskblock(35),FileRead,Openfile(152:13/0),Thread(113:13/W1)) this Page(35:13/26)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(113:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(113:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(35:13/26)
[PageFaultHandler][do_handlePageFault] thread Thread(113:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 33040 offset = 272 page no = 32 Thread(124:13/RU)
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 22588 offset = 60 page no = 22 Thread(124:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(124:13/RU) 22 Page(22:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(23) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(22:13/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(32:13/23)
[PageFaultHandler][do_handlePageFault] Frame(23) is dirty, do swap-out, Thread(124:13/W0)
[PageFaultHandler][SwapOut] page Page(32:13/23) frame Frame(23)file Openfile(152:13/0)
[PageFaultHandler][SwapOut] block no 32
[Info][PageTableEntry][do_lock] iorb IORB(Id(1117),Device(0),Page(32:13/23),Diskblock(32),FileWrite,Openfile(152:13/0),Thread(124:13/W1)) this Page(32:13/23)
[Info][PageTableEntry][do_lock] Get frame Frame(23)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(32:13/23)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(23) Page(32:13/23)Thread(124:13/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(22:13/null) setframe Frame(23)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1118),Device(0),Page(22:13/23),Diskblock(22),FileRead,Openfile(152:13/0),Thread(124:13/W1)) this Page(22:13/23)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(124:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(124:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(23)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(22:13/23)
[PageFaultHandler][do_handlePageFault] thread Thread(124:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(3:13/11)
Simulation progress: 183008/250000[Info][PageTableEntry][do_lock] iorb IORB(Id(1119),Device(2),Page(1:13/null),Diskblock(1),FileWrite,Openfile(170:13/2),Thread(113:13/W0)) this Page(1:13/null)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] requrest_thread = Thread(113:13/W0)
[Info][PageTableEntry][do_lock] validating_thread is null, handlePageFault
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(113:13/W0) 23 Page(1:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(2) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(1:13/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(34:14/2)
[PageFaultHandler][do_handlePageFault] page Page(1:13/null) setframe Frame(2)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1120),Device(0),Page(1:13/2),Diskblock(1),FileRead,Openfile(152:13/0),Thread(113:13/W2)) this Page(1:13/2)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(113:13/W2)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(113:13/W2)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(1121),Device(2),Page(0:13/9),Diskblock(1),FileRead,Openfile(170:13/2),Thread(124:13/W0)) this Page(0:13/9)
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(1:13/2)
[PageFaultHandler][do_handlePageFault] thread Thread(113:13/W1) status = 31
 Thread do_handlePageFault Success
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 37739 offset = 875 page no = 36 Thread(129:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(129:14/RU) 21 Page(36:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(3) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(36:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(14:13/3)
[PageFaultHandler][do_handlePageFault] Frame(3) is dirty, do swap-out, Thread(129:14/W0)
[PageFaultHandler][SwapOut] page Page(14:13/3) frame Frame(3)file Openfile(156:14/0)
[PageFaultHandler][SwapOut] block no 14
[Info][PageTableEntry][do_lock] iorb IORB(Id(1122),Device(0),Page(14:13/3),Diskblock(78),FileWrite,Openfile(156:14/0),Thread(129:14/W1)) this Page(14:13/3)
[Info][PageTableEntry][do_lock] Get frame Frame(3)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 28562 offset = 914 page no = 27 Thread(122:13/RU)
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(14:13/3)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(3) Page(14:13/3)Thread(129:14/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(36:14/null) setframe Frame(3)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1123),Device(0),Page(36:14/3),Diskblock(100),FileRead,Openfile(156:14/0),Thread(129:14/W1)) this Page(36:14/3)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(129:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(129:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(3)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(36:14/3)
[PageFaultHandler][do_handlePageFault] thread Thread(129:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 7803 offset = 635 page no = 7 Thread(130:13/RU)
[MMU][do_refer] Do memory read.
Simulation progress: 184003/250000[PageTableEntry][do_unlock] this Page(0:13/9)
[MMU][do_refer] address = 56214 offset = 918 page no = 54 Thread(129:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(129:14/RU) 21 Page(54:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(9) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(54:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(0:13/9)
[PageFaultHandler][do_handlePageFault] Frame(9) is dirty, do swap-out, Thread(129:14/W0)
[PageFaultHandler][SwapOut] page Page(0:13/9) frame Frame(9)file Openfile(156:14/0)
[PageFaultHandler][SwapOut] block no 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(1124),Device(0),Page(0:13/9),Diskblock(64),FileWrite,Openfile(156:14/0),Thread(129:14/W1)) this Page(0:13/9)
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 4048 offset = 976 page no = 3 Thread(124:13/RU)
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(0:13/9)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(9) Page(0:13/9)Thread(129:14/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(54:14/null) setframe Frame(9)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1125),Device(0),Page(54:14/9),Diskblock(118),FileRead,Openfile(156:14/0),Thread(129:14/W1)) this Page(54:14/9)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(129:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(129:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 44843 offset = 811 page no = 43 Thread(130:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(130:13/RU) 22 Page(43:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(18) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(43:13/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(46:13/18)
[PageFaultHandler][do_handlePageFault] Frame(18) is dirty, do swap-out, Thread(130:13/W0)
[PageFaultHandler][SwapOut] page Page(46:13/18) frame Frame(18)file Openfile(152:13/0)
[PageFaultHandler][SwapOut] block no 46
[Info][PageTableEntry][do_lock] iorb IORB(Id(1126),Device(0),Page(46:13/18),Diskblock(46),FileWrite,Openfile(152:13/0),Thread(130:13/W1)) this Page(46:13/18)
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(1:13/2)
[PageTableEntry][do_unlock] this Page(54:14/9)
[PageFaultHandler][do_handlePageFault] thread Thread(129:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(46:13/18)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(18) Page(46:13/18)Thread(130:13/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(43:13/null) setframe Frame(18)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1127),Device(0),Page(43:13/18),Diskblock(43),FileRead,Openfile(152:13/0),Thread(130:13/W1)) this Page(43:13/18)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(130:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(130:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(43:13/18)
[PageFaultHandler][do_handlePageFault] thread Thread(130:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
Simulation progress: 185028/250000[MMU][do_refer] address = 49369 offset = 217 page no = 48 Thread(129:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(129:14/RU) 22 Page(48:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(18) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(48:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(43:13/18)
[PageFaultHandler][do_handlePageFault] Frame(18) is dirty, do swap-out, Thread(129:14/W0)
[PageFaultHandler][SwapOut] page Page(43:13/18) frame Frame(18)file Openfile(156:14/0)
[PageFaultHandler][SwapOut] block no 43
[Info][PageTableEntry][do_lock] iorb IORB(Id(1128),Device(0),Page(43:13/18),Diskblock(107),FileWrite,Openfile(156:14/0),Thread(129:14/W1)) this Page(43:13/18)
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(43:13/18)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(18) Page(43:13/18)Thread(129:14/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(48:14/null) setframe Frame(18)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1129),Device(0),Page(48:14/18),Diskblock(112),FileRead,Openfile(156:14/0),Thread(129:14/W1)) this Page(48:14/18)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(129:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(129:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(48:14/18)
[PageFaultHandler][do_handlePageFault] thread Thread(129:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 40341 offset = 405 page no = 39 Thread(124:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(124:13/RU) 21 Page(39:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(16) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(39:13/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(63:13/16)
[PageFaultHandler][do_handlePageFault] page Page(39:13/null) setframe Frame(16)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1130),Device(0),Page(39:13/16),Diskblock(39),FileRead,Openfile(152:13/0),Thread(124:13/W1)) this Page(39:13/16)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(124:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(124:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(39:13/16)
[PageFaultHandler][do_handlePageFault] thread Thread(124:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 39181 offset = 269 page no = 38 Thread(130:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(130:13/RU) 22 Page(38:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(24) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(38:13/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(27:13/24)
[PageFaultHandler][do_handlePageFault] Frame(24) is dirty, do swap-out, Thread(130:13/W0)
[PageFaultHandler][SwapOut] page Page(27:13/24) frame Frame(24)file Openfile(152:13/0)
[PageFaultHandler][SwapOut] block no 27
[Info][PageTableEntry][do_lock] iorb IORB(Id(1131),Device(0),Page(27:13/24),Diskblock(27),FileWrite,Openfile(152:13/0),Thread(130:13/W1)) this Page(27:13/24)
[Info][PageTableEntry][do_lock] Get frame Frame(24)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(27:13/24)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(24) Page(27:13/24)Thread(130:13/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(38:13/null) setframe Frame(24)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1132),Device(0),Page(38:13/24),Diskblock(38),FileRead,Openfile(152:13/0),Thread(130:13/W1)) this Page(38:13/24)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(130:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(130:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(24)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(38:13/24)
[PageFaultHandler][do_handlePageFault] thread Thread(130:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[Info][PageTableEntry][do_lock] iorb IORB(Id(1133),Device(2),Page(1:13/2),Diskblock(11),FileWrite,Openfile(174:13/2),Thread(124:13/W0)) this Page(1:13/2)
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 186014/250000[MMU][do_refer] address = 27800 offset = 152 page no = 27 Thread(122:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(122:13/RU) 22 Page(27:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(0) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(27:13/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(34:13/0)
[PageFaultHandler][do_handlePageFault] Frame(0) is dirty, do swap-out, Thread(122:13/W0)
[PageFaultHandler][SwapOut] page Page(34:13/0) frame Frame(0)file Openfile(152:13/0)
[PageFaultHandler][SwapOut] block no 34
[Info][PageTableEntry][do_lock] iorb IORB(Id(1134),Device(0),Page(34:13/0),Diskblock(34),FileWrite,Openfile(152:13/0),Thread(122:13/W1)) this Page(34:13/0)
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(1135),Device(2),Page(3:13/11),Diskblock(11),FileWrite,Openfile(174:13/2),Thread(130:13/W0)) this Page(3:13/11)
[Info][PageTableEntry][do_lock] Get frame Frame(11)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(34:13/0)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(0) Page(34:13/0)Thread(122:13/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(27:13/null) setframe Frame(0)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1136),Device(0),Page(27:13/0),Diskblock(27),FileRead,Openfile(152:13/0),Thread(122:13/W1)) this Page(27:13/0)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(122:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(122:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(27:13/0)
[PageFaultHandler][do_handlePageFault] thread Thread(122:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[Info][PageTableEntry][do_lock] iorb IORB(Id(1137),Device(2),Page(4:13/28),Diskblock(11),FileWrite,Openfile(174:13/2),Thread(122:13/W0)) this Page(4:13/28)
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(1:13/2)
[MMU][do_refer] address = 24209 offset = 657 page no = 23 Thread(124:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(124:13/RU) 21 Page(23:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(14) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(23:13/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(59:13/14)
[PageFaultHandler][do_handlePageFault] Frame(14) is dirty, do swap-out, Thread(124:13/W0)
[PageFaultHandler][SwapOut] page Page(59:13/14) frame Frame(14)file Openfile(152:13/0)
[PageFaultHandler][SwapOut] block no 59
[Info][PageTableEntry][do_lock] iorb IORB(Id(1138),Device(0),Page(59:13/14),Diskblock(59),FileWrite,Openfile(152:13/0),Thread(124:13/W1)) this Page(59:13/14)
[Info][PageTableEntry][do_lock] Get frame Frame(14)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(59:13/14)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(14) Page(59:13/14)Thread(124:13/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(23:13/null) setframe Frame(14)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1139),Device(0),Page(23:13/14),Diskblock(23),FileRead,Openfile(152:13/0),Thread(124:13/W1)) this Page(23:13/14)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(124:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(124:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(14)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 187028/250000[PageTableEntry][do_unlock] this Page(23:13/14)
[PageFaultHandler][do_handlePageFault] thread Thread(124:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(3:13/11)
[MMU][do_refer] address = 4437 offset = 341 page no = 4 Thread(130:13/RU)
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 33373 offset = 605 page no = 32 Thread(124:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(124:13/RU) 21 Page(32:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(8) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(32:13/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(19:13/8)
[PageFaultHandler][do_handlePageFault] Frame(8) is dirty, do swap-out, Thread(124:13/W0)
[PageFaultHandler][SwapOut] page Page(19:13/8) frame Frame(8)file Openfile(152:13/0)
[PageFaultHandler][SwapOut] block no 19
[Info][PageTableEntry][do_lock] iorb IORB(Id(1140),Device(0),Page(19:13/8),Diskblock(19),FileWrite,Openfile(152:13/0),Thread(124:13/W1)) this Page(19:13/8)
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 49182 offset = 30 page no = 48 Thread(130:13/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(130:13/RU) 22 Page(48:13/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(19) Reserved by Task(13/L)
[PageFaultHandler][do_handlePageFault] page Page(48:13/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(11:13/19)
[PageFaultHandler][do_handlePageFault] Frame(19) is dirty, do swap-out, Thread(130:13/W0)
[PageFaultHandler][SwapOut] page Page(11:13/19) frame Frame(19)file Openfile(152:13/0)
[PageFaultHandler][SwapOut] block no 11
[Info][PageTableEntry][do_lock] iorb IORB(Id(1141),Device(0),Page(11:13/19),Diskblock(11),FileWrite,Openfile(152:13/0),Thread(130:13/W1)) this Page(11:13/19)
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(19:13/8)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(8) Page(19:13/8)Thread(124:13/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(32:13/null) setframe Frame(8)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1142),Device(0),Page(32:13/8),Diskblock(32),FileRead,Openfile(152:13/0),Thread(124:13/W1)) this Page(32:13/8)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(124:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(124:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(11:13/19)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(19) Page(11:13/19)Thread(130:13/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(48:13/null) setframe Frame(19)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1143),Device(0),Page(48:13/19),Diskblock(48),FileRead,Openfile(152:13/0),Thread(130:13/W1)) this Page(48:13/19)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(130:13/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(130:13/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(32:13/8)
[PageFaultHandler][do_handlePageFault] thread Thread(124:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(4:13/28)
[Info][PageTableEntry][do_lock] iorb IORB(Id(1144),Device(2),Page(1:13/2),Diskblock(3),FileWrite,Openfile(174:13/2),Thread(122:13/W0)) this Page(1:13/2)
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(48:13/19)
[PageFaultHandler][do_handlePageFault] thread Thread(130:13/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 25223 offset = 647 page no = 24 Thread(130:13/RU)
[MMU][do_refer] Do memory read.
[PageTable][do_deallocateMemory] this Pagetable(Task(13/T))
[PageTable][do_deallocateMemory]  page_table_entry Page(1:13/2) frame_table_entry Frame(2)
[PageTable][do_deallocateMemory]  page_table_entry Page(3:13/11) frame_table_entry Frame(11)
[PageTable][do_deallocateMemory]  page_table_entry Page(4:13/28) frame_table_entry Frame(28)
[PageTable][do_deallocateMemory]  page_table_entry Page(7:13/7) frame_table_entry Frame(7)
[PageTable][do_deallocateMemory]  page_table_entry Page(15:13/6) frame_table_entry Frame(6)
[PageTable][do_deallocateMemory]  page_table_entry Page(17:13/29) frame_table_entry Frame(29)
[PageTable][do_deallocateMemory]  page_table_entry Page(20:13/17) frame_table_entry Frame(17)
[PageTable][do_deallocateMemory]  page_table_entry Page(22:13/23) frame_table_entry Frame(23)
[PageTable][do_deallocateMemory]  page_table_entry Page(23:13/14) frame_table_entry Frame(14)
[PageTable][do_deallocateMemory]  page_table_entry Page(24:13/4) frame_table_entry Frame(4)
[PageTable][do_deallocateMemory]  page_table_entry Page(25:13/20) frame_table_entry Frame(20)
[PageTable][do_deallocateMemory]  page_table_entry Page(26:13/10) frame_table_entry Frame(10)
[PageTable][do_deallocateMemory]  page_table_entry Page(27:13/0) frame_table_entry Frame(0)
[PageTable][do_deallocateMemory]  page_table_entry Page(32:13/8) frame_table_entry Frame(8)
[PageTable][do_deallocateMemory]  page_table_entry Page(35:13/26) frame_table_entry Frame(26)
[PageTable][do_deallocateMemory]  page_table_entry Page(37:13/22) frame_table_entry Frame(22)
[PageTable][do_deallocateMemory]  page_table_entry Page(38:13/24) frame_table_entry Frame(24)
[PageTable][do_deallocateMemory]  page_table_entry Page(39:13/16) frame_table_entry Frame(16)
[PageTable][do_deallocateMemory]  page_table_entry Page(44:13/25) frame_table_entry Frame(25)
[PageTable][do_deallocateMemory]  page_table_entry Page(48:13/19) frame_table_entry Frame(19)
[MMU][do_refer] address = 47704 offset = 600 page no = 46 Thread(132:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(132:14/RU) 22 Page(46:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(19) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(46:14/null)
[PageFaultHandler][do_handlePageFault] page Page(46:14/null) setframe Frame(19)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1145),Device(0),Page(46:14/19),Diskblock(110),FileRead,Openfile(156:14/0),Thread(132:14/W1)) this Page(46:14/19)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(132:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(132:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 42538 offset = 554 page no = 41 Thread(126:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(126:14/RU) 22 Page(41:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(28) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(41:14/null)
[PageFaultHandler][do_handlePageFault] page Page(41:14/null) setframe Frame(28)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1146),Device(0),Page(41:14/28),Diskblock(105),FileRead,Openfile(156:14/0),Thread(126:14/W1)) this Page(41:14/28)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(126:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(126:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 188020/250000[PageTableEntry][do_unlock] this Page(46:14/19)
[PageFaultHandler][do_handlePageFault] thread Thread(132:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 54407 offset = 135 page no = 53 Thread(132:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(132:14/RU) 21 Page(53:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(5) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(53:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(61:14/5)
[PageFaultHandler][do_handlePageFault] page Page(53:14/null) setframe Frame(5)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1147),Device(0),Page(53:14/5),Diskblock(117),FileRead,Openfile(156:14/0),Thread(132:14/W1)) this Page(53:14/5)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(132:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(132:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(41:14/28)
[PageFaultHandler][do_handlePageFault] thread Thread(126:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 12222 offset = 958 page no = 11 Thread(133:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(133:15/RU) 22 Page(11:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(28) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(11:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(41:14/28)
[PageFaultHandler][do_handlePageFault] Frame(28) is dirty, do swap-out, Thread(133:15/W0)
[PageFaultHandler][SwapOut] page Page(41:14/28) frame Frame(28)file Openfile(176:15/0)
[PageFaultHandler][SwapOut] block no 41
[Info][PageTableEntry][do_lock] iorb IORB(Id(1148),Device(0),Page(41:14/28),Diskblock(41),FileWrite,Openfile(176:15/0),Thread(133:15/W1)) this Page(41:14/28)
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(53:14/5)
[PageFaultHandler][do_handlePageFault] thread Thread(132:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(41:14/28)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(28) Page(41:14/28)Thread(133:15/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(11:15/null) setframe Frame(28)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1149),Device(0),Page(11:15/28),Diskblock(11),FileRead,Openfile(176:15/0),Thread(133:15/W1)) this Page(11:15/28)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(133:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(133:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(11:15/28)
[PageFaultHandler][do_handlePageFault] thread Thread(133:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(1:13/2)
[Info][PageTableEntry][do_lock] iorb IORB(Id(1150),Device(1),Page(11:15/28),Diskblock(13),FileRead,Openfile(178:15/1),Thread(134:15/W0)) this Page(11:15/28)
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(11:15/28)
[MMU][do_refer] address = 7045 offset = 901 page no = 6 Thread(134:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(134:15/RU) 22 Page(6:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(12) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(6:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(60:14/12)
[PageFaultHandler][do_handlePageFault] page Page(6:15/null) setframe Frame(12)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1151),Device(0),Page(6:15/12),Diskblock(6),FileRead,Openfile(176:15/0),Thread(134:15/W1)) this Page(6:15/12)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(134:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(134:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(12)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(6:15/12)
[PageFaultHandler][do_handlePageFault] thread Thread(134:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 772 offset = 772 page no = 0 Thread(136:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(136:15/RU) 21 Page(0:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(7) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(0:15/null)
[PageFaultHandler][do_handlePageFault] page Page(0:15/null) setframe Frame(7)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1152),Device(0),Page(0:15/7),Diskblock(0),FileRead,Openfile(176:15/0),Thread(136:15/W1)) this Page(0:15/7)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(136:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(136:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(7)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(0:15/7)
[PageFaultHandler][do_handlePageFault] thread Thread(136:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
Simulation progress: 189040/250000[Info][PageTableEntry][do_lock] iorb IORB(Id(1153),Device(1),Page(8:14/1),Diskblock(13),FileWrite,Openfile(178:15/1),Thread(132:14/W0)) this Page(8:14/1)
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 53337 offset = 89 page no = 52 Thread(136:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(136:15/RU) 21 Page(52:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(22) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(52:15/null)
[PageFaultHandler][do_handlePageFault] page Page(52:15/null) setframe Frame(22)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1154),Device(0),Page(52:15/22),Diskblock(52),FileRead,Openfile(176:15/0),Thread(136:15/W1)) this Page(52:15/22)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(136:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(136:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(22)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(8:14/1)
[PageTableEntry][do_unlock] this Page(52:15/22)
[PageFaultHandler][do_handlePageFault] thread Thread(136:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[Info][PageTableEntry][do_lock] iorb IORB(Id(1155),Device(1),Page(8:14/1),Diskblock(32),FileRead,Openfile(178:15/1),Thread(132:14/W0)) this Page(8:14/1)
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 190006/250000[MMU][do_refer] address = 45788 offset = 732 page no = 44 Thread(139:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(139:15/RU) 22 Page(44:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(15) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(44:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(9:14/15)
[PageFaultHandler][do_handlePageFault] page Page(44:15/null) setframe Frame(15)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1156),Device(0),Page(44:15/15),Diskblock(44),FileRead,Openfile(176:15/0),Thread(139:15/W1)) this Page(44:15/15)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(139:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(139:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(15)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(8:14/1)
[PageTableEntry][do_unlock] this Page(44:15/15)
[PageFaultHandler][do_handlePageFault] thread Thread(139:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 11090 offset = 850 page no = 10 Thread(140:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(140:15/RU) 21 Page(10:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(1) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(10:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(8:14/1)
[PageFaultHandler][do_handlePageFault] Frame(1) is dirty, do swap-out, Thread(140:15/W0)
[PageFaultHandler][SwapOut] page Page(8:14/1) frame Frame(1)file Openfile(176:15/0)
[PageFaultHandler][SwapOut] block no 8
[Info][PageTableEntry][do_lock] iorb IORB(Id(1157),Device(0),Page(8:14/1),Diskblock(8),FileWrite,Openfile(176:15/0),Thread(140:15/W1)) this Page(8:14/1)
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(8:14/1)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(1) Page(8:14/1)Thread(140:15/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(10:15/null) setframe Frame(1)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1158),Device(0),Page(10:15/1),Diskblock(10),FileRead,Openfile(176:15/0),Thread(140:15/W1)) this Page(10:15/1)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(140:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(140:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(10:15/1)
[PageFaultHandler][do_handlePageFault] thread Thread(140:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 35138 offset = 322 page no = 34 Thread(132:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(132:14/RU) 22 Page(34:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(21) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(34:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(51:14/21)
[PageFaultHandler][do_handlePageFault] page Page(34:14/null) setframe Frame(21)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1159),Device(0),Page(34:14/21),Diskblock(98),FileRead,Openfile(156:14/0),Thread(132:14/W1)) this Page(34:14/21)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(132:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(132:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 33497 offset = 729 page no = 32 Thread(134:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(134:15/RU) 22 Page(32:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(10) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(32:15/null)
[PageFaultHandler][do_handlePageFault] page Page(32:15/null) setframe Frame(10)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1160),Device(0),Page(32:15/10),Diskblock(32),FileRead,Openfile(176:15/0),Thread(134:15/W1)) this Page(32:15/10)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(134:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(134:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(10)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(34:14/21)
[PageFaultHandler][do_handlePageFault] thread Thread(132:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 24025 offset = 473 page no = 23 Thread(137:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(137:15/RU) 21 Page(23:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(27) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(23:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(31:14/27)
[PageFaultHandler][do_handlePageFault] Frame(27) is dirty, do swap-out, Thread(137:15/W0)
[PageFaultHandler][SwapOut] page Page(31:14/27) frame Frame(27)file Openfile(176:15/0)
[PageFaultHandler][SwapOut] block no 31
[Info][PageTableEntry][do_lock] iorb IORB(Id(1161),Device(0),Page(31:14/27),Diskblock(31),FileWrite,Openfile(176:15/0),Thread(137:15/W1)) this Page(31:14/27)
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(32:15/10)
[PageFaultHandler][do_handlePageFault] thread Thread(134:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(31:14/27)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(27) Page(31:14/27)Thread(137:15/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(23:15/null) setframe Frame(27)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1162),Device(0),Page(23:15/27),Diskblock(23),FileRead,Openfile(176:15/0),Thread(137:15/W1)) this Page(23:15/27)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(137:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(137:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(23:15/27)
[PageFaultHandler][do_handlePageFault] thread Thread(137:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 18973 offset = 541 page no = 18 Thread(139:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(139:15/RU) 21 Page(18:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(10) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(18:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(32:15/10)
[PageFaultHandler][do_handlePageFault] Frame(10) is dirty, do swap-out, Thread(139:15/W0)
[PageFaultHandler][SwapOut] page Page(32:15/10) frame Frame(10)file Openfile(176:15/0)
[PageFaultHandler][SwapOut] block no 32
[Info][PageTableEntry][do_lock] iorb IORB(Id(1163),Device(0),Page(32:15/10),Diskblock(32),FileWrite,Openfile(176:15/0),Thread(139:15/W1)) this Page(32:15/10)
[Info][PageTableEntry][do_lock] Get frame Frame(10)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(32:15/10)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(10) Page(32:15/10)Thread(139:15/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(18:15/null) setframe Frame(10)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1164),Device(0),Page(18:15/10),Diskblock(18),FileRead,Openfile(176:15/0),Thread(139:15/W1)) this Page(18:15/10)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(139:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(139:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(10)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(18:15/10)
[PageFaultHandler][do_handlePageFault] thread Thread(139:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 48850 offset = 722 page no = 47 Thread(134:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(134:15/RU) 22 Page(47:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(29) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(47:15/null)
[PageFaultHandler][do_handlePageFault] page Page(47:15/null) setframe Frame(29)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1165),Device(0),Page(47:15/29),Diskblock(47),FileRead,Openfile(176:15/0),Thread(134:15/W1)) this Page(47:15/29)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(134:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(134:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(47:15/29)
[PageFaultHandler][do_handlePageFault] thread Thread(134:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
Simulation progress: 191100/250000[MMU][do_refer] address = 28611 offset = 963 page no = 27 Thread(141:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(141:15/RU) 22 Page(27:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(13) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(27:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(56:14/13)
[PageFaultHandler][do_handlePageFault] page Page(27:15/null) setframe Frame(13)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1166),Device(0),Page(27:15/13),Diskblock(27),FileRead,Openfile(176:15/0),Thread(141:15/W1)) this Page(27:15/13)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(141:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(141:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(13)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 5774 offset = 654 page no = 5 Thread(132:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(132:14/RU) 21 Page(5:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(11) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(5:14/null)
[PageFaultHandler][do_handlePageFault] page Page(5:14/null) setframe Frame(11)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1167),Device(0),Page(5:14/11),Diskblock(69),FileRead,Openfile(156:14/0),Thread(132:14/W1)) this Page(5:14/11)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(132:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(132:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(11)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(27:15/13)
[PageFaultHandler][do_handlePageFault] thread Thread(141:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(5:14/11)
[PageFaultHandler][do_handlePageFault] thread Thread(132:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 57708 offset = 364 page no = 56 Thread(140:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(140:15/RU) 22 Page(56:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(11) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(56:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(5:14/11)
[PageFaultHandler][do_handlePageFault] page Page(56:15/null) setframe Frame(11)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1168),Device(0),Page(56:15/11),Diskblock(56),FileRead,Openfile(176:15/0),Thread(140:15/W1)) this Page(56:15/11)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(140:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(140:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(11)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(56:15/11)
[PageFaultHandler][do_handlePageFault] thread Thread(140:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 5810 offset = 690 page no = 5 Thread(141:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(141:15/RU) 21 Page(5:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(26) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(5:15/null)
[PageFaultHandler][do_handlePageFault] page Page(5:15/null) setframe Frame(26)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1169),Device(0),Page(5:15/26),Diskblock(5),FileRead,Openfile(176:15/0),Thread(141:15/W1)) this Page(5:15/26)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(141:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(141:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(5:15/26)
[PageFaultHandler][do_handlePageFault] thread Thread(141:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 20938 offset = 458 page no = 20 Thread(138:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(138:14/RU) 22 Page(20:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(23) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(20:14/null)
[PageFaultHandler][do_handlePageFault] page Page(20:14/null) setframe Frame(23)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1170),Device(0),Page(20:14/23),Diskblock(84),FileRead,Openfile(156:14/0),Thread(138:14/W1)) this Page(20:14/23)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(138:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(138:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(23)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 37715 offset = 851 page no = 36 Thread(134:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(134:15/RU) 22 Page(36:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(2) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(36:15/null)
[PageFaultHandler][do_handlePageFault] page Page(36:15/null) setframe Frame(2)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1171),Device(0),Page(36:15/2),Diskblock(36),FileRead,Openfile(176:15/0),Thread(134:15/W1)) this Page(36:15/2)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(134:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(134:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(20:14/23)
[PageFaultHandler][do_handlePageFault] thread Thread(138:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(36:15/2)
[PageFaultHandler][do_handlePageFault] thread Thread(134:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 27072 offset = 448 page no = 26 Thread(132:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(132:14/RU) 21 Page(26:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(2) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(26:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(36:15/2)
[PageFaultHandler][do_handlePageFault] Frame(2) is dirty, do swap-out, Thread(132:14/W0)
[PageFaultHandler][SwapOut] page Page(36:15/2) frame Frame(2)file Openfile(156:14/0)
[PageFaultHandler][SwapOut] block no 36
[Info][PageTableEntry][do_lock] iorb IORB(Id(1172),Device(0),Page(36:15/2),Diskblock(100),FileWrite,Openfile(156:14/0),Thread(132:14/W1)) this Page(36:15/2)
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 192013/250000[MMU][do_refer] address = 19105 offset = 673 page no = 18 Thread(140:15/RU)
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(36:15/2)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(2) Page(36:15/2)Thread(132:14/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(26:14/null) setframe Frame(2)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1173),Device(0),Page(26:14/2),Diskblock(90),FileRead,Openfile(156:14/0),Thread(132:14/W1)) this Page(26:14/2)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(132:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(132:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 597 offset = 597 page no = 0 Thread(138:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(138:14/RU) 22 Page(0:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(9) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(0:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(54:14/9)
[PageFaultHandler][do_handlePageFault] page Page(0:14/null) setframe Frame(9)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1174),Device(0),Page(0:14/9),Diskblock(64),FileRead,Openfile(156:14/0),Thread(138:14/W1)) this Page(0:14/9)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(138:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(138:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(26:14/2)
[PageFaultHandler][do_handlePageFault] thread Thread(132:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[Info][PageTableEntry][do_lock] iorb IORB(Id(1175),Device(1),Page(0:15/7),Diskblock(32),FileWrite,Openfile(178:15/1),Thread(134:15/W0)) this Page(0:15/7)
[Info][PageTableEntry][do_lock] Get frame Frame(7)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(0:14/9)
[PageFaultHandler][do_handlePageFault] thread Thread(138:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 33000 offset = 232 page no = 32 Thread(140:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(140:15/RU) 22 Page(32:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(9) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(32:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(0:14/9)
[PageFaultHandler][do_handlePageFault] Frame(9) is dirty, do swap-out, Thread(140:15/W0)
[PageFaultHandler][SwapOut] page Page(0:14/9) frame Frame(9)file Openfile(176:15/0)
[PageFaultHandler][SwapOut] block no 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(1176),Device(0),Page(0:14/9),Diskblock(0),FileWrite,Openfile(176:15/0),Thread(140:15/W1)) this Page(0:14/9)
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 41328 offset = 368 page no = 40 Thread(132:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(132:14/RU) 22 Page(40:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(18) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(40:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(48:14/18)
[PageFaultHandler][do_handlePageFault] Frame(18) is dirty, do swap-out, Thread(132:14/W0)
[PageFaultHandler][SwapOut] page Page(48:14/18) frame Frame(18)file Openfile(156:14/0)
[PageFaultHandler][SwapOut] block no 48
[Info][PageTableEntry][do_lock] iorb IORB(Id(1177),Device(0),Page(48:14/18),Diskblock(112),FileWrite,Openfile(156:14/0),Thread(132:14/W1)) this Page(48:14/18)
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(0:15/7)
[PageTableEntry][do_unlock] this Page(0:14/9)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(9) Page(0:14/9)Thread(140:15/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(32:15/null) setframe Frame(9)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1178),Device(0),Page(32:15/9),Diskblock(32),FileRead,Openfile(176:15/0),Thread(140:15/W1)) this Page(32:15/9)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(140:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(140:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(48:14/18)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(18) Page(48:14/18)Thread(132:14/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(40:14/null) setframe Frame(18)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1179),Device(0),Page(40:14/18),Diskblock(104),FileRead,Openfile(156:14/0),Thread(132:14/W1)) this Page(40:14/18)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(132:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(132:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 10826 offset = 586 page no = 10 Thread(137:15/RU)
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(32:15/9)
[PageFaultHandler][do_handlePageFault] thread Thread(140:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(40:14/18)
[PageFaultHandler][do_handlePageFault] thread Thread(132:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 44416 offset = 384 page no = 43 Thread(134:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(134:15/RU) 22 Page(43:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(18) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(43:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(40:14/18)
[PageFaultHandler][do_handlePageFault] Frame(18) is dirty, do swap-out, Thread(134:15/W0)
[PageFaultHandler][SwapOut] page Page(40:14/18) frame Frame(18)file Openfile(176:15/0)
[PageFaultHandler][SwapOut] block no 40
[Info][PageTableEntry][do_lock] iorb IORB(Id(1180),Device(0),Page(40:14/18),Diskblock(40),FileWrite,Openfile(176:15/0),Thread(134:15/W1)) this Page(40:14/18)
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(40:14/18)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(18) Page(40:14/18)Thread(134:15/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(43:15/null) setframe Frame(18)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1181),Device(0),Page(43:15/18),Diskblock(43),FileRead,Openfile(176:15/0),Thread(134:15/W1)) this Page(43:15/18)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(134:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(134:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 28010 offset = 362 page no = 27 Thread(137:15/RU)
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(43:15/18)
[PageFaultHandler][do_handlePageFault] thread Thread(134:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 7620 offset = 452 page no = 7 Thread(132:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(132:14/RU) 22 Page(7:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(24) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(7:14/null)
[PageFaultHandler][do_handlePageFault] page Page(7:14/null) setframe Frame(24)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1182),Device(0),Page(7:14/24),Diskblock(71),FileRead,Openfile(156:14/0),Thread(132:14/W1)) this Page(7:14/24)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(132:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(132:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(24)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 20316 offset = 860 page no = 19 Thread(141:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(141:15/RU) 22 Page(19:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(0) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(19:15/null)
[PageFaultHandler][do_handlePageFault] page Page(19:15/null) setframe Frame(0)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1183),Device(0),Page(19:15/0),Diskblock(19),FileRead,Openfile(176:15/0),Thread(141:15/W1)) this Page(19:15/0)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(141:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(141:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 6588 offset = 444 page no = 6 Thread(140:15/RU)
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(7:14/24)
[PageFaultHandler][do_handlePageFault] thread Thread(132:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(19:15/0)
[PageFaultHandler][do_handlePageFault] thread Thread(141:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
Simulation progress: 193004/250000[MMU][do_refer] address = 48222 offset = 94 page no = 47 Thread(132:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(132:14/RU) 22 Page(47:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(0) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(47:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(19:15/0)
[PageFaultHandler][do_handlePageFault] Frame(0) is dirty, do swap-out, Thread(132:14/W0)
[PageFaultHandler][SwapOut] page Page(19:15/0) frame Frame(0)file Openfile(156:14/0)
[PageFaultHandler][SwapOut] block no 19
[Info][PageTableEntry][do_lock] iorb IORB(Id(1184),Device(0),Page(19:15/0),Diskblock(83),FileWrite,Openfile(156:14/0),Thread(132:14/W1)) this Page(19:15/0)
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 3745 offset = 673 page no = 3 Thread(140:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(140:15/RU) 21 Page(3:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(8) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(3:15/null)
[PageFaultHandler][do_handlePageFault] page Page(3:15/null) setframe Frame(8)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1185),Device(0),Page(3:15/8),Diskblock(3),FileRead,Openfile(176:15/0),Thread(140:15/W1)) this Page(3:15/8)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(140:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(140:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(19:15/0)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(0) Page(19:15/0)Thread(132:14/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(47:14/null) setframe Frame(0)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1186),Device(0),Page(47:14/0),Diskblock(111),FileRead,Openfile(156:14/0),Thread(132:14/W1)) this Page(47:14/0)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(132:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(132:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 62639 offset = 175 page no = 61 Thread(134:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(134:15/RU) 22 Page(61:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(25) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(61:15/null)
[PageFaultHandler][do_handlePageFault] page Page(61:15/null) setframe Frame(25)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1187),Device(0),Page(61:15/25),Diskblock(61),FileRead,Openfile(176:15/0),Thread(134:15/W1)) this Page(61:15/25)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(134:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(134:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(25)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(3:15/8)
[PageFaultHandler][do_handlePageFault] thread Thread(140:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 38289 offset = 401 page no = 37 Thread(140:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(140:15/RU) 21 Page(37:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(19) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(37:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(46:14/19)
[PageFaultHandler][do_handlePageFault] Frame(19) is dirty, do swap-out, Thread(140:15/W0)
[PageFaultHandler][SwapOut] page Page(46:14/19) frame Frame(19)file Openfile(176:15/0)
[PageFaultHandler][SwapOut] block no 46
[Info][PageTableEntry][do_lock] iorb IORB(Id(1188),Device(0),Page(46:14/19),Diskblock(46),FileWrite,Openfile(176:15/0),Thread(140:15/W1)) this Page(46:14/19)
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 44678 offset = 646 page no = 43 Thread(141:15/RU)
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 36095 offset = 255 page no = 35 Thread(141:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(141:15/RU) 21 Page(35:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(5) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(35:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(53:14/5)
[PageFaultHandler][do_handlePageFault] page Page(35:15/null) setframe Frame(5)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1189),Device(0),Page(35:15/5),Diskblock(35),FileRead,Openfile(176:15/0),Thread(141:15/W1)) this Page(35:15/5)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(141:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(141:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(47:14/0)
[PageFaultHandler][do_handlePageFault] thread Thread(132:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(61:15/25)
[PageFaultHandler][do_handlePageFault] thread Thread(134:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(46:14/19)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(19) Page(46:14/19)Thread(140:15/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(37:15/null) setframe Frame(19)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1190),Device(0),Page(37:15/19),Diskblock(37),FileRead,Openfile(176:15/0),Thread(140:15/W1)) this Page(37:15/19)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(140:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(140:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(35:15/5)
[PageFaultHandler][do_handlePageFault] thread Thread(141:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(37:15/19)
[PageFaultHandler][do_handlePageFault] thread Thread(140:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
Simulation progress: 194009/250000[MMU][do_refer] address = 64493 offset = 1005 page no = 62 Thread(140:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(140:15/RU) 22 Page(62:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(25) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(62:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(61:15/25)
[PageFaultHandler][do_handlePageFault] Frame(25) is dirty, do swap-out, Thread(140:15/W0)
[PageFaultHandler][SwapOut] page Page(61:15/25) frame Frame(25)file Openfile(176:15/0)
[PageFaultHandler][SwapOut] block no 61
[Info][PageTableEntry][do_lock] iorb IORB(Id(1191),Device(0),Page(61:15/25),Diskblock(61),FileWrite,Openfile(176:15/0),Thread(140:15/W1)) this Page(61:15/25)
[Info][PageTableEntry][do_lock] Get frame Frame(25)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 55977 offset = 681 page no = 54 Thread(134:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(134:15/RU) 22 Page(54:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(19) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(54:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(37:15/19)
[PageFaultHandler][do_handlePageFault] page Page(54:15/null) setframe Frame(19)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1192),Device(0),Page(54:15/19),Diskblock(54),FileRead,Openfile(176:15/0),Thread(134:15/W1)) this Page(54:15/19)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(134:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(134:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(61:15/25)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(25) Page(61:15/25)Thread(140:15/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(62:15/null) setframe Frame(25)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1193),Device(0),Page(62:15/25),Diskblock(62),FileRead,Openfile(176:15/0),Thread(140:15/W1)) this Page(62:15/25)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(140:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(140:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(25)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 54255 offset = 1007 page no = 52 Thread(132:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(132:14/RU) 22 Page(52:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(12) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(52:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(6:15/12)
[PageFaultHandler][do_handlePageFault] Frame(12) is dirty, do swap-out, Thread(132:14/W0)
[PageFaultHandler][SwapOut] page Page(6:15/12) frame Frame(12)file Openfile(156:14/0)
[PageFaultHandler][SwapOut] block no 6
[Info][PageTableEntry][do_lock] iorb IORB(Id(1194),Device(0),Page(6:15/12),Diskblock(70),FileWrite,Openfile(156:14/0),Thread(132:14/W1)) this Page(6:15/12)
[Info][PageTableEntry][do_lock] Get frame Frame(12)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(54:15/19)
[PageFaultHandler][do_handlePageFault] thread Thread(134:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 15147 offset = 811 page no = 14 Thread(134:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(134:15/RU) 21 Page(14:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(7) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(14:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(0:15/7)
[PageFaultHandler][do_handlePageFault] page Page(14:15/null) setframe Frame(7)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1195),Device(0),Page(14:15/7),Diskblock(14),FileRead,Openfile(176:15/0),Thread(134:15/W1)) this Page(14:15/7)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(134:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(134:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(7)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(62:15/25)
[PageFaultHandler][do_handlePageFault] thread Thread(140:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 25379 offset = 803 page no = 24 Thread(140:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(140:15/RU) 22 Page(24:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(22) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(24:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(52:15/22)
[PageFaultHandler][do_handlePageFault] page Page(24:15/null) setframe Frame(22)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1196),Device(0),Page(24:15/22),Diskblock(24),FileRead,Openfile(176:15/0),Thread(140:15/W1)) this Page(24:15/22)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(140:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(140:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(22)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(6:15/12)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(12) Page(6:15/12)Thread(132:14/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(52:14/null) setframe Frame(12)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1197),Device(0),Page(52:14/12),Diskblock(116),FileRead,Openfile(156:14/0),Thread(132:14/W1)) this Page(52:14/12)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(132:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(132:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(12)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 61045 offset = 629 page no = 59 Thread(141:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(141:15/RU) 22 Page(59:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(15) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(59:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(44:15/15)
[PageFaultHandler][do_handlePageFault] Frame(15) is dirty, do swap-out, Thread(141:15/W0)
[PageFaultHandler][SwapOut] page Page(44:15/15) frame Frame(15)file Openfile(176:15/0)
[PageFaultHandler][SwapOut] block no 44
[Info][PageTableEntry][do_lock] iorb IORB(Id(1198),Device(0),Page(44:15/15),Diskblock(44),FileWrite,Openfile(176:15/0),Thread(141:15/W1)) this Page(44:15/15)
[Info][PageTableEntry][do_lock] Get frame Frame(15)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(14:15/7)
[PageFaultHandler][do_handlePageFault] thread Thread(134:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(24:15/22)
[PageFaultHandler][do_handlePageFault] thread Thread(140:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
Simulation progress: 195020/250000[PageTableEntry][do_unlock] this Page(52:14/12)
[PageFaultHandler][do_handlePageFault] thread Thread(132:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(44:15/15)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(15) Page(44:15/15)Thread(141:15/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(59:15/null) setframe Frame(15)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1199),Device(0),Page(59:15/15),Diskblock(59),FileRead,Openfile(176:15/0),Thread(141:15/W1)) this Page(59:15/15)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(141:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(141:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(15)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 60231 offset = 839 page no = 58 Thread(132:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(132:14/RU) 21 Page(58:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(12) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(58:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(52:14/12)
[PageFaultHandler][do_handlePageFault] Frame(12) is dirty, do swap-out, Thread(132:14/W0)
[PageFaultHandler][SwapOut] page Page(52:14/12) frame Frame(12)file Openfile(156:14/0)
[PageFaultHandler][SwapOut] block no 52
[Info][PageTableEntry][do_lock] iorb IORB(Id(1200),Device(0),Page(52:14/12),Diskblock(116),FileWrite,Openfile(156:14/0),Thread(132:14/W1)) this Page(52:14/12)
[Info][PageTableEntry][do_lock] Get frame Frame(12)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(59:15/15)
[PageFaultHandler][do_handlePageFault] thread Thread(141:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 32264 offset = 520 page no = 31 Thread(140:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(140:15/RU) 21 Page(31:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(7) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(31:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(14:15/7)
[PageFaultHandler][do_handlePageFault] page Page(31:15/null) setframe Frame(7)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1201),Device(0),Page(31:15/7),Diskblock(31),FileRead,Openfile(176:15/0),Thread(140:15/W1)) this Page(31:15/7)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(140:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(140:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(7)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(52:14/12)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(12) Page(52:14/12)Thread(132:14/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(58:14/null) setframe Frame(12)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1202),Device(0),Page(58:14/12),Diskblock(122),FileRead,Openfile(156:14/0),Thread(132:14/W1)) this Page(58:14/12)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(132:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(132:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(12)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 26377 offset = 777 page no = 25 Thread(134:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(134:15/RU) 21 Page(25:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(21) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(25:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(34:14/21)
[PageFaultHandler][do_handlePageFault] Frame(21) is dirty, do swap-out, Thread(134:15/W0)
[PageFaultHandler][SwapOut] page Page(34:14/21) frame Frame(21)file Openfile(176:15/0)
[PageFaultHandler][SwapOut] block no 34
[Info][PageTableEntry][do_lock] iorb IORB(Id(1203),Device(0),Page(34:14/21),Diskblock(34),FileWrite,Openfile(176:15/0),Thread(134:15/W1)) this Page(34:14/21)
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(31:15/7)
[PageFaultHandler][do_handlePageFault] thread Thread(140:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(58:14/12)
[PageFaultHandler][do_handlePageFault] thread Thread(132:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[Info][PageTableEntry][do_lock] iorb IORB(Id(1204),Device(1),Page(0:14/null),Diskblock(32),FileRead,Openfile(180:15/1),Thread(132:14/W0)) this Page(0:14/null)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] requrest_thread = Thread(132:14/W0)
[Info][PageTableEntry][do_lock] validating_thread is null, handlePageFault
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(132:14/W0) 23 Page(0:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(4) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(0:14/null)
[PageFaultHandler][do_handlePageFault] page Page(0:14/null) setframe Frame(4)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1205),Device(0),Page(0:14/4),Diskblock(64),FileRead,Openfile(156:14/0),Thread(132:14/W2)) this Page(0:14/4)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(132:14/W2)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(132:14/W2)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(34:14/21)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(21) Page(34:14/21)Thread(134:15/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(25:15/null) setframe Frame(21)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1206),Device(0),Page(25:15/21),Diskblock(25),FileRead,Openfile(176:15/0),Thread(134:15/W1)) this Page(25:15/21)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(134:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(134:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(0:14/4)
[PageFaultHandler][do_handlePageFault] thread Thread(132:14/W1) status = 31
 Thread do_handlePageFault Success
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(25:15/21)
[PageFaultHandler][do_handlePageFault] thread Thread(134:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(0:14/4)
[MMU][do_refer] address = 55420 offset = 124 page no = 54 Thread(142:15/RU)
[MMU][do_refer] Do memory write.
Simulation progress: 196029/250000[MMU][do_refer] address = 7165 offset = 1021 page no = 6 Thread(134:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(134:15/RU) 21 Page(6:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(21) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(6:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(25:15/21)
[PageFaultHandler][do_handlePageFault] page Page(6:15/null) setframe Frame(21)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1207),Device(0),Page(6:15/21),Diskblock(6),FileRead,Openfile(176:15/0),Thread(134:15/W1)) this Page(6:15/21)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(134:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(134:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(6:15/21)
[PageFaultHandler][do_handlePageFault] thread Thread(134:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 63060 offset = 596 page no = 61 Thread(134:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(134:15/RU) 22 Page(61:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(10) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(61:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(18:15/10)
[PageFaultHandler][do_handlePageFault] Frame(10) is dirty, do swap-out, Thread(134:15/W0)
[PageFaultHandler][SwapOut] page Page(18:15/10) frame Frame(10)file Openfile(176:15/0)
[PageFaultHandler][SwapOut] block no 18
[Info][PageTableEntry][do_lock] iorb IORB(Id(1208),Device(0),Page(18:15/10),Diskblock(18),FileWrite,Openfile(176:15/0),Thread(134:15/W1)) this Page(18:15/10)
[Info][PageTableEntry][do_lock] Get frame Frame(10)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(18:15/10)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(10) Page(18:15/10)Thread(134:15/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(61:15/null) setframe Frame(10)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1209),Device(0),Page(61:15/10),Diskblock(61),FileRead,Openfile(176:15/0),Thread(134:15/W1)) this Page(61:15/10)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(134:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(134:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(10)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 8379 offset = 187 page no = 8 Thread(140:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(140:15/RU) 21 Page(8:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(13) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(8:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(27:15/13)
[PageFaultHandler][do_handlePageFault] Frame(13) is dirty, do swap-out, Thread(140:15/W0)
[PageFaultHandler][SwapOut] page Page(27:15/13) frame Frame(13)file Openfile(176:15/0)
[PageFaultHandler][SwapOut] block no 27
[Info][PageTableEntry][do_lock] iorb IORB(Id(1210),Device(0),Page(27:15/13),Diskblock(27),FileWrite,Openfile(176:15/0),Thread(140:15/W1)) this Page(27:15/13)
[Info][PageTableEntry][do_lock] Get frame Frame(13)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(61:15/10)
[PageFaultHandler][do_handlePageFault] thread Thread(134:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(27:15/13)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(13) Page(27:15/13)Thread(140:15/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(8:15/null) setframe Frame(13)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1211),Device(0),Page(8:15/13),Diskblock(8),FileRead,Openfile(176:15/0),Thread(140:15/W1)) this Page(8:15/13)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(140:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(140:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(13)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(8:15/13)
[PageFaultHandler][do_handlePageFault] thread Thread(140:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
Simulation progress: 197017/250000[MMU][do_refer] address = 29202 offset = 530 page no = 28 Thread(132:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(132:14/RU) 22 Page(28:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(13) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(28:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(8:15/13)
[PageFaultHandler][do_handlePageFault] page Page(28:14/null) setframe Frame(13)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1212),Device(0),Page(28:14/13),Diskblock(92),FileRead,Openfile(156:14/0),Thread(132:14/W1)) this Page(28:14/13)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(132:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(132:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(13)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 2517 offset = 469 page no = 2 Thread(140:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(140:15/RU) 22 Page(2:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(11) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(2:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(56:15/11)
[PageFaultHandler][do_handlePageFault] Frame(11) is dirty, do swap-out, Thread(140:15/W0)
[PageFaultHandler][SwapOut] page Page(56:15/11) frame Frame(11)file Openfile(176:15/0)
[PageFaultHandler][SwapOut] block no 56
[Info][PageTableEntry][do_lock] iorb IORB(Id(1213),Device(0),Page(56:15/11),Diskblock(56),FileWrite,Openfile(176:15/0),Thread(140:15/W1)) this Page(56:15/11)
[Info][PageTableEntry][do_lock] Get frame Frame(11)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 36444 offset = 604 page no = 35 Thread(134:15/RU)
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 42209 offset = 225 page no = 41 Thread(134:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(134:15/RU) 22 Page(41:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(26) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(41:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(5:15/26)
[PageFaultHandler][do_handlePageFault] page Page(41:15/null) setframe Frame(26)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1214),Device(0),Page(41:15/26),Diskblock(41),FileRead,Openfile(176:15/0),Thread(134:15/W1)) this Page(41:15/26)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(134:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(134:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(28:14/13)
[PageFaultHandler][do_handlePageFault] thread Thread(132:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(56:15/11)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(11) Page(56:15/11)Thread(140:15/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(2:15/null) setframe Frame(11)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1215),Device(0),Page(2:15/11),Diskblock(2),FileRead,Openfile(176:15/0),Thread(140:15/W1)) this Page(2:15/11)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(140:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(140:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(11)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(41:15/26)
[PageFaultHandler][do_handlePageFault] thread Thread(134:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(2:15/11)
[PageFaultHandler][do_handlePageFault] thread Thread(140:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 25410 offset = 834 page no = 24 Thread(132:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(132:14/RU) 21 Page(24:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(11) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(24:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(2:15/11)
[PageFaultHandler][do_handlePageFault] Frame(11) is dirty, do swap-out, Thread(132:14/W0)
[PageFaultHandler][SwapOut] page Page(2:15/11) frame Frame(11)file Openfile(156:14/0)
[PageFaultHandler][SwapOut] block no 2
[Info][PageTableEntry][do_lock] iorb IORB(Id(1216),Device(0),Page(2:15/11),Diskblock(66),FileWrite,Openfile(156:14/0),Thread(132:14/W1)) this Page(2:15/11)
[Info][PageTableEntry][do_lock] Get frame Frame(11)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 39334 offset = 422 page no = 38 Thread(140:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(140:15/RU) 22 Page(38:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(3) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(38:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(36:14/3)
[PageFaultHandler][do_handlePageFault] page Page(38:15/null) setframe Frame(3)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1217),Device(0),Page(38:15/3),Diskblock(38),FileRead,Openfile(176:15/0),Thread(140:15/W1)) this Page(38:15/3)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(140:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(140:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(3)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 198001/250000[PageTableEntry][do_unlock] this Page(2:15/11)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(11) Page(2:15/11)Thread(132:14/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(24:14/null) setframe Frame(11)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1218),Device(0),Page(24:14/11),Diskblock(88),FileRead,Openfile(156:14/0),Thread(132:14/W1)) this Page(24:14/11)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(132:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(132:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(11)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 879 offset = 879 page no = 0 Thread(134:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(134:15/RU) 22 Page(0:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(2) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(0:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(26:14/2)
[PageFaultHandler][do_handlePageFault] page Page(0:15/null) setframe Frame(2)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1219),Device(0),Page(0:15/2),Diskblock(0),FileRead,Openfile(176:15/0),Thread(134:15/W1)) this Page(0:15/2)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(134:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(134:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(38:15/3)
[PageFaultHandler][do_handlePageFault] thread Thread(140:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(24:14/11)
[PageFaultHandler][do_handlePageFault] thread Thread(132:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(0:15/2)
[PageFaultHandler][do_handlePageFault] thread Thread(134:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 20413 offset = 957 page no = 19 Thread(140:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(140:15/RU) 21 Page(19:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(2) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(19:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(0:15/2)
[PageFaultHandler][do_handlePageFault] Frame(2) is dirty, do swap-out, Thread(140:15/W0)
[PageFaultHandler][SwapOut] page Page(0:15/2) frame Frame(2)file Openfile(176:15/0)
[PageFaultHandler][SwapOut] block no 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(1220),Device(0),Page(0:15/2),Diskblock(0),FileWrite,Openfile(176:15/0),Thread(140:15/W1)) this Page(0:15/2)
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(0:15/2)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(2) Page(0:15/2)Thread(140:15/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(19:15/null) setframe Frame(2)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1221),Device(0),Page(19:15/2),Diskblock(19),FileRead,Openfile(176:15/0),Thread(140:15/W1)) this Page(19:15/2)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(140:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(140:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(19:15/2)
[PageFaultHandler][do_handlePageFault] thread Thread(140:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 7494 offset = 326 page no = 7 Thread(143:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(143:15/RU) 22 Page(7:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(17) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(7:15/null)
[PageFaultHandler][do_handlePageFault] page Page(7:15/null) setframe Frame(17)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1222),Device(0),Page(7:15/17),Diskblock(7),FileRead,Openfile(176:15/0),Thread(143:15/W1)) this Page(7:15/17)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(143:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(143:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 60700 offset = 284 page no = 59 Thread(132:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(132:14/RU) 22 Page(59:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(16) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(59:14/null)
[PageFaultHandler][do_handlePageFault] page Page(59:14/null) setframe Frame(16)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1223),Device(0),Page(59:14/16),Diskblock(123),FileRead,Openfile(156:14/0),Thread(132:14/W1)) this Page(59:14/16)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(132:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(132:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(7:15/17)
[PageFaultHandler][do_handlePageFault] thread Thread(143:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 41090 offset = 130 page no = 40 Thread(142:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(142:15/RU) 22 Page(40:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(18) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(40:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(43:15/18)
[PageFaultHandler][do_handlePageFault] Frame(18) is dirty, do swap-out, Thread(142:15/W0)
[PageFaultHandler][SwapOut] page Page(43:15/18) frame Frame(18)file Openfile(176:15/0)
[PageFaultHandler][SwapOut] block no 43
[Info][PageTableEntry][do_lock] iorb IORB(Id(1224),Device(0),Page(43:15/18),Diskblock(43),FileWrite,Openfile(176:15/0),Thread(142:15/W1)) this Page(43:15/18)
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(59:14/16)
[PageFaultHandler][do_handlePageFault] thread Thread(132:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(43:15/18)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(18) Page(43:15/18)Thread(142:15/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(40:15/null) setframe Frame(18)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1225),Device(0),Page(40:15/18),Diskblock(40),FileRead,Openfile(176:15/0),Thread(142:15/W1)) this Page(40:15/18)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(142:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(142:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 8449 offset = 257 page no = 8 Thread(132:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(132:14/RU) 21 Page(8:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(16) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(8:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(59:14/16)
[PageFaultHandler][do_handlePageFault] Frame(16) is dirty, do swap-out, Thread(132:14/W0)
[PageFaultHandler][SwapOut] page Page(59:14/16) frame Frame(16)file Openfile(156:14/0)
[PageFaultHandler][SwapOut] block no 59
[Info][PageTableEntry][do_lock] iorb IORB(Id(1226),Device(0),Page(59:14/16),Diskblock(123),FileWrite,Openfile(156:14/0),Thread(132:14/W1)) this Page(59:14/16)
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(40:15/18)
[PageFaultHandler][do_handlePageFault] thread Thread(142:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
Simulation progress: 199080/250000[MMU][do_refer] address = 36762 offset = 922 page no = 35 Thread(144:15/RU)
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(59:14/16)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(16) Page(59:14/16)Thread(132:14/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(8:14/null) setframe Frame(16)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1227),Device(0),Page(8:14/16),Diskblock(72),FileRead,Openfile(156:14/0),Thread(132:14/W1)) this Page(8:14/16)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(132:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(132:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(8:14/16)
[PageFaultHandler][do_handlePageFault] thread Thread(132:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 33625 offset = 857 page no = 32 Thread(142:15/RU)
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 26048 offset = 448 page no = 25 Thread(142:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(142:15/RU) 22 Page(25:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(14) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(25:15/null)
[PageFaultHandler][do_handlePageFault] page Page(25:15/null) setframe Frame(14)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1228),Device(0),Page(25:15/14),Diskblock(25),FileRead,Openfile(176:15/0),Thread(142:15/W1)) this Page(25:15/14)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(142:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(142:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(14)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(25:15/14)
[PageFaultHandler][do_handlePageFault] thread Thread(142:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 47369 offset = 265 page no = 46 Thread(144:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(144:15/RU) 22 Page(46:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(8) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(46:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(3:15/8)
[PageFaultHandler][do_handlePageFault] page Page(46:15/null) setframe Frame(8)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1229),Device(0),Page(46:15/8),Diskblock(46),FileRead,Openfile(176:15/0),Thread(144:15/W1)) this Page(46:15/8)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(144:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(144:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(46:15/8)
[PageFaultHandler][do_handlePageFault] thread Thread(144:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 60386 offset = 994 page no = 58 Thread(143:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(143:15/RU) 21 Page(58:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(0) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(58:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(47:14/0)
[PageFaultHandler][do_handlePageFault] Frame(0) is dirty, do swap-out, Thread(143:15/W0)
[PageFaultHandler][SwapOut] page Page(47:14/0) frame Frame(0)file Openfile(176:15/0)
[PageFaultHandler][SwapOut] block no 47
[Info][PageTableEntry][do_lock] iorb IORB(Id(1230),Device(0),Page(47:14/0),Diskblock(47),FileWrite,Openfile(176:15/0),Thread(143:15/W1)) this Page(47:14/0)
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(47:14/0)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(0) Page(47:14/0)Thread(143:15/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(58:15/null) setframe Frame(0)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1231),Device(0),Page(58:15/0),Diskblock(58),FileRead,Openfile(176:15/0),Thread(143:15/W1)) this Page(58:15/0)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(143:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(143:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(58:15/0)
[PageFaultHandler][do_handlePageFault] thread Thread(143:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 26233 offset = 633 page no = 25 Thread(134:15/RU)
[MMU][do_refer] Do memory write.
[PageCleanDaemon][unleash] osp.Memory.PageCleanDaemon@e14d43 execute time 200000
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(5)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(28)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(19)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(25)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(22)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(15)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(5)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(5) Page(35:15/5) isDirty true
[PageFaultHandler][SwapOut] file Openfile(176:15/0)
[PageFaultHandler][SwapOut] block no 35
[Info][PageTableEntry][do_lock] iorb IORB(Id(1232),Device(0),Page(35:15/5),Diskblock(35),FileWrite,Openfile(176:15/0),Thread(146:0/W1)) this Page(35:15/5)
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 200030/250000[PageTableEntry][do_unlock] this Page(35:15/5)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(5) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(28)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(28) Page(11:15/28) isDirty true
[PageFaultHandler][SwapOut] file Openfile(176:15/0)
[PageFaultHandler][SwapOut] block no 11
[Info][PageTableEntry][do_lock] iorb IORB(Id(1233),Device(0),Page(11:15/28),Diskblock(11),FileWrite,Openfile(176:15/0),Thread(146:0/W1)) this Page(11:15/28)
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(11:15/28)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(28) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(19)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(19) Page(54:15/19) isDirty true
[PageFaultHandler][SwapOut] file Openfile(176:15/0)
[PageFaultHandler][SwapOut] block no 54
[Info][PageTableEntry][do_lock] iorb IORB(Id(1234),Device(0),Page(54:15/19),Diskblock(54),FileWrite,Openfile(176:15/0),Thread(146:0/W1)) this Page(54:15/19)
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(54:15/19)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(19) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(25)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(25) Page(62:15/25) isDirty true
[PageFaultHandler][SwapOut] file Openfile(176:15/0)
[PageFaultHandler][SwapOut] block no 62
[Info][PageTableEntry][do_lock] iorb IORB(Id(1235),Device(0),Page(62:15/25),Diskblock(62),FileWrite,Openfile(176:15/0),Thread(146:0/W1)) this Page(62:15/25)
[Info][PageTableEntry][do_lock] Get frame Frame(25)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 2340 offset = 292 page no = 2 Thread(145:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(145:15/RU) 22 Page(2:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(5) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(2:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(35:15/5)
[PageFaultHandler][do_handlePageFault] page Page(2:15/null) setframe Frame(5)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1236),Device(0),Page(2:15/5),Diskblock(2),FileRead,Openfile(176:15/0),Thread(145:15/W1)) this Page(2:15/5)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(145:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(145:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(62:15/25)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(25) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(22)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(22) Page(24:15/22) isDirty true
[PageFaultHandler][SwapOut] file Openfile(176:15/0)
[PageFaultHandler][SwapOut] block no 24
[Info][PageTableEntry][do_lock] iorb IORB(Id(1237),Device(0),Page(24:15/22),Diskblock(24),FileWrite,Openfile(176:15/0),Thread(146:0/W1)) this Page(24:15/22)
[Info][PageTableEntry][do_lock] Get frame Frame(22)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(2:15/5)
[PageFaultHandler][do_handlePageFault] thread Thread(145:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 56473 offset = 153 page no = 55 Thread(134:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(134:15/RU) 21 Page(55:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(28) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(55:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(11:15/28)
[PageFaultHandler][do_handlePageFault] page Page(55:15/null) setframe Frame(28)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1238),Device(0),Page(55:15/28),Diskblock(55),FileRead,Openfile(176:15/0),Thread(134:15/W1)) this Page(55:15/28)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(134:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(134:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(24:15/22)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(22) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(15)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(15) Page(59:15/15) isDirty true
[PageFaultHandler][SwapOut] file Openfile(176:15/0)
[PageFaultHandler][SwapOut] block no 59
[Info][PageTableEntry][do_lock] iorb IORB(Id(1239),Device(0),Page(59:15/15),Diskblock(59),FileWrite,Openfile(176:15/0),Thread(146:0/W1)) this Page(59:15/15)
[Info][PageTableEntry][do_lock] Get frame Frame(15)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(55:15/28)
[PageFaultHandler][do_handlePageFault] thread Thread(134:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 46574 offset = 494 page no = 45 Thread(145:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(145:15/RU) 22 Page(45:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(20) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(45:15/null)
[PageFaultHandler][do_handlePageFault] page Page(45:15/null) setframe Frame(20)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1240),Device(0),Page(45:15/20),Diskblock(45),FileRead,Openfile(176:15/0),Thread(145:15/W1)) this Page(45:15/20)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(145:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(145:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(20)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 39487 offset = 575 page no = 38 Thread(143:15/RU)
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(59:15/15)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(15) finish
[MMU][do_refer] address = 1218 offset = 194 page no = 1 Thread(142:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(142:15/RU) 22 Page(1:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(19) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(1:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(54:15/19)
[PageFaultHandler][do_handlePageFault] page Page(1:15/null) setframe Frame(19)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1241),Device(0),Page(1:15/19),Diskblock(1),FileRead,Openfile(176:15/0),Thread(142:15/W1)) this Page(1:15/19)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(142:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(142:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(45:15/20)
[PageFaultHandler][do_handlePageFault] thread Thread(145:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(1:15/19)
[PageFaultHandler][do_handlePageFault] thread Thread(142:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 21385 offset = 905 page no = 20 Thread(143:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(143:15/RU) 22 Page(20:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(19) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(20:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(1:15/19)
[PageFaultHandler][do_handlePageFault] Frame(19) is dirty, do swap-out, Thread(143:15/W0)
[PageFaultHandler][SwapOut] page Page(1:15/19) frame Frame(19)file Openfile(176:15/0)
[PageFaultHandler][SwapOut] block no 1
[Info][PageTableEntry][do_lock] iorb IORB(Id(1242),Device(0),Page(1:15/19),Diskblock(1),FileWrite,Openfile(176:15/0),Thread(143:15/W1)) this Page(1:15/19)
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(1:15/19)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(19) Page(1:15/19)Thread(143:15/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(20:15/null) setframe Frame(19)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1243),Device(0),Page(20:15/19),Diskblock(20),FileRead,Openfile(176:15/0),Thread(143:15/W1)) this Page(20:15/19)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(143:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(143:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 36740 offset = 900 page no = 35 Thread(134:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(134:15/RU) 22 Page(35:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(22) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(35:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(24:15/22)
[PageFaultHandler][do_handlePageFault] page Page(35:15/null) setframe Frame(22)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1244),Device(0),Page(35:15/22),Diskblock(35),FileRead,Openfile(176:15/0),Thread(134:15/W1)) this Page(35:15/22)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(134:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(134:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(22)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(20:15/19)
[PageFaultHandler][do_handlePageFault] thread Thread(143:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(35:15/22)
[PageFaultHandler][do_handlePageFault] thread Thread(134:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 57709 offset = 365 page no = 56 Thread(143:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(143:15/RU) 22 Page(56:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(22) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(56:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(35:15/22)
[PageFaultHandler][do_handlePageFault] Frame(22) is dirty, do swap-out, Thread(143:15/W0)
[PageFaultHandler][SwapOut] page Page(35:15/22) frame Frame(22)file Openfile(176:15/0)
[PageFaultHandler][SwapOut] block no 35
[Info][PageTableEntry][do_lock] iorb IORB(Id(1245),Device(0),Page(35:15/22),Diskblock(35),FileWrite,Openfile(176:15/0),Thread(143:15/W1)) this Page(35:15/22)
[Info][PageTableEntry][do_lock] Get frame Frame(22)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(35:15/22)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(22) Page(35:15/22)Thread(143:15/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(56:15/null) setframe Frame(22)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1246),Device(0),Page(56:15/22),Diskblock(56),FileRead,Openfile(176:15/0),Thread(143:15/W1)) this Page(56:15/22)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(143:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(143:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(22)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 201008/250000[PageTableEntry][do_unlock] this Page(56:15/22)
[PageFaultHandler][do_handlePageFault] thread Thread(143:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 59168 offset = 800 page no = 57 Thread(134:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(134:15/RU) 21 Page(57:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(1) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(57:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(10:15/1)
[PageFaultHandler][do_handlePageFault] Frame(1) is dirty, do swap-out, Thread(134:15/W0)
[PageFaultHandler][SwapOut] page Page(10:15/1) frame Frame(1)file Openfile(176:15/0)
[PageFaultHandler][SwapOut] block no 10
[Info][PageTableEntry][do_lock] iorb IORB(Id(1247),Device(0),Page(10:15/1),Diskblock(10),FileWrite,Openfile(176:15/0),Thread(134:15/W1)) this Page(10:15/1)
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(10:15/1)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(1) Page(10:15/1)Thread(134:15/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(57:15/null) setframe Frame(1)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1248),Device(0),Page(57:15/1),Diskblock(57),FileRead,Openfile(176:15/0),Thread(134:15/W1)) this Page(57:15/1)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(134:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(134:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(57:15/1)
[PageFaultHandler][do_handlePageFault] thread Thread(134:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 50996 offset = 820 page no = 49 Thread(143:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(143:15/RU) 21 Page(49:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(27) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(49:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(23:15/27)
[PageFaultHandler][do_handlePageFault] page Page(49:15/null) setframe Frame(27)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1249),Device(0),Page(49:15/27),Diskblock(49),FileRead,Openfile(176:15/0),Thread(143:15/W1)) this Page(49:15/27)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(143:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(143:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(49:15/27)
[PageFaultHandler][do_handlePageFault] thread Thread(143:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
Simulation progress: 202020/250000[MMU][do_refer] address = 18087 offset = 679 page no = 17 Thread(147:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(147:15/RU) 22 Page(17:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(7) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(17:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(31:15/7)
[PageFaultHandler][do_handlePageFault] page Page(17:15/null) setframe Frame(7)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1250),Device(0),Page(17:15/7),Diskblock(17),FileRead,Openfile(176:15/0),Thread(147:15/W1)) this Page(17:15/7)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(147:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(147:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(7)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(17:15/7)
[PageFaultHandler][do_handlePageFault] thread Thread(147:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 26029 offset = 429 page no = 25 Thread(145:15/RU)
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 38066 offset = 178 page no = 37 Thread(147:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(147:15/RU) 21 Page(37:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(12) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(37:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(58:14/12)
[PageFaultHandler][do_handlePageFault] page Page(37:15/null) setframe Frame(12)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1251),Device(0),Page(37:15/12),Diskblock(37),FileRead,Openfile(176:15/0),Thread(147:15/W1)) this Page(37:15/12)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(147:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(147:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(12)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(37:15/12)
[PageFaultHandler][do_handlePageFault] thread Thread(147:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
Simulation progress: 203100/250000[MMU][do_refer] address = 28177 offset = 529 page no = 27 Thread(143:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(143:15/RU) 22 Page(27:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(4) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(27:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(0:14/4)
[PageFaultHandler][do_handlePageFault] Frame(4) is dirty, do swap-out, Thread(143:15/W0)
[PageFaultHandler][SwapOut] page Page(0:14/4) frame Frame(4)file Openfile(176:15/0)
[PageFaultHandler][SwapOut] block no 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(1252),Device(0),Page(0:14/4),Diskblock(0),FileWrite,Openfile(176:15/0),Thread(143:15/W1)) this Page(0:14/4)
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(0:14/4)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(4) Page(0:14/4)Thread(143:15/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(27:15/null) setframe Frame(4)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1253),Device(0),Page(27:15/4),Diskblock(27),FileRead,Openfile(176:15/0),Thread(143:15/W1)) this Page(27:15/4)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(143:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(143:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(1254),Device(2),Page(0:15/null),Diskblock(12),FileWrite,Openfile(184:15/2),Thread(144:15/W0)) this Page(0:15/null)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] requrest_thread = Thread(144:15/W0)
[Info][PageTableEntry][do_lock] validating_thread is null, handlePageFault
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(144:15/W0) 23 Page(0:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(29) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(0:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(47:15/29)
[PageFaultHandler][do_handlePageFault] Frame(29) is dirty, do swap-out, Thread(144:15/W1)
[PageFaultHandler][SwapOut] page Page(47:15/29) frame Frame(29)file Openfile(176:15/0)
[PageFaultHandler][SwapOut] block no 47
[Info][PageTableEntry][do_lock] iorb IORB(Id(1255),Device(0),Page(47:15/29),Diskblock(47),FileWrite,Openfile(176:15/0),Thread(144:15/W2)) this Page(47:15/29)
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(27:15/4)
[PageFaultHandler][do_handlePageFault] thread Thread(143:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 32995 offset = 227 page no = 32 Thread(147:15/RU)
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(47:15/29)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(29) Page(47:15/29)Thread(144:15/W1) finish
[PageFaultHandler][do_handlePageFault] page Page(0:15/null) setframe Frame(29)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1256),Device(0),Page(0:15/29),Diskblock(0),FileRead,Openfile(176:15/0),Thread(144:15/W2)) this Page(0:15/29)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(144:15/W2)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(144:15/W2)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 49629 offset = 477 page no = 48 Thread(143:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(143:15/RU) 21 Page(48:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(21) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(48:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(6:15/21)
[PageFaultHandler][do_handlePageFault] page Page(48:15/null) setframe Frame(21)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1257),Device(0),Page(48:15/21),Diskblock(48),FileRead,Openfile(176:15/0),Thread(143:15/W1)) this Page(48:15/21)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(143:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(143:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(0:15/29)
[PageFaultHandler][do_handlePageFault] thread Thread(144:15/W1) status = 31
 Thread do_handlePageFault Success
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(48:15/21)
[PageFaultHandler][do_handlePageFault] thread Thread(143:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 60936 offset = 520 page no = 59 Thread(149:15/RU)
[MMU][do_refer] Do memory read.
Simulation progress: 204023/250000[MMU][do_refer] address = 54230 offset = 982 page no = 52 Thread(147:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(147:15/RU) 22 Page(52:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(6) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(52:15/null)
[PageFaultHandler][do_handlePageFault] page Page(52:15/null) setframe Frame(6)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1258),Device(0),Page(52:15/6),Diskblock(52),FileRead,Openfile(176:15/0),Thread(147:15/W1)) this Page(52:15/6)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(147:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(147:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(6)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(52:15/6)
[PageFaultHandler][do_handlePageFault] thread Thread(147:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 11346 offset = 82 page no = 11 Thread(145:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(145:15/RU) 21 Page(11:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(13) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(11:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(28:14/13)
[PageFaultHandler][do_handlePageFault] Frame(13) is dirty, do swap-out, Thread(145:15/W0)
[PageFaultHandler][SwapOut] page Page(28:14/13) frame Frame(13)file Openfile(176:15/0)
[PageFaultHandler][SwapOut] block no 28
[Info][PageTableEntry][do_lock] iorb IORB(Id(1259),Device(0),Page(28:14/13),Diskblock(28),FileWrite,Openfile(176:15/0),Thread(145:15/W1)) this Page(28:14/13)
[Info][PageTableEntry][do_lock] Get frame Frame(13)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(28:14/13)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(13) Page(28:14/13)Thread(145:15/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(11:15/null) setframe Frame(13)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1260),Device(0),Page(11:15/13),Diskblock(11),FileRead,Openfile(176:15/0),Thread(145:15/W1)) this Page(11:15/13)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(145:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(145:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(13)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(11:15/13)
[PageFaultHandler][do_handlePageFault] thread Thread(145:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 21542 offset = 38 page no = 21 Thread(148:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(148:15/RU) 22 Page(21:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(23) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(21:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(20:14/23)
[PageFaultHandler][do_handlePageFault] Frame(23) is dirty, do swap-out, Thread(148:15/W0)
[PageFaultHandler][SwapOut] page Page(20:14/23) frame Frame(23)file Openfile(176:15/0)
[PageFaultHandler][SwapOut] block no 20
[Info][PageTableEntry][do_lock] iorb IORB(Id(1261),Device(0),Page(20:14/23),Diskblock(20),FileWrite,Openfile(176:15/0),Thread(148:15/W1)) this Page(20:14/23)
[Info][PageTableEntry][do_lock] Get frame Frame(23)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(20:14/23)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(23) Page(20:14/23)Thread(148:15/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(21:15/null) setframe Frame(23)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1262),Device(0),Page(21:15/23),Diskblock(21),FileRead,Openfile(176:15/0),Thread(148:15/W1)) this Page(21:15/23)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(148:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(148:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(23)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(21:15/23)
[PageFaultHandler][do_handlePageFault] thread Thread(148:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(0:15/29)
[MMU][do_refer] address = 54162 offset = 914 page no = 52 Thread(145:15/RU)
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 62731 offset = 267 page no = 61 Thread(148:15/RU)
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 19603 offset = 147 page no = 19 Thread(148:15/RU)
[MMU][do_refer] Do memory read.
[Info][PageTableEntry][do_lock] iorb IORB(Id(1263),Device(2),Page(1:15/null),Diskblock(12),FileWrite,Openfile(184:15/2),Thread(148:15/W0)) this Page(1:15/null)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] requrest_thread = Thread(148:15/W0)
[Info][PageTableEntry][do_lock] validating_thread is null, handlePageFault
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(148:15/W0) 23 Page(1:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(29) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(1:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(0:15/29)
[PageFaultHandler][do_handlePageFault] page Page(1:15/null) setframe Frame(29)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1264),Device(0),Page(1:15/29),Diskblock(1),FileRead,Openfile(176:15/0),Thread(148:15/W2)) this Page(1:15/29)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(148:15/W2)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(148:15/W2)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(1:15/29)
[PageFaultHandler][do_handlePageFault] thread Thread(148:15/W1) status = 31
 Thread do_handlePageFault Success
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 52621 offset = 397 page no = 51 Thread(144:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(144:15/RU) 22 Page(51:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(26) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(51:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(41:15/26)
[PageFaultHandler][do_handlePageFault] Frame(26) is dirty, do swap-out, Thread(144:15/W0)
[PageFaultHandler][SwapOut] page Page(41:15/26) frame Frame(26)file Openfile(176:15/0)
[PageFaultHandler][SwapOut] block no 41
[Info][PageTableEntry][do_lock] iorb IORB(Id(1265),Device(0),Page(41:15/26),Diskblock(41),FileWrite,Openfile(176:15/0),Thread(144:15/W1)) this Page(41:15/26)
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 29050 offset = 378 page no = 28 Thread(149:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(149:15/RU) 21 Page(28:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(3) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(28:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(38:15/3)
[PageFaultHandler][do_handlePageFault] Frame(3) is dirty, do swap-out, Thread(149:15/W0)
[PageFaultHandler][SwapOut] page Page(38:15/3) frame Frame(3)file Openfile(176:15/0)
[PageFaultHandler][SwapOut] block no 38
[Info][PageTableEntry][do_lock] iorb IORB(Id(1266),Device(0),Page(38:15/3),Diskblock(38),FileWrite,Openfile(176:15/0),Thread(149:15/W1)) this Page(38:15/3)
[Info][PageTableEntry][do_lock] Get frame Frame(3)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 22417 offset = 913 page no = 21 Thread(145:15/RU)
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(41:15/26)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(26) Page(41:15/26)Thread(144:15/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(51:15/null) setframe Frame(26)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1267),Device(0),Page(51:15/26),Diskblock(51),FileRead,Openfile(176:15/0),Thread(144:15/W1)) this Page(51:15/26)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(144:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(144:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 205026/250000[PageTableEntry][do_unlock] this Page(38:15/3)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(3) Page(38:15/3)Thread(149:15/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(28:15/null) setframe Frame(3)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1268),Device(0),Page(28:15/3),Diskblock(28),FileRead,Openfile(176:15/0),Thread(149:15/W1)) this Page(28:15/3)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(149:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(149:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(3)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 59914 offset = 522 page no = 58 Thread(147:15/RU)
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(1:15/29)
[PageTableEntry][do_unlock] this Page(51:15/26)
[PageFaultHandler][do_handlePageFault] thread Thread(144:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 23788 offset = 236 page no = 23 Thread(148:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(148:15/RU) 21 Page(23:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(11) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(23:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(24:14/11)
[PageFaultHandler][do_handlePageFault] page Page(23:15/null) setframe Frame(11)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1269),Device(0),Page(23:15/11),Diskblock(23),FileRead,Openfile(176:15/0),Thread(148:15/W1)) this Page(23:15/11)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(148:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(148:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(11)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(28:15/3)
[PageFaultHandler][do_handlePageFault] thread Thread(149:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(23:15/11)
[PageFaultHandler][do_handlePageFault] thread Thread(148:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[Info][PageTableEntry][do_lock] iorb IORB(Id(1270),Device(2),Page(1:15/29),Diskblock(12),FileRead,Openfile(184:15/2),Thread(147:15/W0)) this Page(1:15/29)
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 13712 offset = 400 page no = 13 Thread(145:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(145:15/RU) 21 Page(13:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(3) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(13:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(28:15/3)
[PageFaultHandler][do_handlePageFault] page Page(13:15/null) setframe Frame(3)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1271),Device(0),Page(13:15/3),Diskblock(13),FileRead,Openfile(176:15/0),Thread(145:15/W1)) this Page(13:15/3)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(145:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(145:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(3)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(13:15/3)
[PageFaultHandler][do_handlePageFault] thread Thread(145:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(1:15/29)
[MMU][do_refer] address = 57969 offset = 625 page no = 56 Thread(147:15/RU)
[MMU][do_refer] Do memory write.
Simulation progress: 206007/250000Simulation progress: 207005/250000Simulation progress: 208039/250000Simulation progress: 209001/250000[MMU][do_refer] address = 12306 offset = 18 page no = 12 Thread(150:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(150:15/RU) 21 Page(12:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(2) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(12:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(19:15/2)
[PageFaultHandler][do_handlePageFault] page Page(12:15/null) setframe Frame(2)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1272),Device(0),Page(12:15/2),Diskblock(12),FileRead,Openfile(176:15/0),Thread(150:15/W1)) this Page(12:15/2)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(150:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(150:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 31510 offset = 790 page no = 30 Thread(145:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(145:15/RU) 22 Page(30:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(17) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(30:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(7:15/17)
[PageFaultHandler][do_handlePageFault] Frame(17) is dirty, do swap-out, Thread(145:15/W0)
[PageFaultHandler][SwapOut] page Page(7:15/17) frame Frame(17)file Openfile(176:15/0)
[PageFaultHandler][SwapOut] block no 7
[Info][PageTableEntry][do_lock] iorb IORB(Id(1273),Device(0),Page(7:15/17),Diskblock(7),FileWrite,Openfile(176:15/0),Thread(145:15/W1)) this Page(7:15/17)
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(12:15/2)
[PageFaultHandler][do_handlePageFault] thread Thread(150:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(7:15/17)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(17) Page(7:15/17)Thread(145:15/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(30:15/null) setframe Frame(17)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1274),Device(0),Page(30:15/17),Diskblock(30),FileRead,Openfile(176:15/0),Thread(145:15/W1)) this Page(30:15/17)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(145:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(145:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(30:15/17)
[PageFaultHandler][do_handlePageFault] thread Thread(145:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
Simulation progress: 210113/250000[MMU][do_refer] address = 858 offset = 858 page no = 0 Thread(145:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(145:15/RU) 22 Page(0:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(17) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(0:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(30:15/17)
[PageFaultHandler][do_handlePageFault] Frame(17) is dirty, do swap-out, Thread(145:15/W0)
[PageFaultHandler][SwapOut] page Page(30:15/17) frame Frame(17)file Openfile(176:15/0)
[PageFaultHandler][SwapOut] block no 30
[Info][PageTableEntry][do_lock] iorb IORB(Id(1275),Device(0),Page(30:15/17),Diskblock(30),FileWrite,Openfile(176:15/0),Thread(145:15/W1)) this Page(30:15/17)
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(30:15/17)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(17) Page(30:15/17)Thread(145:15/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(0:15/null) setframe Frame(17)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1276),Device(0),Page(0:15/17),Diskblock(0),FileRead,Openfile(176:15/0),Thread(145:15/W1)) this Page(0:15/17)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(145:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(145:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(0:15/17)
[PageFaultHandler][do_handlePageFault] thread Thread(145:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 21070 offset = 590 page no = 20 Thread(151:15/RU)
[MMU][do_refer] Do memory write.
Simulation progress: 211079/250000[MMU][do_refer] address = 54742 offset = 470 page no = 53 Thread(149:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(149:15/RU) 22 Page(53:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(24) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(53:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(7:14/24)
[PageFaultHandler][do_handlePageFault] Frame(24) is dirty, do swap-out, Thread(149:15/W0)
[PageFaultHandler][SwapOut] page Page(7:14/24) frame Frame(24)file Openfile(176:15/0)
[PageFaultHandler][SwapOut] block no 7
[Info][PageTableEntry][do_lock] iorb IORB(Id(1277),Device(0),Page(7:14/24),Diskblock(7),FileWrite,Openfile(176:15/0),Thread(149:15/W1)) this Page(7:14/24)
[Info][PageTableEntry][do_lock] Get frame Frame(24)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(7:14/24)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(24) Page(7:14/24)Thread(149:15/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(53:15/null) setframe Frame(24)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1278),Device(0),Page(53:15/24),Diskblock(53),FileRead,Openfile(176:15/0),Thread(149:15/W1)) this Page(53:15/24)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(149:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(149:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(24)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 212005/250000[PageTableEntry][do_unlock] this Page(53:15/24)
[PageFaultHandler][do_handlePageFault] thread Thread(149:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 54562 offset = 290 page no = 53 Thread(152:15/RU)
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 19176 offset = 744 page no = 18 Thread(149:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(149:15/RU) 21 Page(18:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(16) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(18:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(8:14/16)
[PageFaultHandler][do_handlePageFault] page Page(18:15/null) setframe Frame(16)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1279),Device(0),Page(18:15/16),Diskblock(18),FileRead,Openfile(176:15/0),Thread(149:15/W1)) this Page(18:15/16)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(149:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(149:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(18:15/16)
[PageFaultHandler][do_handlePageFault] thread Thread(149:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 54001 offset = 753 page no = 52 Thread(149:15/RU)
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 28670 offset = 1022 page no = 27 Thread(151:15/RU)
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 61003 offset = 587 page no = 59 Thread(151:15/RU)
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 8035 offset = 867 page no = 7 Thread(151:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(151:15/RU) 21 Page(7:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(14) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(7:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(25:15/14)
[PageFaultHandler][do_handlePageFault] Frame(14) is dirty, do swap-out, Thread(151:15/W0)
[PageFaultHandler][SwapOut] page Page(25:15/14) frame Frame(14)file Openfile(176:15/0)
[PageFaultHandler][SwapOut] block no 25
[Info][PageTableEntry][do_lock] iorb IORB(Id(1280),Device(0),Page(25:15/14),Diskblock(25),FileWrite,Openfile(176:15/0),Thread(151:15/W1)) this Page(25:15/14)
[Info][PageTableEntry][do_lock] Get frame Frame(14)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(25:15/14)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(14) Page(25:15/14)Thread(151:15/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(7:15/null) setframe Frame(14)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1281),Device(0),Page(7:15/14),Diskblock(7),FileRead,Openfile(176:15/0),Thread(151:15/W1)) this Page(7:15/14)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(151:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(151:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(14)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(7:15/14)
[PageFaultHandler][do_handlePageFault] thread Thread(151:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 3578 offset = 506 page no = 3 Thread(149:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(149:15/RU) 21 Page(3:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(8) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(3:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(46:15/8)
[PageFaultHandler][do_handlePageFault] Frame(8) is dirty, do swap-out, Thread(149:15/W0)
[PageFaultHandler][SwapOut] page Page(46:15/8) frame Frame(8)file Openfile(176:15/0)
[PageFaultHandler][SwapOut] block no 46
[Info][PageTableEntry][do_lock] iorb IORB(Id(1282),Device(0),Page(46:15/8),Diskblock(46),FileWrite,Openfile(176:15/0),Thread(149:15/W1)) this Page(46:15/8)
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 30893 offset = 173 page no = 30 Thread(153:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(153:15/RU) 21 Page(30:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(0) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(30:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(58:15/0)
[PageFaultHandler][do_handlePageFault] page Page(30:15/null) setframe Frame(0)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1283),Device(0),Page(30:15/0),Diskblock(30),FileRead,Openfile(176:15/0),Thread(153:15/W1)) this Page(30:15/0)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(153:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(153:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(46:15/8)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(8) Page(46:15/8)Thread(149:15/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(3:15/null) setframe Frame(8)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1284),Device(0),Page(3:15/8),Diskblock(3),FileRead,Openfile(176:15/0),Thread(149:15/W1)) this Page(3:15/8)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(149:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(149:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 63397 offset = 933 page no = 61 Thread(154:15/RU)
[MMU][do_refer] Do memory write.
Simulation progress: 213001/250000[PageTableEntry][do_unlock] this Page(30:15/0)
[PageFaultHandler][do_handlePageFault] thread Thread(153:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 46080 offset = 0 page no = 45 Thread(151:15/RU)
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(3:15/8)
[PageFaultHandler][do_handlePageFault] thread Thread(149:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 50628 offset = 452 page no = 49 Thread(153:15/RU)
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 39566 offset = 654 page no = 38 Thread(153:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(153:15/RU) 21 Page(38:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(5) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(38:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(2:15/5)
[PageFaultHandler][do_handlePageFault] Frame(5) is dirty, do swap-out, Thread(153:15/W0)
[PageFaultHandler][SwapOut] page Page(2:15/5) frame Frame(5)file Openfile(176:15/0)
[PageFaultHandler][SwapOut] block no 2
[Info][PageTableEntry][do_lock] iorb IORB(Id(1285),Device(0),Page(2:15/5),Diskblock(2),FileWrite,Openfile(176:15/0),Thread(153:15/W1)) this Page(2:15/5)
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(2:15/5)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(5) Page(2:15/5)Thread(153:15/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(38:15/null) setframe Frame(5)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1286),Device(0),Page(38:15/5),Diskblock(38),FileRead,Openfile(176:15/0),Thread(153:15/W1)) this Page(38:15/5)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(153:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(153:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 10219 offset = 1003 page no = 9 Thread(149:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(149:15/RU) 21 Page(9:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(28) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(9:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(55:15/28)
[PageFaultHandler][do_handlePageFault] page Page(9:15/null) setframe Frame(28)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1287),Device(0),Page(9:15/28),Diskblock(9),FileRead,Openfile(176:15/0),Thread(149:15/W1)) this Page(9:15/28)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(149:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(149:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(38:15/5)
[PageFaultHandler][do_handlePageFault] thread Thread(153:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(9:15/28)
[PageFaultHandler][do_handlePageFault] thread Thread(149:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 58837 offset = 469 page no = 57 Thread(153:15/RU)
[MMU][do_refer] Do memory read.
[Info][PageTableEntry][do_lock] iorb IORB(Id(1288),Device(1),Page(0:15/17),Diskblock(15),FileWrite,Openfile(188:15/1),Thread(151:15/W0)) this Page(0:15/17)
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(0:15/17)
[Info][PageTableEntry][do_lock] iorb IORB(Id(1289),Device(1),Page(0:15/17),Diskblock(28),FileWrite,Openfile(188:15/1),Thread(153:15/W0)) this Page(0:15/17)
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(1290),Device(1),Page(1:15/29),Diskblock(28),FileRead,Openfile(188:15/1),Thread(151:15/W0)) this Page(1:15/29)
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(0:15/17)
[Info][PageTableEntry][do_lock] iorb IORB(Id(1291),Device(1),Page(0:15/17),Diskblock(28),FileRead,Openfile(188:15/1),Thread(153:15/W0)) this Page(0:15/17)
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(1:15/29)
[MMU][do_refer] address = 47477 offset = 373 page no = 46 Thread(151:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(151:15/RU) 21 Page(46:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(28) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(46:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(9:15/28)
[PageFaultHandler][do_handlePageFault] page Page(46:15/null) setframe Frame(28)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1292),Device(0),Page(46:15/28),Diskblock(46),FileRead,Openfile(176:15/0),Thread(151:15/W1)) this Page(46:15/28)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(151:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(151:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(0:15/17)
[PageTableEntry][do_unlock] this Page(46:15/28)
[PageFaultHandler][do_handlePageFault] thread Thread(151:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
Simulation progress: 214047/250000[MMU][do_refer] address = 42731 offset = 747 page no = 41 Thread(149:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(149:15/RU) 22 Page(41:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(25) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(41:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(62:15/25)
[PageFaultHandler][do_handlePageFault] page Page(41:15/null) setframe Frame(25)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1293),Device(0),Page(41:15/25),Diskblock(41),FileRead,Openfile(176:15/0),Thread(149:15/W1)) this Page(41:15/25)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(149:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(149:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(25)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(41:15/25)
[PageFaultHandler][do_handlePageFault] thread Thread(149:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 43178 offset = 170 page no = 42 Thread(151:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(151:15/RU) 22 Page(42:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(19) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(42:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(20:15/19)
[PageFaultHandler][do_handlePageFault] Frame(19) is dirty, do swap-out, Thread(151:15/W0)
[PageFaultHandler][SwapOut] page Page(20:15/19) frame Frame(19)file Openfile(176:15/0)
[PageFaultHandler][SwapOut] block no 20
[Info][PageTableEntry][do_lock] iorb IORB(Id(1294),Device(0),Page(20:15/19),Diskblock(20),FileWrite,Openfile(176:15/0),Thread(151:15/W1)) this Page(20:15/19)
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(20:15/19)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(19) Page(20:15/19)Thread(151:15/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(42:15/null) setframe Frame(19)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1295),Device(0),Page(42:15/19),Diskblock(42),FileRead,Openfile(176:15/0),Thread(151:15/W1)) this Page(42:15/19)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(151:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(151:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(42:15/19)
[PageFaultHandler][do_handlePageFault] thread Thread(151:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[Info][PageTableEntry][do_lock] iorb IORB(Id(1296),Device(1),Page(0:15/17),Diskblock(0),FileWrite,Openfile(188:15/1),Thread(149:15/W0)) this Page(0:15/17)
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(0:15/17)
[MMU][do_refer] address = 117 offset = 117 page no = 0 Thread(151:15/RU)
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 26902 offset = 278 page no = 26 Thread(155:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(155:15/RU) 21 Page(26:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(15) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(26:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(59:15/15)
[PageFaultHandler][do_handlePageFault] Frame(15) is dirty, do swap-out, Thread(155:15/W0)
[PageFaultHandler][SwapOut] page Page(59:15/15) frame Frame(15)file Openfile(176:15/0)
[PageFaultHandler][SwapOut] block no 59
[Info][PageTableEntry][do_lock] iorb IORB(Id(1297),Device(0),Page(59:15/15),Diskblock(59),FileWrite,Openfile(176:15/0),Thread(155:15/W1)) this Page(59:15/15)
[Info][PageTableEntry][do_lock] Get frame Frame(15)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(59:15/15)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(15) Page(59:15/15)Thread(155:15/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(26:15/null) setframe Frame(15)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1298),Device(0),Page(26:15/15),Diskblock(26),FileRead,Openfile(176:15/0),Thread(155:15/W1)) this Page(26:15/15)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(155:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(155:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(15)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(26:15/15)
[PageFaultHandler][do_handlePageFault] thread Thread(155:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 37322 offset = 458 page no = 36 Thread(149:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(149:15/RU) 21 Page(36:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(22) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(36:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(56:15/22)
[PageFaultHandler][do_handlePageFault] Frame(22) is dirty, do swap-out, Thread(149:15/W0)
[PageFaultHandler][SwapOut] page Page(56:15/22) frame Frame(22)file Openfile(176:15/0)
[PageFaultHandler][SwapOut] block no 56
[Info][PageTableEntry][do_lock] iorb IORB(Id(1299),Device(0),Page(56:15/22),Diskblock(56),FileWrite,Openfile(176:15/0),Thread(149:15/W1)) this Page(56:15/22)
[Info][PageTableEntry][do_lock] Get frame Frame(22)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(56:15/22)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(22) Page(56:15/22)Thread(149:15/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(36:15/null) setframe Frame(22)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1300),Device(0),Page(36:15/22),Diskblock(36),FileRead,Openfile(176:15/0),Thread(149:15/W1)) this Page(36:15/22)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(149:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(149:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(22)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 215022/250000[PageTableEntry][do_unlock] this Page(36:15/22)
[PageFaultHandler][do_handlePageFault] thread Thread(149:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 52062 offset = 862 page no = 50 Thread(155:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(155:15/RU) 22 Page(50:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(1) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(50:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(57:15/1)
[PageFaultHandler][do_handlePageFault] page Page(50:15/null) setframe Frame(1)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1301),Device(0),Page(50:15/1),Diskblock(50),FileRead,Openfile(176:15/0),Thread(155:15/W1)) this Page(50:15/1)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(155:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(155:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 8882 offset = 690 page no = 8 Thread(149:15/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(149:15/RU) 21 Page(8:15/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(27) Reserved by Task(15/L)
[PageFaultHandler][do_handlePageFault] page Page(8:15/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(49:15/27)
[PageFaultHandler][do_handlePageFault] Frame(27) is dirty, do swap-out, Thread(149:15/W0)
[PageFaultHandler][SwapOut] page Page(49:15/27) frame Frame(27)file Openfile(176:15/0)
[PageFaultHandler][SwapOut] block no 49
[Info][PageTableEntry][do_lock] iorb IORB(Id(1302),Device(0),Page(49:15/27),Diskblock(49),FileWrite,Openfile(176:15/0),Thread(149:15/W1)) this Page(49:15/27)
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(50:15/1)
[PageFaultHandler][do_handlePageFault] thread Thread(155:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(49:15/27)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(27) Page(49:15/27)Thread(149:15/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(8:15/null) setframe Frame(27)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1303),Device(0),Page(8:15/27),Diskblock(8),FileRead,Openfile(176:15/0),Thread(149:15/W1)) this Page(8:15/27)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(149:15/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(149:15/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(1304),Device(1),Page(0:15/17),Diskblock(15),FileRead,Openfile(188:15/1),Thread(151:15/W0)) this Page(0:15/17)
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(8:15/27)
[PageFaultHandler][do_handlePageFault] thread Thread(149:15/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(0:15/17)
[PageTable][do_deallocateMemory] this Pagetable(Task(15/T))
[PageTable][do_deallocateMemory]  page_table_entry Page(0:15/17) frame_table_entry Frame(17)
[PageTable][do_deallocateMemory]  page_table_entry Page(1:15/29) frame_table_entry Frame(29)
[PageTable][do_deallocateMemory]  page_table_entry Page(3:15/8) frame_table_entry Frame(8)
[PageTable][do_deallocateMemory]  page_table_entry Page(7:15/14) frame_table_entry Frame(14)
[PageTable][do_deallocateMemory]  page_table_entry Page(8:15/27) frame_table_entry Frame(27)
[PageTable][do_deallocateMemory]  page_table_entry Page(11:15/13) frame_table_entry Frame(13)
[PageTable][do_deallocateMemory]  page_table_entry Page(12:15/2) frame_table_entry Frame(2)
[PageTable][do_deallocateMemory]  page_table_entry Page(13:15/3) frame_table_entry Frame(3)
[PageTable][do_deallocateMemory]  page_table_entry Page(17:15/7) frame_table_entry Frame(7)
[PageTable][do_deallocateMemory]  page_table_entry Page(18:15/16) frame_table_entry Frame(16)
[PageTable][do_deallocateMemory]  page_table_entry Page(21:15/23) frame_table_entry Frame(23)
[PageTable][do_deallocateMemory]  page_table_entry Page(23:15/11) frame_table_entry Frame(11)
[PageTable][do_deallocateMemory]  page_table_entry Page(26:15/15) frame_table_entry Frame(15)
[PageTable][do_deallocateMemory]  page_table_entry Page(27:15/4) frame_table_entry Frame(4)
[PageTable][do_deallocateMemory]  page_table_entry Page(30:15/0) frame_table_entry Frame(0)
[PageTable][do_deallocateMemory]  page_table_entry Page(32:15/9) frame_table_entry Frame(9)
[PageTable][do_deallocateMemory]  page_table_entry Page(36:15/22) frame_table_entry Frame(22)
[PageTable][do_deallocateMemory]  page_table_entry Page(37:15/12) frame_table_entry Frame(12)
[PageTable][do_deallocateMemory]  page_table_entry Page(38:15/5) frame_table_entry Frame(5)
[PageTable][do_deallocateMemory]  page_table_entry Page(40:15/18) frame_table_entry Frame(18)
[PageTable][do_deallocateMemory]  page_table_entry Page(41:15/25) frame_table_entry Frame(25)
[PageTable][do_deallocateMemory]  page_table_entry Page(42:15/19) frame_table_entry Frame(19)
[PageTable][do_deallocateMemory]  page_table_entry Page(45:15/20) frame_table_entry Frame(20)
[PageTable][do_deallocateMemory]  page_table_entry Page(46:15/28) frame_table_entry Frame(28)
[PageTable][do_deallocateMemory]  page_table_entry Page(48:15/21) frame_table_entry Frame(21)
[PageTable][do_deallocateMemory]  page_table_entry Page(50:15/1) frame_table_entry Frame(1)
[PageTable][do_deallocateMemory]  page_table_entry Page(51:15/26) frame_table_entry Frame(26)
[PageTable][do_deallocateMemory]  page_table_entry Page(52:15/6) frame_table_entry Frame(6)
[PageTable][do_deallocateMemory]  page_table_entry Page(53:15/24) frame_table_entry Frame(24)
[PageTable][do_deallocateMemory]  page_table_entry Page(61:15/10) frame_table_entry Frame(10)
[MMU][do_refer] address = 54205 offset = 957 page no = 52 Thread(156:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(156:3/RU) 22 Page(52:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(27) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(52:3/null)
[PageFaultHandler][do_handlePageFault] page Page(52:3/null) setframe Frame(27)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1305),Device(0),Page(52:3/27),Diskblock(180),FileRead,Openfile(10:3/0),Thread(156:3/W1)) this Page(52:3/27)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(156:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(156:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 35221 offset = 405 page no = 34 Thread(157:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(157:16/RU) 22 Page(34:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(12) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(34:16/null)
[PageFaultHandler][do_handlePageFault] page Page(34:16/null) setframe Frame(12)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1306),Device(0),Page(34:16/12),Diskblock(34),FileRead,Openfile(192:16/0),Thread(157:16/W1)) this Page(34:16/12)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(157:16/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(157:16/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(12)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 63339 offset = 875 page no = 61 Thread(14:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(14:3/RU) 22 Page(61:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(4) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(61:3/null)
[PageFaultHandler][do_handlePageFault] page Page(61:3/null) setframe Frame(4)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1307),Device(0),Page(61:3/4),Diskblock(189),FileRead,Openfile(10:3/0),Thread(14:3/W1)) this Page(61:3/4)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(14:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(14:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(52:3/27)
[PageFaultHandler][do_handlePageFault] thread Thread(156:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
Simulation progress: 216020/250000[PageTableEntry][do_unlock] this Page(34:16/12)
[PageFaultHandler][do_handlePageFault] thread Thread(157:16/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 12845 offset = 557 page no = 12 Thread(156:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(156:3/RU) 21 Page(12:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(12) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(12:3/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(34:16/12)
[PageFaultHandler][do_handlePageFault] Frame(12) is dirty, do swap-out, Thread(156:3/W0)
[PageFaultHandler][SwapOut] page Page(34:16/12) frame Frame(12)file Openfile(10:3/0)
[PageFaultHandler][SwapOut] block no 34
[Info][PageTableEntry][do_lock] iorb IORB(Id(1308),Device(0),Page(34:16/12),Diskblock(162),FileWrite,Openfile(10:3/0),Thread(156:3/W1)) this Page(34:16/12)
[Info][PageTableEntry][do_lock] Get frame Frame(12)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(61:3/4)
[PageFaultHandler][do_handlePageFault] thread Thread(14:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 50685 offset = 509 page no = 49 Thread(157:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(157:16/RU) 21 Page(49:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(21) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(49:16/null)
[PageFaultHandler][do_handlePageFault] page Page(49:16/null) setframe Frame(21)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1309),Device(0),Page(49:16/21),Diskblock(49),FileRead,Openfile(192:16/0),Thread(157:16/W1)) this Page(49:16/21)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(157:16/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(157:16/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 11621 offset = 357 page no = 11 Thread(14:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(14:3/RU) 22 Page(11:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(6) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(11:3/null)
[PageFaultHandler][do_handlePageFault] page Page(11:3/null) setframe Frame(6)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1310),Device(0),Page(11:3/6),Diskblock(139),FileRead,Openfile(10:3/0),Thread(14:3/W1)) this Page(11:3/6)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(14:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(14:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(6)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 28014 offset = 366 page no = 27 Thread(158:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(158:16/RU) 21 Page(27:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(13) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(27:16/null)
[PageFaultHandler][do_handlePageFault] page Page(27:16/null) setframe Frame(13)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1311),Device(0),Page(27:16/13),Diskblock(27),FileRead,Openfile(192:16/0),Thread(158:16/W1)) this Page(27:16/13)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(158:16/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(158:16/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(13)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(34:16/12)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(12) Page(34:16/12)Thread(156:3/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(12:3/null) setframe Frame(12)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1312),Device(0),Page(12:3/12),Diskblock(140),FileRead,Openfile(10:3/0),Thread(156:3/W1)) this Page(12:3/12)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(156:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(156:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(12)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(49:16/21)
[PageFaultHandler][do_handlePageFault] thread Thread(157:16/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 28250 offset = 602 page no = 27 Thread(159:16/RU)
[PageTableEntry][do_unlock] this Page(11:3/6)
[PageFaultHandler][do_handlePageFault] thread Thread(14:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(27:16/13)
[PageFaultHandler][do_handlePageFault] thread Thread(158:16/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(12:3/12)
[PageFaultHandler][do_handlePageFault] thread Thread(156:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 16257 offset = 897 page no = 15 Thread(159:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(159:16/RU) 21 Page(15:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(6) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(15:16/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(11:3/6)
[PageFaultHandler][do_handlePageFault] Frame(6) is dirty, do swap-out, Thread(159:16/W0)
[PageFaultHandler][SwapOut] page Page(11:3/6) frame Frame(6)file Openfile(192:16/0)
[PageFaultHandler][SwapOut] block no 11
[Info][PageTableEntry][do_lock] iorb IORB(Id(1313),Device(0),Page(11:3/6),Diskblock(11),FileWrite,Openfile(192:16/0),Thread(159:16/W1)) this Page(11:3/6)
[Info][PageTableEntry][do_lock] Get frame Frame(6)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 62865 offset = 401 page no = 61 Thread(158:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(158:16/RU) 21 Page(61:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(23) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(61:16/null)
[PageFaultHandler][do_handlePageFault] page Page(61:16/null) setframe Frame(23)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1314),Device(0),Page(61:16/23),Diskblock(61),FileRead,Openfile(192:16/0),Thread(158:16/W1)) this Page(61:16/23)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(158:16/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(158:16/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(23)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 217029/250000[Info][PageTableEntry][do_lock] iorb IORB(Id(1315),Device(1),Page(27:16/13),Diskblock(9),FileRead,Openfile(194:16/1),Thread(157:16/W0)) this Page(27:16/13)
[Info][PageTableEntry][do_lock] Get frame Frame(13)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(11:3/6)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(6) Page(11:3/6)Thread(159:16/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(15:16/null) setframe Frame(6)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1316),Device(0),Page(15:16/6),Diskblock(15),FileRead,Openfile(192:16/0),Thread(159:16/W1)) this Page(15:16/6)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(159:16/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(159:16/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(6)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(27:16/13)
[PageTableEntry][do_unlock] this Page(61:16/23)
[PageFaultHandler][do_handlePageFault] thread Thread(158:16/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 22656 offset = 128 page no = 22 Thread(160:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(160:14/RU) 21 Page(22:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(26) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(22:14/null)
[PageFaultHandler][do_handlePageFault] page Page(22:14/null) setframe Frame(26)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1317),Device(0),Page(22:14/26),Diskblock(86),FileRead,Openfile(156:14/0),Thread(160:14/W1)) this Page(22:14/26)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(160:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(160:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 702 offset = 702 page no = 0 Thread(161:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(161:14/RU) 22 Page(0:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(11) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(0:14/null)
[PageFaultHandler][do_handlePageFault] page Page(0:14/null) setframe Frame(11)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1318),Device(0),Page(0:14/11),Diskblock(64),FileRead,Openfile(156:14/0),Thread(161:14/W1)) this Page(0:14/11)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(161:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(161:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(11)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(15:16/6)
[PageFaultHandler][do_handlePageFault] thread Thread(159:16/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(22:14/26)
[PageFaultHandler][do_handlePageFault] thread Thread(160:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 30216 offset = 520 page no = 29 Thread(159:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(159:16/RU) 22 Page(29:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(26) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(29:16/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(22:14/26)
[PageFaultHandler][do_handlePageFault] page Page(29:16/null) setframe Frame(26)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1319),Device(0),Page(29:16/26),Diskblock(29),FileRead,Openfile(192:16/0),Thread(159:16/W1)) this Page(29:16/26)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(159:16/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(159:16/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(0:14/11)
[PageFaultHandler][do_handlePageFault] thread Thread(161:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(29:16/26)
[PageFaultHandler][do_handlePageFault] thread Thread(159:16/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 10913 offset = 673 page no = 10 Thread(163:17/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(163:17/RU) 21 Page(10:17/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(9) Reserved by Task(17/L)
[PageFaultHandler][do_handlePageFault] page Page(10:17/null)
[PageFaultHandler][do_handlePageFault] page Page(10:17/null) setframe Frame(9)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1320),Device(0),Page(10:17/9),Diskblock(202),FileRead,Openfile(200:17/0),Thread(163:17/W1)) this Page(10:17/9)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(163:17/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(163:17/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 15565 offset = 205 page no = 15 Thread(14:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(14:3/RU) 22 Page(15:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(2) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(15:3/null)
[PageFaultHandler][do_handlePageFault] page Page(15:3/null) setframe Frame(2)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1321),Device(0),Page(15:3/2),Diskblock(143),FileRead,Openfile(10:3/0),Thread(14:3/W1)) this Page(15:3/2)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(14:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(14:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 218035/250000[PageTableEntry][do_unlock] this Page(10:17/9)
[PageFaultHandler][do_handlePageFault] thread Thread(163:17/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(15:3/2)
[PageFaultHandler][do_handlePageFault] thread Thread(14:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 32555 offset = 811 page no = 31 Thread(156:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(156:3/RU) 21 Page(31:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(2) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(31:3/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(15:3/2)
[PageFaultHandler][do_handlePageFault] Frame(2) is dirty, do swap-out, Thread(156:3/W0)
[PageFaultHandler][SwapOut] page Page(15:3/2) frame Frame(2)file Openfile(10:3/0)
[PageFaultHandler][SwapOut] block no 15
[Info][PageTableEntry][do_lock] iorb IORB(Id(1322),Device(0),Page(15:3/2),Diskblock(143),FileWrite,Openfile(10:3/0),Thread(156:3/W1)) this Page(15:3/2)
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(15:3/2)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(2) Page(15:3/2)Thread(156:3/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(31:3/null) setframe Frame(2)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1323),Device(0),Page(31:3/2),Diskblock(159),FileRead,Openfile(10:3/0),Thread(156:3/W1)) this Page(31:3/2)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(156:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(156:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 41198 offset = 238 page no = 40 Thread(162:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(162:16/RU) 22 Page(40:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(17) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(40:16/null)
[PageFaultHandler][do_handlePageFault] page Page(40:16/null) setframe Frame(17)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1324),Device(0),Page(40:16/17),Diskblock(40),FileRead,Openfile(192:16/0),Thread(162:16/W1)) this Page(40:16/17)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(162:16/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(162:16/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 47168 offset = 64 page no = 46 Thread(158:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(158:16/RU) 21 Page(46:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(24) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(46:16/null)
[PageFaultHandler][do_handlePageFault] page Page(46:16/null) setframe Frame(24)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1325),Device(0),Page(46:16/24),Diskblock(46),FileRead,Openfile(192:16/0),Thread(158:16/W1)) this Page(46:16/24)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(158:16/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(158:16/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(24)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(31:3/2)
[PageFaultHandler][do_handlePageFault] thread Thread(156:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(40:16/17)
[PageFaultHandler][do_handlePageFault] thread Thread(162:16/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 27903 offset = 255 page no = 27 Thread(163:17/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(163:17/RU) 22 Page(27:17/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(17) Reserved by Task(17/L)
[PageFaultHandler][do_handlePageFault] page Page(27:17/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(40:16/17)
[PageFaultHandler][do_handlePageFault] Frame(17) is dirty, do swap-out, Thread(163:17/W0)
[PageFaultHandler][SwapOut] page Page(40:16/17) frame Frame(17)file Openfile(200:17/0)
[PageFaultHandler][SwapOut] block no 40
[Info][PageTableEntry][do_lock] iorb IORB(Id(1326),Device(0),Page(40:16/17),Diskblock(232),FileWrite,Openfile(200:17/0),Thread(163:17/W1)) this Page(40:16/17)
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(46:16/24)
[PageFaultHandler][do_handlePageFault] thread Thread(158:16/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 972 offset = 972 page no = 0 Thread(14:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(14:3/RU) 21 Page(0:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(16) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(0:3/null)
[PageFaultHandler][do_handlePageFault] page Page(0:3/null) setframe Frame(16)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1327),Device(0),Page(0:3/16),Diskblock(128),FileRead,Openfile(10:3/0),Thread(14:3/W1)) this Page(0:3/16)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(14:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(14:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 219025/250000[PageTableEntry][do_unlock] this Page(40:16/17)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(17) Page(40:16/17)Thread(163:17/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(27:17/null) setframe Frame(17)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1328),Device(0),Page(27:17/17),Diskblock(219),FileRead,Openfile(200:17/0),Thread(163:17/W1)) this Page(27:17/17)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(163:17/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(163:17/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 61222 offset = 806 page no = 59 Thread(164:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(164:3/RU) 22 Page(59:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(0) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(59:3/null)
[PageFaultHandler][do_handlePageFault] page Page(59:3/null) setframe Frame(0)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1329),Device(0),Page(59:3/0),Diskblock(187),FileRead,Openfile(10:3/0),Thread(164:3/W1)) this Page(59:3/0)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(164:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(164:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(0:3/16)
[PageFaultHandler][do_handlePageFault] thread Thread(14:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 57735 offset = 391 page no = 56 Thread(162:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(162:16/RU) 21 Page(56:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(8) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(56:16/null)
[PageFaultHandler][do_handlePageFault] page Page(56:16/null) setframe Frame(8)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1330),Device(0),Page(56:16/8),Diskblock(56),FileRead,Openfile(192:16/0),Thread(162:16/W1)) this Page(56:16/8)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(162:16/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(162:16/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(27:17/17)
[PageFaultHandler][do_handlePageFault] thread Thread(163:17/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(59:3/0)
[PageFaultHandler][do_handlePageFault] thread Thread(164:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(56:16/8)
[PageFaultHandler][do_handlePageFault] thread Thread(162:16/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 37959 offset = 71 page no = 37 Thread(157:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(157:16/RU) 22 Page(37:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(0) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(37:16/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(59:3/0)
[PageFaultHandler][do_handlePageFault] Frame(0) is dirty, do swap-out, Thread(157:16/W0)
[PageFaultHandler][SwapOut] page Page(59:3/0) frame Frame(0)file Openfile(192:16/0)
[PageFaultHandler][SwapOut] block no 59
[Info][PageTableEntry][do_lock] iorb IORB(Id(1331),Device(0),Page(59:3/0),Diskblock(59),FileWrite,Openfile(192:16/0),Thread(157:16/W1)) this Page(59:3/0)
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(59:3/0)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(0) Page(59:3/0)Thread(157:16/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(37:16/null) setframe Frame(0)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1332),Device(0),Page(37:16/0),Diskblock(37),FileRead,Openfile(192:16/0),Thread(157:16/W1)) this Page(37:16/0)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(157:16/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(157:16/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(37:16/0)
[PageFaultHandler][do_handlePageFault] thread Thread(157:16/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 8140 offset = 972 page no = 7 Thread(168:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(168:14/RU) 22 Page(7:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(8) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(7:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(56:16/8)
[PageFaultHandler][do_handlePageFault] page Page(7:14/null) setframe Frame(8)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1333),Device(0),Page(7:14/8),Diskblock(71),FileRead,Openfile(156:14/0),Thread(168:14/W1)) this Page(7:14/8)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(168:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(168:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(7:14/8)
[PageFaultHandler][do_handlePageFault] thread Thread(168:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 43476 offset = 468 page no = 42 Thread(163:17/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(163:17/RU) 21 Page(42:17/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(28) Reserved by Task(17/L)
[PageFaultHandler][do_handlePageFault] page Page(42:17/null)
[PageFaultHandler][do_handlePageFault] page Page(42:17/null) setframe Frame(28)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1334),Device(0),Page(42:17/28),Diskblock(234),FileRead,Openfile(200:17/0),Thread(163:17/W1)) this Page(42:17/28)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(163:17/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(163:17/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageCleanDaemon][unleash] osp.Memory.PageCleanDaemon@e14d43 execute time 220000
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(27)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(4)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(13)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(11)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(26)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(17)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(27)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(27) Page(52:3/27) isDirty true
[PageFaultHandler][SwapOut] file Openfile(10:3/0)
[PageFaultHandler][SwapOut] block no 52
[Info][PageTableEntry][do_lock] iorb IORB(Id(1335),Device(0),Page(52:3/27),Diskblock(180),FileWrite,Openfile(10:3/0),Thread(170:0/W1)) this Page(52:3/27)
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 220078/250000[MMU][do_refer] address = 3998 offset = 926 page no = 3 Thread(164:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(164:3/RU) 22 Page(3:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(25) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(3:3/null)
[PageFaultHandler][do_handlePageFault] page Page(3:3/null) setframe Frame(25)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1336),Device(0),Page(3:3/25),Diskblock(131),FileRead,Openfile(10:3/0),Thread(164:3/W1)) this Page(3:3/25)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(164:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(164:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(25)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 189 offset = 189 page no = 0 Thread(126:14/RU)
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 54702 offset = 430 page no = 53 Thread(126:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(126:14/RU) 21 Page(53:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(19) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(53:14/null)
[PageFaultHandler][do_handlePageFault] page Page(53:14/null) setframe Frame(19)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1337),Device(0),Page(53:14/19),Diskblock(117),FileRead,Openfile(156:14/0),Thread(126:14/W1)) this Page(53:14/19)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(126:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(126:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(42:17/28)
[PageFaultHandler][do_handlePageFault] thread Thread(163:17/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(52:3/27)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(27) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(4)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(4) Page(61:3/4) isDirty true
[PageFaultHandler][SwapOut] file Openfile(10:3/0)
[PageFaultHandler][SwapOut] block no 61
[Info][PageTableEntry][do_lock] iorb IORB(Id(1338),Device(0),Page(61:3/4),Diskblock(189),FileWrite,Openfile(10:3/0),Thread(170:0/W1)) this Page(61:3/4)
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(3:3/25)
[PageFaultHandler][do_handlePageFault] thread Thread(164:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 54752 offset = 480 page no = 53 Thread(14:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(14:3/RU) 22 Page(53:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(25) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(53:3/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(3:3/25)
[PageFaultHandler][do_handlePageFault] Frame(25) is dirty, do swap-out, Thread(14:3/W0)
[PageFaultHandler][SwapOut] page Page(3:3/25) frame Frame(25)file Openfile(10:3/0)
[PageFaultHandler][SwapOut] block no 3
[Info][PageTableEntry][do_lock] iorb IORB(Id(1339),Device(0),Page(3:3/25),Diskblock(131),FileWrite,Openfile(10:3/0),Thread(14:3/W1)) this Page(3:3/25)
[Info][PageTableEntry][do_lock] Get frame Frame(25)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 61477 offset = 37 page no = 60 Thread(157:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(157:16/RU) 21 Page(60:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(15) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(60:16/null)
[PageFaultHandler][do_handlePageFault] page Page(60:16/null) setframe Frame(15)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1340),Device(0),Page(60:16/15),Diskblock(60),FileRead,Openfile(192:16/0),Thread(157:16/W1)) this Page(60:16/15)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(157:16/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(157:16/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(15)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 34708 offset = 916 page no = 33 Thread(165:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(165:16/RU) 22 Page(33:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(22) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(33:16/null)
[PageFaultHandler][do_handlePageFault] page Page(33:16/null) setframe Frame(22)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1341),Device(0),Page(33:16/22),Diskblock(33),FileRead,Openfile(192:16/0),Thread(165:16/W1)) this Page(33:16/22)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(165:16/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(165:16/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(22)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 57576 offset = 232 page no = 56 Thread(156:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(156:3/RU) 21 Page(56:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(1) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(56:3/null)
[PageFaultHandler][do_handlePageFault] page Page(56:3/null) setframe Frame(1)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1342),Device(0),Page(56:3/1),Diskblock(184),FileRead,Openfile(10:3/0),Thread(156:3/W1)) this Page(56:3/1)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(156:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(156:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(53:14/19)
[PageFaultHandler][do_handlePageFault] thread Thread(126:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(61:3/4)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(4) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(13)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(13) Page(27:16/13) isDirty true
[PageFaultHandler][SwapOut] file Openfile(192:16/0)
[PageFaultHandler][SwapOut] block no 27
[Info][PageTableEntry][do_lock] iorb IORB(Id(1343),Device(0),Page(27:16/13),Diskblock(27),FileWrite,Openfile(192:16/0),Thread(170:0/W1)) this Page(27:16/13)
[Info][PageTableEntry][do_lock] Get frame Frame(13)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 20863 offset = 383 page no = 20 Thread(163:17/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(163:17/RU) 21 Page(20:17/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(7) Reserved by Task(17/L)
[PageFaultHandler][do_handlePageFault] page Page(20:17/null)
[PageFaultHandler][do_handlePageFault] page Page(20:17/null) setframe Frame(7)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1344),Device(0),Page(20:17/7),Diskblock(212),FileRead,Openfile(200:17/0),Thread(163:17/W1)) this Page(20:17/7)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(163:17/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(163:17/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(7)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(3:3/25)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(25) Page(3:3/25)Thread(14:3/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(53:3/null) setframe Frame(25)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1345),Device(0),Page(53:3/25),Diskblock(181),FileRead,Openfile(10:3/0),Thread(14:3/W1)) this Page(53:3/25)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(14:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(14:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(25)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(60:16/15)
[PageFaultHandler][do_handlePageFault] thread Thread(157:16/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(33:16/22)
[PageFaultHandler][do_handlePageFault] thread Thread(165:16/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 41676 offset = 716 page no = 40 Thread(126:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(126:14/RU) 21 Page(40:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(27) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(40:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(52:3/27)
[PageFaultHandler][do_handlePageFault] page Page(40:14/null) setframe Frame(27)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1346),Device(0),Page(40:14/27),Diskblock(104),FileRead,Openfile(156:14/0),Thread(126:14/W1)) this Page(40:14/27)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(126:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(126:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 221060/250000[MMU][do_refer] address = 22366 offset = 862 page no = 21 Thread(168:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(168:14/RU) 22 Page(21:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(4) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(21:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(61:3/4)
[PageFaultHandler][do_handlePageFault] page Page(21:14/null) setframe Frame(4)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1347),Device(0),Page(21:14/4),Diskblock(85),FileRead,Openfile(156:14/0),Thread(168:14/W1)) this Page(21:14/4)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(168:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(168:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(56:3/1)
[PageFaultHandler][do_handlePageFault] thread Thread(156:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 17703 offset = 295 page no = 17 Thread(161:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(161:14/RU) 22 Page(17:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(1) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(17:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(56:3/1)
[PageFaultHandler][do_handlePageFault] page Page(17:14/null) setframe Frame(1)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1348),Device(0),Page(17:14/1),Diskblock(81),FileRead,Openfile(156:14/0),Thread(161:14/W1)) this Page(17:14/1)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(161:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(161:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(27:16/13)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(13) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(11)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(11) Page(0:14/11) isDirty true
[PageFaultHandler][SwapOut] file Openfile(156:14/0)
[PageFaultHandler][SwapOut] block no 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(1349),Device(0),Page(0:14/11),Diskblock(64),FileWrite,Openfile(156:14/0),Thread(170:0/W1)) this Page(0:14/11)
[Info][PageTableEntry][do_lock] Get frame Frame(11)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 22086 offset = 582 page no = 21 Thread(169:18/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(169:18/RU) 22 Page(21:18/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(10) Reserved by Task(18/L)
[PageFaultHandler][do_handlePageFault] page Page(21:18/null)
[PageFaultHandler][do_handlePageFault] page Page(21:18/null) setframe Frame(10)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1350),Device(0),Page(21:18/10),Diskblock(277),FileRead,Openfile(206:18/0),Thread(169:18/W1)) this Page(21:18/10)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(169:18/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(169:18/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(10)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(20:17/7)
[PageFaultHandler][do_handlePageFault] thread Thread(163:17/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(53:3/25)
[PageFaultHandler][do_handlePageFault] thread Thread(14:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 7896 offset = 728 page no = 7 Thread(165:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(165:16/RU) 21 Page(7:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(21) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(7:16/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(49:16/21)
[PageFaultHandler][do_handlePageFault] page Page(7:16/null) setframe Frame(21)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1351),Device(0),Page(7:16/21),Diskblock(7),FileRead,Openfile(192:16/0),Thread(165:16/W1)) this Page(7:16/21)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(165:16/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(165:16/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(40:14/27)
[PageFaultHandler][do_handlePageFault] thread Thread(126:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 56251 offset = 955 page no = 54 Thread(156:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(156:3/RU) 22 Page(54:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(27) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(54:3/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(40:14/27)
[PageFaultHandler][do_handlePageFault] page Page(54:3/null) setframe Frame(27)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1352),Device(0),Page(54:3/27),Diskblock(182),FileRead,Openfile(10:3/0),Thread(156:3/W1)) this Page(54:3/27)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(156:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(156:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(21:14/4)
[PageFaultHandler][do_handlePageFault] thread Thread(168:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(17:14/1)
[PageFaultHandler][do_handlePageFault] thread Thread(161:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(0:14/11)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(11) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(26)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(26) Page(29:16/26) isDirty true
[PageFaultHandler][SwapOut] file Openfile(192:16/0)
[PageFaultHandler][SwapOut] block no 29
[Info][PageTableEntry][do_lock] iorb IORB(Id(1353),Device(0),Page(29:16/26),Diskblock(29),FileWrite,Openfile(192:16/0),Thread(170:0/W1)) this Page(29:16/26)
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 6429 offset = 285 page no = 6 Thread(164:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(164:3/RU) 22 Page(6:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(1) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(6:3/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(17:14/1)
[PageFaultHandler][do_handlePageFault] Frame(1) is dirty, do swap-out, Thread(164:3/W0)
[PageFaultHandler][SwapOut] page Page(17:14/1) frame Frame(1)file Openfile(10:3/0)
[PageFaultHandler][SwapOut] block no 17
[Info][PageTableEntry][do_lock] iorb IORB(Id(1354),Device(0),Page(17:14/1),Diskblock(145),FileWrite,Openfile(10:3/0),Thread(164:3/W1)) this Page(17:14/1)
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 222040/250000[MMU][do_refer] address = 27848 offset = 200 page no = 27 Thread(126:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(126:14/RU) 22 Page(27:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(13) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(27:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(27:16/13)
[PageFaultHandler][do_handlePageFault] page Page(27:14/null) setframe Frame(13)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1355),Device(0),Page(27:14/13),Diskblock(91),FileRead,Openfile(156:14/0),Thread(126:14/W1)) this Page(27:14/13)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(126:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(126:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(13)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(21:18/10)
[PageFaultHandler][do_handlePageFault] thread Thread(169:18/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(7:16/21)
[PageFaultHandler][do_handlePageFault] thread Thread(165:16/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(54:3/27)
[PageFaultHandler][do_handlePageFault] thread Thread(156:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 2339 offset = 291 page no = 2 Thread(163:17/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(163:17/RU) 21 Page(2:17/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(6) Reserved by Task(17/L)
[PageFaultHandler][do_handlePageFault] page Page(2:17/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(15:16/6)
[PageFaultHandler][do_handlePageFault] page Page(2:17/null) setframe Frame(6)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1356),Device(0),Page(2:17/6),Diskblock(194),FileRead,Openfile(200:17/0),Thread(163:17/W1)) this Page(2:17/6)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(163:17/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(163:17/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(6)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(29:16/26)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(26) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(17)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(17) Page(27:17/17) isDirty true
[PageFaultHandler][SwapOut] file Openfile(200:17/0)
[PageFaultHandler][SwapOut] block no 27
[Info][PageTableEntry][do_lock] iorb IORB(Id(1357),Device(0),Page(27:17/17),Diskblock(219),FileWrite,Openfile(200:17/0),Thread(170:0/W1)) this Page(27:17/17)
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 10988 offset = 748 page no = 10 Thread(159:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(159:16/RU) 21 Page(10:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(11) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(10:16/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(0:14/11)
[PageFaultHandler][do_handlePageFault] page Page(10:16/null) setframe Frame(11)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1358),Device(0),Page(10:16/11),Diskblock(10),FileRead,Openfile(192:16/0),Thread(159:16/W1)) this Page(10:16/11)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(159:16/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(159:16/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(11)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(17:14/1)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(1) Page(17:14/1)Thread(164:3/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(6:3/null) setframe Frame(1)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1359),Device(0),Page(6:3/1),Diskblock(134),FileRead,Openfile(10:3/0),Thread(164:3/W1)) this Page(6:3/1)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(164:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(164:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 223020/250000[PageTableEntry][do_unlock] this Page(27:14/13)
[PageFaultHandler][do_handlePageFault] thread Thread(126:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 41620 offset = 660 page no = 40 Thread(171:19/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(171:19/RU) 22 Page(40:19/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(3) Reserved by Task(19/L)
[PageFaultHandler][do_handlePageFault] page Page(40:19/null)
[PageFaultHandler][do_handlePageFault] page Page(40:19/null) setframe Frame(3)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1360),Device(0),Page(40:19/3),Diskblock(360),FileRead,Openfile(210:19/0),Thread(171:19/W1)) this Page(40:19/3)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(171:19/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(171:19/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(3)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 6365 offset = 221 page no = 6 Thread(158:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(158:16/RU) 21 Page(6:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(26) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(6:16/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(29:16/26)
[PageFaultHandler][do_handlePageFault] page Page(6:16/null) setframe Frame(26)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1361),Device(0),Page(6:16/26),Diskblock(6),FileRead,Openfile(192:16/0),Thread(158:16/W1)) this Page(6:16/26)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(158:16/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(158:16/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 30609 offset = 913 page no = 29 Thread(157:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(157:16/RU) 21 Page(29:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(9) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(29:16/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(10:17/9)
[PageFaultHandler][do_handlePageFault] page Page(29:16/null) setframe Frame(9)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1362),Device(0),Page(29:16/9),Diskblock(29),FileRead,Openfile(192:16/0),Thread(157:16/W1)) this Page(29:16/9)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(157:16/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(157:16/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(2:17/6)
[PageFaultHandler][do_handlePageFault] thread Thread(163:17/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 20157 offset = 701 page no = 19 Thread(169:18/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(169:18/RU) 21 Page(19:18/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(18) Reserved by Task(18/L)
[PageFaultHandler][do_handlePageFault] page Page(19:18/null)
[PageFaultHandler][do_handlePageFault] page Page(19:18/null) setframe Frame(18)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1363),Device(0),Page(19:18/18),Diskblock(275),FileRead,Openfile(206:18/0),Thread(169:18/W1)) this Page(19:18/18)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(169:18/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(169:18/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(27:17/17)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(17) finish
[MMU][do_refer] address = 31328 offset = 608 page no = 30 Thread(126:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(126:14/RU) 22 Page(30:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(2) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(30:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(31:3/2)
[PageFaultHandler][do_handlePageFault] page Page(30:14/null) setframe Frame(2)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1364),Device(0),Page(30:14/2),Diskblock(94),FileRead,Openfile(156:14/0),Thread(126:14/W1)) this Page(30:14/2)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(126:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(126:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(10:16/11)
[PageFaultHandler][do_handlePageFault] thread Thread(159:16/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 53530 offset = 282 page no = 52 Thread(172:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(172:3/RU) 22 Page(52:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(24) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(52:3/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(46:16/24)
[PageFaultHandler][do_handlePageFault] page Page(52:3/null) setframe Frame(24)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1365),Device(0),Page(52:3/24),Diskblock(180),FileRead,Openfile(10:3/0),Thread(172:3/W1)) this Page(52:3/24)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(172:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(172:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(24)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(6:3/1)
[PageFaultHandler][do_handlePageFault] thread Thread(164:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 6149 offset = 5 page no = 6 Thread(163:17/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(163:17/RU) 22 Page(6:17/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(14) Reserved by Task(17/L)
[PageFaultHandler][do_handlePageFault] page Page(6:17/null)
[PageFaultHandler][do_handlePageFault] page Page(6:17/null) setframe Frame(14)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1366),Device(0),Page(6:17/14),Diskblock(198),FileRead,Openfile(200:17/0),Thread(163:17/W1)) this Page(6:17/14)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(163:17/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(163:17/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(14)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 224097/250000[PageTableEntry][do_unlock] this Page(40:19/3)
[PageFaultHandler][do_handlePageFault] thread Thread(171:19/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 39588 offset = 676 page no = 38 Thread(164:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(164:3/RU) 22 Page(38:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(3) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(38:3/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(40:19/3)
[PageFaultHandler][do_handlePageFault] Frame(3) is dirty, do swap-out, Thread(164:3/W0)
[PageFaultHandler][SwapOut] page Page(40:19/3) frame Frame(3)file Openfile(10:3/0)
[PageFaultHandler][SwapOut] block no 40
[Info][PageTableEntry][do_lock] iorb IORB(Id(1367),Device(0),Page(40:19/3),Diskblock(168),FileWrite,Openfile(10:3/0),Thread(164:3/W1)) this Page(40:19/3)
[Info][PageTableEntry][do_lock] Get frame Frame(3)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 15016 offset = 680 page no = 14 Thread(156:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(156:3/RU) 21 Page(14:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(16) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(14:3/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(0:3/16)
[PageFaultHandler][do_handlePageFault] page Page(14:3/null) setframe Frame(16)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1368),Device(0),Page(14:3/16),Diskblock(142),FileRead,Openfile(10:3/0),Thread(156:3/W1)) this Page(14:3/16)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(156:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(156:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 16408 offset = 24 page no = 16 Thread(168:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(168:14/RU) 22 Page(16:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(17) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(16:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(27:17/17)
[PageFaultHandler][do_handlePageFault] page Page(16:14/null) setframe Frame(17)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1369),Device(0),Page(16:14/17),Diskblock(80),FileRead,Openfile(156:14/0),Thread(168:14/W1)) this Page(16:14/17)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(168:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(168:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(6:16/26)
[PageFaultHandler][do_handlePageFault] thread Thread(158:16/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(29:16/9)
[PageFaultHandler][do_handlePageFault] thread Thread(157:16/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 51458 offset = 258 page no = 50 Thread(14:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(14:3/RU) 21 Page(50:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(9) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(50:3/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(29:16/9)
[PageFaultHandler][do_handlePageFault] page Page(50:3/null) setframe Frame(9)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1370),Device(0),Page(50:3/9),Diskblock(178),FileRead,Openfile(10:3/0),Thread(14:3/W1)) this Page(50:3/9)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(14:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(14:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(19:18/18)
[PageFaultHandler][do_handlePageFault] thread Thread(169:18/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 27016 offset = 392 page no = 26 Thread(159:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(159:16/RU) 21 Page(26:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(5) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(26:16/null)
[PageFaultHandler][do_handlePageFault] page Page(26:16/null) setframe Frame(5)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1371),Device(0),Page(26:16/5),Diskblock(26),FileRead,Openfile(192:16/0),Thread(159:16/W1)) this Page(26:16/5)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(159:16/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(159:16/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 42321 offset = 337 page no = 41 Thread(157:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(157:16/RU) 22 Page(41:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(20) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(41:16/null)
[PageFaultHandler][do_handlePageFault] page Page(41:16/null) setframe Frame(20)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1372),Device(0),Page(41:16/20),Diskblock(41),FileRead,Openfile(192:16/0),Thread(157:16/W1)) this Page(41:16/20)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(157:16/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(157:16/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(20)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 22679 offset = 151 page no = 22 Thread(171:19/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(171:19/RU) 22 Page(22:19/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(0) Reserved by Task(19/L)
[PageFaultHandler][do_handlePageFault] page Page(22:19/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(37:16/0)
[PageFaultHandler][do_handlePageFault] Frame(0) is dirty, do swap-out, Thread(171:19/W0)
[PageFaultHandler][SwapOut] page Page(37:16/0) frame Frame(0)file Openfile(210:19/0)
[PageFaultHandler][SwapOut] block no 37
[Info][PageTableEntry][do_lock] iorb IORB(Id(1373),Device(0),Page(37:16/0),Diskblock(357),FileWrite,Openfile(210:19/0),Thread(171:19/W1)) this Page(37:16/0)
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 24915 offset = 339 page no = 24 Thread(166:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(166:14/RU) 22 Page(24:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(8) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(24:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(7:14/8)
[PageFaultHandler][do_handlePageFault] Frame(8) is dirty, do swap-out, Thread(166:14/W0)
[PageFaultHandler][SwapOut] page Page(7:14/8) frame Frame(8)file Openfile(156:14/0)
[PageFaultHandler][SwapOut] block no 7
[Info][PageTableEntry][do_lock] iorb IORB(Id(1374),Device(0),Page(7:14/8),Diskblock(71),FileWrite,Openfile(156:14/0),Thread(166:14/W1)) this Page(7:14/8)
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(30:14/2)
[PageFaultHandler][do_handlePageFault] thread Thread(126:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 29412 offset = 740 page no = 28 Thread(158:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(158:16/RU) 22 Page(28:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(2) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(28:16/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(30:14/2)
[PageFaultHandler][do_handlePageFault] Frame(2) is dirty, do swap-out, Thread(158:16/W0)
[PageFaultHandler][SwapOut] page Page(30:14/2) frame Frame(2)file Openfile(192:16/0)
[PageFaultHandler][SwapOut] block no 30
[Info][PageTableEntry][do_lock] iorb IORB(Id(1375),Device(0),Page(30:14/2),Diskblock(30),FileWrite,Openfile(192:16/0),Thread(158:16/W1)) this Page(30:14/2)
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 225010/250000[PageTableEntry][do_unlock] this Page(52:3/24)
[PageFaultHandler][do_handlePageFault] thread Thread(172:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 43105 offset = 97 page no = 42 Thread(162:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(162:16/RU) 21 Page(42:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(28) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(42:16/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(42:17/28)
[PageFaultHandler][do_handlePageFault] page Page(42:16/null) setframe Frame(28)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1376),Device(0),Page(42:16/28),Diskblock(42),FileRead,Openfile(192:16/0),Thread(162:16/W1)) this Page(42:16/28)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(162:16/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(162:16/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(6:17/14)
[PageFaultHandler][do_handlePageFault] thread Thread(163:17/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(40:19/3)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(3) Page(40:19/3)Thread(164:3/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(38:3/null) setframe Frame(3)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1377),Device(0),Page(38:3/3),Diskblock(166),FileRead,Openfile(10:3/0),Thread(164:3/W1)) this Page(38:3/3)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(164:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(164:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(3)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 18631 offset = 199 page no = 18 Thread(126:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(126:14/RU) 22 Page(18:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(14) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(18:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(6:17/14)
[PageFaultHandler][do_handlePageFault] Frame(14) is dirty, do swap-out, Thread(126:14/W0)
[PageFaultHandler][SwapOut] page Page(6:17/14) frame Frame(14)file Openfile(156:14/0)
[PageFaultHandler][SwapOut] block no 6
[Info][PageTableEntry][do_lock] iorb IORB(Id(1378),Device(0),Page(6:17/14),Diskblock(70),FileWrite,Openfile(156:14/0),Thread(126:14/W1)) this Page(6:17/14)
[Info][PageTableEntry][do_lock] Get frame Frame(14)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(14:3/16)
[PageFaultHandler][do_handlePageFault] thread Thread(156:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 36704 offset = 864 page no = 35 Thread(169:18/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(169:18/RU) 22 Page(35:18/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(19) Reserved by Task(18/L)
[PageFaultHandler][do_handlePageFault] page Page(35:18/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(53:14/19)
[PageFaultHandler][do_handlePageFault] page Page(35:18/null) setframe Frame(19)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1379),Device(0),Page(35:18/19),Diskblock(291),FileRead,Openfile(206:18/0),Thread(169:18/W1)) this Page(35:18/19)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(169:18/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(169:18/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(16:14/17)
[PageFaultHandler][do_handlePageFault] thread Thread(168:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[Info][PageTableEntry][do_lock] iorb IORB(Id(1380),Device(1),Page(0:3/null),Diskblock(23),FileWrite,Openfile(214:3/1),Thread(156:3/W0)) this Page(0:3/null)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] requrest_thread = Thread(156:3/W0)
[Info][PageTableEntry][do_lock] validating_thread is null, handlePageFault
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(156:3/W0) 23 Page(0:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(15) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(0:3/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(60:16/15)
[PageFaultHandler][do_handlePageFault] page Page(0:3/null) setframe Frame(15)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1381),Device(0),Page(0:3/15),Diskblock(128),FileRead,Openfile(10:3/0),Thread(156:3/W2)) this Page(0:3/15)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(156:3/W2)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(156:3/W2)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(15)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(50:3/9)
[PageFaultHandler][do_handlePageFault] thread Thread(14:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[Info][PageTableEntry][do_lock] iorb IORB(Id(1382),Device(1),Page(6:3/1),Diskblock(23),FileRead,Openfile(214:3/1),Thread(172:3/W0)) this Page(6:3/1)
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(6:3/1)
[PageTableEntry][do_unlock] this Page(26:16/5)
[PageFaultHandler][do_handlePageFault] thread Thread(159:16/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 13450 offset = 138 page no = 13 Thread(168:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(168:14/RU) 21 Page(13:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(5) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(13:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(26:16/5)
[PageFaultHandler][do_handlePageFault] page Page(13:14/null) setframe Frame(5)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1383),Device(0),Page(13:14/5),Diskblock(77),FileRead,Openfile(156:14/0),Thread(168:14/W1)) this Page(13:14/5)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(168:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(168:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(41:16/20)
[PageFaultHandler][do_handlePageFault] thread Thread(157:16/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
Simulation progress: 226045/250000[MMU][do_refer] address = 44076 offset = 44 page no = 43 Thread(163:17/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(163:17/RU) 21 Page(43:17/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(4) Reserved by Task(17/L)
[PageFaultHandler][do_handlePageFault] page Page(43:17/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(21:14/4)
[PageFaultHandler][do_handlePageFault] Frame(4) is dirty, do swap-out, Thread(163:17/W0)
[PageFaultHandler][SwapOut] page Page(21:14/4) frame Frame(4)file Openfile(200:17/0)
[PageFaultHandler][SwapOut] block no 21
[Info][PageTableEntry][do_lock] iorb IORB(Id(1384),Device(0),Page(21:14/4),Diskblock(213),FileWrite,Openfile(200:17/0),Thread(163:17/W1)) this Page(21:14/4)
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(37:16/0)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(0) Page(37:16/0)Thread(171:19/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(22:19/null) setframe Frame(0)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1385),Device(0),Page(22:19/0),Diskblock(342),FileRead,Openfile(210:19/0),Thread(171:19/W1)) this Page(22:19/0)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(171:19/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(171:19/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(7:14/8)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(8) Page(7:14/8)Thread(166:14/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(24:14/null) setframe Frame(8)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1386),Device(0),Page(24:14/8),Diskblock(88),FileRead,Openfile(156:14/0),Thread(166:14/W1)) this Page(24:14/8)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(166:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(166:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(30:14/2)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(2) Page(30:14/2)Thread(158:16/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(28:16/null) setframe Frame(2)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1387),Device(0),Page(28:16/2),Diskblock(28),FileRead,Openfile(192:16/0),Thread(158:16/W1)) this Page(28:16/2)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(158:16/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(158:16/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(42:16/28)
[PageFaultHandler][do_handlePageFault] thread Thread(162:16/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 31888 offset = 144 page no = 31 Thread(159:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(159:16/RU) 21 Page(31:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(25) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(31:16/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(53:3/25)
[PageFaultHandler][do_handlePageFault] Frame(25) is dirty, do swap-out, Thread(159:16/W0)
[PageFaultHandler][SwapOut] page Page(53:3/25) frame Frame(25)file Openfile(192:16/0)
[PageFaultHandler][SwapOut] block no 53
[Info][PageTableEntry][do_lock] iorb IORB(Id(1388),Device(0),Page(53:3/25),Diskblock(53),FileWrite,Openfile(192:16/0),Thread(159:16/W1)) this Page(53:3/25)
[Info][PageTableEntry][do_lock] Get frame Frame(25)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(38:3/3)
[PageFaultHandler][do_handlePageFault] thread Thread(164:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(6:17/14)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(14) Page(6:17/14)Thread(126:14/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(18:14/null) setframe Frame(14)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1389),Device(0),Page(18:14/14),Diskblock(82),FileRead,Openfile(156:14/0),Thread(126:14/W1)) this Page(18:14/14)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(126:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(126:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(14)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 227014/250000[MMU][do_refer] address = 49339 offset = 187 page no = 48 Thread(157:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(157:16/RU) 22 Page(48:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(21) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(48:16/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(7:16/21)
[PageFaultHandler][do_handlePageFault] page Page(48:16/null) setframe Frame(21)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1390),Device(0),Page(48:16/21),Diskblock(48),FileRead,Openfile(192:16/0),Thread(157:16/W1)) this Page(48:16/21)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(157:16/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(157:16/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(35:18/19)
[PageFaultHandler][do_handlePageFault] thread Thread(169:18/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 43781 offset = 773 page no = 42 Thread(172:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(172:3/RU) 22 Page(42:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(29) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(42:3/null)
[PageFaultHandler][do_handlePageFault] page Page(42:3/null) setframe Frame(29)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1391),Device(0),Page(42:3/29),Diskblock(170),FileRead,Openfile(10:3/0),Thread(172:3/W1)) this Page(42:3/29)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(172:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(172:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(0:3/15)
[PageFaultHandler][do_handlePageFault] thread Thread(156:3/W1) status = 31
 Thread do_handlePageFault Success
[Info][PageTableEntry][do_lock] Get frame Frame(15)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(13:14/5)
[PageFaultHandler][do_handlePageFault] thread Thread(168:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 19753 offset = 297 page no = 19 Thread(162:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(162:16/RU) 21 Page(19:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(5) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(19:16/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(13:14/5)
[PageFaultHandler][do_handlePageFault] page Page(19:16/null) setframe Frame(5)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1392),Device(0),Page(19:16/5),Diskblock(19),FileRead,Openfile(192:16/0),Thread(162:16/W1)) this Page(19:16/5)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(162:16/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(162:16/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(0:3/15)
[MMU][do_refer] address = 20792 offset = 312 page no = 20 Thread(168:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(168:14/RU) 22 Page(20:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(27) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(20:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(54:3/27)
[PageFaultHandler][do_handlePageFault] Frame(27) is dirty, do swap-out, Thread(168:14/W0)
[PageFaultHandler][SwapOut] page Page(54:3/27) frame Frame(27)file Openfile(156:14/0)
[PageFaultHandler][SwapOut] block no 54
[Info][PageTableEntry][do_lock] iorb IORB(Id(1393),Device(0),Page(54:3/27),Diskblock(118),FileWrite,Openfile(156:14/0),Thread(168:14/W1)) this Page(54:3/27)
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(21:14/4)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(4) Page(21:14/4)Thread(163:17/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(43:17/null) setframe Frame(4)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1394),Device(0),Page(43:17/4),Diskblock(235),FileRead,Openfile(200:17/0),Thread(163:17/W1)) this Page(43:17/4)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(163:17/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(163:17/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 37660 offset = 796 page no = 36 Thread(156:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(156:3/RU) 22 Page(36:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(23) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(36:3/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(61:16/23)
[PageFaultHandler][do_handlePageFault] page Page(36:3/null) setframe Frame(23)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1395),Device(0),Page(36:3/23),Diskblock(164),FileRead,Openfile(10:3/0),Thread(156:3/W1)) this Page(36:3/23)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(156:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(156:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(23)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(22:19/0)
[PageFaultHandler][do_handlePageFault] thread Thread(171:19/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
Simulation progress: 228039/250000[PageTableEntry][do_unlock] this Page(24:14/8)
[PageFaultHandler][do_handlePageFault] thread Thread(166:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(28:16/2)
[PageFaultHandler][do_handlePageFault] thread Thread(158:16/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(53:3/25)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(25) Page(53:3/25)Thread(159:16/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(31:16/null) setframe Frame(25)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1396),Device(0),Page(31:16/25),Diskblock(31),FileRead,Openfile(192:16/0),Thread(159:16/W1)) this Page(31:16/25)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(159:16/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(159:16/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(25)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 32021 offset = 277 page no = 31 Thread(14:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(14:3/RU) 22 Page(31:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(2) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(31:3/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(28:16/2)
[PageFaultHandler][do_handlePageFault] Frame(2) is dirty, do swap-out, Thread(14:3/W0)
[PageFaultHandler][SwapOut] page Page(28:16/2) frame Frame(2)file Openfile(10:3/0)
[PageFaultHandler][SwapOut] block no 28
[Info][PageTableEntry][do_lock] iorb IORB(Id(1397),Device(0),Page(28:16/2),Diskblock(156),FileWrite,Openfile(10:3/0),Thread(14:3/W1)) this Page(28:16/2)
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(18:14/14)
[PageFaultHandler][do_handlePageFault] thread Thread(126:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(48:16/21)
[PageFaultHandler][do_handlePageFault] thread Thread(157:16/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 52816 offset = 592 page no = 51 Thread(169:18/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(169:18/RU) 21 Page(51:18/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(14) Reserved by Task(18/L)
[PageFaultHandler][do_handlePageFault] page Page(51:18/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(18:14/14)
[PageFaultHandler][do_handlePageFault] Frame(14) is dirty, do swap-out, Thread(169:18/W0)
[PageFaultHandler][SwapOut] page Page(18:14/14) frame Frame(14)file Openfile(206:18/0)
[PageFaultHandler][SwapOut] block no 18
[Info][PageTableEntry][do_lock] iorb IORB(Id(1398),Device(0),Page(18:14/14),Diskblock(274),FileWrite,Openfile(206:18/0),Thread(169:18/W1)) this Page(18:14/14)
[Info][PageTableEntry][do_lock] Get frame Frame(14)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 18320 offset = 912 page no = 17 Thread(158:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(158:16/RU) 21 Page(17:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(12) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(17:16/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(12:3/12)
[PageFaultHandler][do_handlePageFault] page Page(17:16/null) setframe Frame(12)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1399),Device(0),Page(17:16/12),Diskblock(17),FileRead,Openfile(192:16/0),Thread(158:16/W1)) this Page(17:16/12)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(158:16/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(158:16/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(12)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 22508 offset = 1004 page no = 21 Thread(161:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(161:14/RU) 22 Page(21:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(6) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(21:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(2:17/6)
[PageFaultHandler][do_handlePageFault] page Page(21:14/null) setframe Frame(6)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1400),Device(0),Page(21:14/6),Diskblock(85),FileRead,Openfile(156:14/0),Thread(161:14/W1)) this Page(21:14/6)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(161:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(161:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(6)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(42:3/29)
[PageFaultHandler][do_handlePageFault] thread Thread(172:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 33256 offset = 488 page no = 32 Thread(126:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(126:14/RU) 21 Page(32:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(1) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(32:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(6:3/1)
[PageFaultHandler][do_handlePageFault] Frame(1) is dirty, do swap-out, Thread(126:14/W0)
[PageFaultHandler][SwapOut] page Page(6:3/1) frame Frame(1)file Openfile(156:14/0)
[PageFaultHandler][SwapOut] block no 6
[Info][PageTableEntry][do_lock] iorb IORB(Id(1401),Device(0),Page(6:3/1),Diskblock(70),FileWrite,Openfile(156:14/0),Thread(126:14/W1)) this Page(6:3/1)
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(19:16/5)
[PageFaultHandler][do_handlePageFault] thread Thread(162:16/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 19995 offset = 539 page no = 19 Thread(157:16/RU)
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(54:3/27)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(27) Page(54:3/27)Thread(168:14/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(20:14/null) setframe Frame(27)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1402),Device(0),Page(20:14/27),Diskblock(84),FileRead,Openfile(156:14/0),Thread(168:14/W1)) this Page(20:14/27)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(168:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(168:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 28905 offset = 233 page no = 28 Thread(171:19/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(171:19/RU) 21 Page(28:19/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(18) Reserved by Task(19/L)
[PageFaultHandler][do_handlePageFault] page Page(28:19/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(19:18/18)
[PageFaultHandler][do_handlePageFault] page Page(28:19/null) setframe Frame(18)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1403),Device(0),Page(28:19/18),Diskblock(348),FileRead,Openfile(210:19/0),Thread(171:19/W1)) this Page(28:19/18)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(171:19/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(171:19/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 18745 offset = 313 page no = 18 Thread(162:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(162:16/RU) 22 Page(18:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(24) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(18:16/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(52:3/24)
[PageFaultHandler][do_handlePageFault] Frame(24) is dirty, do swap-out, Thread(162:16/W0)
[PageFaultHandler][SwapOut] page Page(52:3/24) frame Frame(24)file Openfile(192:16/0)
[PageFaultHandler][SwapOut] block no 52
[Info][PageTableEntry][do_lock] iorb IORB(Id(1404),Device(0),Page(52:3/24),Diskblock(52),FileWrite,Openfile(192:16/0),Thread(162:16/W1)) this Page(52:3/24)
[Info][PageTableEntry][do_lock] Get frame Frame(24)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 229040/250000[PageTableEntry][do_unlock] this Page(43:17/4)
[PageFaultHandler][do_handlePageFault] thread Thread(163:17/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 62259 offset = 819 page no = 60 Thread(166:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(166:14/RU) 21 Page(60:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(16) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(60:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(14:3/16)
[PageFaultHandler][do_handlePageFault] page Page(60:14/null) setframe Frame(16)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1405),Device(0),Page(60:14/16),Diskblock(124),FileRead,Openfile(156:14/0),Thread(166:14/W1)) this Page(60:14/16)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(166:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(166:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(36:3/23)
[PageFaultHandler][do_handlePageFault] thread Thread(156:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(31:16/25)
[PageFaultHandler][do_handlePageFault] thread Thread(159:16/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(28:16/2)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(2) Page(28:16/2)Thread(14:3/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(31:3/null) setframe Frame(2)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1406),Device(0),Page(31:3/2),Diskblock(159),FileRead,Openfile(10:3/0),Thread(14:3/W1)) this Page(31:3/2)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(14:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(14:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 49571 offset = 419 page no = 48 Thread(157:16/RU)
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 54067 offset = 819 page no = 52 Thread(157:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(157:16/RU) 22 Page(52:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(17) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(52:16/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(16:14/17)
[PageFaultHandler][do_handlePageFault] Frame(17) is dirty, do swap-out, Thread(157:16/W0)
[PageFaultHandler][SwapOut] page Page(16:14/17) frame Frame(17)file Openfile(192:16/0)
[PageFaultHandler][SwapOut] block no 16
[Info][PageTableEntry][do_lock] iorb IORB(Id(1407),Device(0),Page(16:14/17),Diskblock(16),FileWrite,Openfile(192:16/0),Thread(157:16/W1)) this Page(16:14/17)
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 50058 offset = 906 page no = 48 Thread(159:16/RU)
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 52487 offset = 263 page no = 51 Thread(159:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(159:16/RU) 22 Page(51:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(20) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(51:16/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(41:16/20)
[PageFaultHandler][do_handlePageFault] Frame(20) is dirty, do swap-out, Thread(159:16/W0)
[PageFaultHandler][SwapOut] page Page(41:16/20) frame Frame(20)file Openfile(192:16/0)
[PageFaultHandler][SwapOut] block no 41
[Info][PageTableEntry][do_lock] iorb IORB(Id(1408),Device(0),Page(41:16/20),Diskblock(41),FileWrite,Openfile(192:16/0),Thread(159:16/W1)) this Page(41:16/20)
[Info][PageTableEntry][do_lock] Get frame Frame(20)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(18:14/14)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(14) Page(18:14/14)Thread(169:18/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(51:18/null) setframe Frame(14)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1409),Device(0),Page(51:18/14),Diskblock(307),FileRead,Openfile(206:18/0),Thread(169:18/W1)) this Page(51:18/14)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(169:18/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(169:18/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(14)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 48910 offset = 782 page no = 47 Thread(164:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(164:3/RU) 22 Page(47:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(0) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(47:3/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(22:19/0)
[PageFaultHandler][do_handlePageFault] Frame(0) is dirty, do swap-out, Thread(164:3/W0)
[PageFaultHandler][SwapOut] page Page(22:19/0) frame Frame(0)file Openfile(10:3/0)
[PageFaultHandler][SwapOut] block no 22
[Info][PageTableEntry][do_lock] iorb IORB(Id(1410),Device(0),Page(22:19/0),Diskblock(150),FileWrite,Openfile(10:3/0),Thread(164:3/W1)) this Page(22:19/0)
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 62512 offset = 48 page no = 61 Thread(163:17/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(163:17/RU) 22 Page(61:17/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(8) Reserved by Task(17/L)
[PageFaultHandler][do_handlePageFault] page Page(61:17/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(24:14/8)
[PageFaultHandler][do_handlePageFault] Frame(8) is dirty, do swap-out, Thread(163:17/W0)
[PageFaultHandler][SwapOut] page Page(24:14/8) frame Frame(8)file Openfile(200:17/0)
[PageFaultHandler][SwapOut] block no 24
[Info][PageTableEntry][do_lock] iorb IORB(Id(1411),Device(0),Page(24:14/8),Diskblock(216),FileWrite,Openfile(200:17/0),Thread(163:17/W1)) this Page(24:14/8)
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(17:16/12)
[PageFaultHandler][do_handlePageFault] thread Thread(158:16/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 22953 offset = 425 page no = 22 Thread(172:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(172:3/RU) 22 Page(22:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(12) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(22:3/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(17:16/12)
[PageFaultHandler][do_handlePageFault] page Page(22:3/null) setframe Frame(12)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1412),Device(0),Page(22:3/12),Diskblock(150),FileRead,Openfile(10:3/0),Thread(172:3/W1)) this Page(22:3/12)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(172:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(172:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(12)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 230020/250000[PageTableEntry][do_unlock] this Page(21:14/6)
[PageFaultHandler][do_handlePageFault] thread Thread(161:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(6:3/1)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(1) Page(6:3/1)Thread(126:14/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(32:14/null) setframe Frame(1)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1413),Device(0),Page(32:14/1),Diskblock(96),FileRead,Openfile(156:14/0),Thread(126:14/W1)) this Page(32:14/1)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(126:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(126:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(20:14/27)
[PageFaultHandler][do_handlePageFault] thread Thread(168:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 7725 offset = 557 page no = 7 Thread(173:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(173:3/RU) 21 Page(7:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(27) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(7:3/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(20:14/27)
[PageFaultHandler][do_handlePageFault] Frame(27) is dirty, do swap-out, Thread(173:3/W0)
[PageFaultHandler][SwapOut] page Page(20:14/27) frame Frame(27)file Openfile(10:3/0)
[PageFaultHandler][SwapOut] block no 20
[Info][PageTableEntry][do_lock] iorb IORB(Id(1414),Device(0),Page(20:14/27),Diskblock(148),FileWrite,Openfile(10:3/0),Thread(173:3/W1)) this Page(20:14/27)
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 25774 offset = 174 page no = 25 Thread(158:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(158:16/RU) 22 Page(25:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(28) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(25:16/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(42:16/28)
[PageFaultHandler][do_handlePageFault] page Page(25:16/null) setframe Frame(28)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1415),Device(0),Page(25:16/28),Diskblock(25),FileRead,Openfile(192:16/0),Thread(158:16/W1)) this Page(25:16/28)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(158:16/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(158:16/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 52113 offset = 913 page no = 50 Thread(161:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(161:14/RU) 22 Page(50:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(22) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(50:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(33:16/22)
[PageFaultHandler][do_handlePageFault] Frame(22) is dirty, do swap-out, Thread(161:14/W0)
[PageFaultHandler][SwapOut] page Page(33:16/22) frame Frame(22)file Openfile(156:14/0)
[PageFaultHandler][SwapOut] block no 33
[Info][PageTableEntry][do_lock] iorb IORB(Id(1416),Device(0),Page(33:16/22),Diskblock(97),FileWrite,Openfile(156:14/0),Thread(161:14/W1)) this Page(33:16/22)
[Info][PageTableEntry][do_lock] Get frame Frame(22)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(28:19/18)
[PageFaultHandler][do_handlePageFault] thread Thread(171:19/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 16598 offset = 214 page no = 16 Thread(171:19/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(171:19/RU) 22 Page(16:19/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(18) Reserved by Task(19/L)
[PageFaultHandler][do_handlePageFault] page Page(16:19/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(28:19/18)
[PageFaultHandler][do_handlePageFault] page Page(16:19/null) setframe Frame(18)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1417),Device(0),Page(16:19/18),Diskblock(336),FileRead,Openfile(210:19/0),Thread(171:19/W1)) this Page(16:19/18)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(171:19/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(171:19/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(52:3/24)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(24) Page(52:3/24)Thread(162:16/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(18:16/null) setframe Frame(24)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1418),Device(0),Page(18:16/24),Diskblock(18),FileRead,Openfile(192:16/0),Thread(162:16/W1)) this Page(18:16/24)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(162:16/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(162:16/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(24)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(60:14/16)
[PageFaultHandler][do_handlePageFault] thread Thread(166:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
Simulation progress: 231002/250000[MMU][do_refer] address = 3503 offset = 431 page no = 3 Thread(166:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(166:14/RU) 21 Page(3:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(9) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(3:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(50:3/9)
[PageFaultHandler][do_handlePageFault] page Page(3:14/null) setframe Frame(9)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1419),Device(0),Page(3:14/9),Diskblock(67),FileRead,Openfile(156:14/0),Thread(166:14/W1)) this Page(3:14/9)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(166:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(166:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(31:3/2)
[PageFaultHandler][do_handlePageFault] thread Thread(14:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 19888 offset = 432 page no = 19 Thread(14:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(14:3/RU) 21 Page(19:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(19) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(19:3/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(35:18/19)
[PageFaultHandler][do_handlePageFault] Frame(19) is dirty, do swap-out, Thread(14:3/W0)
[PageFaultHandler][SwapOut] page Page(35:18/19) frame Frame(19)file Openfile(10:3/0)
[PageFaultHandler][SwapOut] block no 35
[Info][PageTableEntry][do_lock] iorb IORB(Id(1420),Device(0),Page(35:18/19),Diskblock(163),FileWrite,Openfile(10:3/0),Thread(14:3/W1)) this Page(35:18/19)
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(16:14/17)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(17) Page(16:14/17)Thread(157:16/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(52:16/null) setframe Frame(17)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1421),Device(0),Page(52:16/17),Diskblock(52),FileRead,Openfile(192:16/0),Thread(157:16/W1)) this Page(52:16/17)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(157:16/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(157:16/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 19512 offset = 56 page no = 19 Thread(156:3/RU)
[PageTableEntry][do_unlock] this Page(41:16/20)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(20) Page(41:16/20)Thread(159:16/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(51:16/null) setframe Frame(20)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1422),Device(0),Page(51:16/20),Diskblock(51),FileRead,Openfile(192:16/0),Thread(159:16/W1)) this Page(51:16/20)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(159:16/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(159:16/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(20)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 669 offset = 669 page no = 0 Thread(165:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(165:16/RU) 22 Page(0:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(7) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(0:16/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(20:17/7)
[PageFaultHandler][do_handlePageFault] page Page(0:16/null) setframe Frame(7)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1423),Device(0),Page(0:16/7),Diskblock(0),FileRead,Openfile(192:16/0),Thread(165:16/W1)) this Page(0:16/7)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(165:16/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(165:16/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(7)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(51:18/14)
[PageFaultHandler][do_handlePageFault] thread Thread(169:18/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(22:19/0)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(0) Page(22:19/0)Thread(164:3/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(47:3/null) setframe Frame(0)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1424),Device(0),Page(47:3/0),Diskblock(175),FileRead,Openfile(10:3/0),Thread(164:3/W1)) this Page(47:3/0)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(164:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(164:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 27668 offset = 20 page no = 27 Thread(169:18/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(169:18/RU) 21 Page(27:18/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(14) Reserved by Task(18/L)
[PageFaultHandler][do_handlePageFault] page Page(27:18/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(51:18/14)
[PageFaultHandler][do_handlePageFault] page Page(27:18/null) setframe Frame(14)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1425),Device(0),Page(27:18/14),Diskblock(283),FileRead,Openfile(206:18/0),Thread(169:18/W1)) this Page(27:18/14)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(169:18/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(169:18/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(14)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(24:14/8)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(8) Page(24:14/8)Thread(163:17/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(61:17/null) setframe Frame(8)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1426),Device(0),Page(61:17/8),Diskblock(253),FileRead,Openfile(200:17/0),Thread(163:17/W1)) this Page(61:17/8)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(163:17/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(163:17/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 232010/250000[PageTableEntry][do_unlock] this Page(22:3/12)
[PageFaultHandler][do_handlePageFault] thread Thread(172:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(32:14/1)
[PageFaultHandler][do_handlePageFault] thread Thread(126:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 11837 offset = 573 page no = 11 Thread(126:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(126:14/RU) 22 Page(11:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(12) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(11:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(22:3/12)
[PageFaultHandler][do_handlePageFault] Frame(12) is dirty, do swap-out, Thread(126:14/W0)
[PageFaultHandler][SwapOut] page Page(22:3/12) frame Frame(12)file Openfile(156:14/0)
[PageFaultHandler][SwapOut] block no 22
[Info][PageTableEntry][do_lock] iorb IORB(Id(1427),Device(0),Page(22:3/12),Diskblock(86),FileWrite,Openfile(156:14/0),Thread(126:14/W1)) this Page(22:3/12)
[Info][PageTableEntry][do_lock] Get frame Frame(12)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(20:14/27)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(27) Page(20:14/27)Thread(173:3/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(7:3/null) setframe Frame(27)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1428),Device(0),Page(7:3/27),Diskblock(135),FileRead,Openfile(10:3/0),Thread(173:3/W1)) this Page(7:3/27)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(173:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(173:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(1429),Device(1),Page(0:3/15),Diskblock(5),FileWrite,Openfile(216:3/1),Thread(172:3/W0)) this Page(0:3/15)
[Info][PageTableEntry][do_lock] Get frame Frame(15)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(25:16/28)
[PageFaultHandler][do_handlePageFault] thread Thread(158:16/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(0:3/15)
[MMU][do_refer] address = 24570 offset = 1018 page no = 23 Thread(172:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(172:3/RU) 21 Page(23:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(28) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(23:3/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(25:16/28)
[PageFaultHandler][do_handlePageFault] Frame(28) is dirty, do swap-out, Thread(172:3/W0)
[PageFaultHandler][SwapOut] page Page(25:16/28) frame Frame(28)file Openfile(10:3/0)
[PageFaultHandler][SwapOut] block no 25
[Info][PageTableEntry][do_lock] iorb IORB(Id(1430),Device(0),Page(25:16/28),Diskblock(153),FileWrite,Openfile(10:3/0),Thread(172:3/W1)) this Page(25:16/28)
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 40918 offset = 982 page no = 39 Thread(158:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(158:16/RU) 21 Page(39:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(10) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(39:16/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(21:18/10)
[PageFaultHandler][do_handlePageFault] Frame(10) is dirty, do swap-out, Thread(158:16/W0)
[PageFaultHandler][SwapOut] page Page(21:18/10) frame Frame(10)file Openfile(192:16/0)
[PageFaultHandler][SwapOut] block no 21
[Info][PageTableEntry][do_lock] iorb IORB(Id(1431),Device(0),Page(21:18/10),Diskblock(21),FileWrite,Openfile(192:16/0),Thread(158:16/W1)) this Page(21:18/10)
[Info][PageTableEntry][do_lock] Get frame Frame(10)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(33:16/22)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(22) Page(33:16/22)Thread(161:14/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(50:14/null) setframe Frame(22)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1432),Device(0),Page(50:14/22),Diskblock(114),FileRead,Openfile(156:14/0),Thread(161:14/W1)) this Page(50:14/22)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(161:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(161:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(22)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(16:19/18)
[PageFaultHandler][do_handlePageFault] thread Thread(171:19/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
Simulation progress: 233037/250000[PageTableEntry][do_unlock] this Page(18:16/24)
[PageFaultHandler][do_handlePageFault] thread Thread(162:16/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 58879 offset = 511 page no = 57 Thread(162:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(162:16/RU) 22 Page(57:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(18) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(57:16/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(16:19/18)
[PageFaultHandler][do_handlePageFault] Frame(18) is dirty, do swap-out, Thread(162:16/W0)
[PageFaultHandler][SwapOut] page Page(16:19/18) frame Frame(18)file Openfile(192:16/0)
[PageFaultHandler][SwapOut] block no 16
[Info][PageTableEntry][do_lock] iorb IORB(Id(1433),Device(0),Page(16:19/18),Diskblock(16),FileWrite,Openfile(192:16/0),Thread(162:16/W1)) this Page(16:19/18)
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(3:14/9)
[PageFaultHandler][do_handlePageFault] thread Thread(166:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(35:18/19)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(19) Page(35:18/19)Thread(14:3/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(19:3/null) setframe Frame(19)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1434),Device(0),Page(19:3/19),Diskblock(147),FileRead,Openfile(10:3/0),Thread(14:3/W1)) this Page(19:3/19)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(14:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(14:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(52:16/17)
[PageFaultHandler][do_handlePageFault] thread Thread(157:16/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[Info][PageTableEntry][do_lock] iorb IORB(Id(1435),Device(1),Page(3:14/9),Diskblock(9),FileWrite,Openfile(216:3/1),Thread(166:14/W0)) this Page(3:14/9)
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 17922 offset = 514 page no = 17 Thread(157:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(157:16/RU) 22 Page(17:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(23) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(17:16/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(36:3/23)
[PageFaultHandler][do_handlePageFault] Frame(23) is dirty, do swap-out, Thread(157:16/W0)
[PageFaultHandler][SwapOut] page Page(36:3/23) frame Frame(23)file Openfile(192:16/0)
[PageFaultHandler][SwapOut] block no 36
[Info][PageTableEntry][do_lock] iorb IORB(Id(1436),Device(0),Page(36:3/23),Diskblock(36),FileWrite,Openfile(192:16/0),Thread(157:16/W1)) this Page(36:3/23)
[Info][PageTableEntry][do_lock] Get frame Frame(23)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(51:16/20)
[PageFaultHandler][do_handlePageFault] thread Thread(159:16/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(3:14/9)
[PageTableEntry][do_unlock] this Page(0:16/7)
[PageFaultHandler][do_handlePageFault] thread Thread(165:16/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 17126 offset = 742 page no = 16 Thread(159:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(159:16/RU) 21 Page(16:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(5) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(16:16/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(19:16/5)
[PageFaultHandler][do_handlePageFault] page Page(16:16/null) setframe Frame(5)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1437),Device(0),Page(16:16/5),Diskblock(16),FileRead,Openfile(192:16/0),Thread(159:16/W1)) this Page(16:16/5)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(159:16/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(159:16/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 29421 offset = 749 page no = 28 Thread(165:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(165:16/RU) 21 Page(28:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(11) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(28:16/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(10:16/11)
[PageFaultHandler][do_handlePageFault] page Page(28:16/null) setframe Frame(11)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1438),Device(0),Page(28:16/11),Diskblock(28),FileRead,Openfile(192:16/0),Thread(165:16/W1)) this Page(28:16/11)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(165:16/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(165:16/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(11)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(47:3/0)
[PageFaultHandler][do_handlePageFault] thread Thread(164:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
Simulation progress: 234050/250000[PageTableEntry][do_unlock] this Page(27:18/14)
[PageFaultHandler][do_handlePageFault] thread Thread(169:18/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 19763 offset = 307 page no = 19 Thread(166:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(166:14/RU) 22 Page(19:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(26) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(19:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(6:16/26)
[PageFaultHandler][do_handlePageFault] page Page(19:14/null) setframe Frame(26)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1439),Device(0),Page(19:14/26),Diskblock(83),FileRead,Openfile(156:14/0),Thread(166:14/W1)) this Page(19:14/26)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(166:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(166:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 58466 offset = 98 page no = 57 Thread(164:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(164:3/RU) 22 Page(57:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(4) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(57:3/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(43:17/4)
[PageFaultHandler][do_handlePageFault] page Page(57:3/null) setframe Frame(4)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1440),Device(0),Page(57:3/4),Diskblock(185),FileRead,Openfile(10:3/0),Thread(164:3/W1)) this Page(57:3/4)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(164:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(164:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(61:17/8)
[PageFaultHandler][do_handlePageFault] thread Thread(163:17/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(22:3/12)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(12) Page(22:3/12)Thread(126:14/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(11:14/null) setframe Frame(12)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1441),Device(0),Page(11:14/12),Diskblock(75),FileRead,Openfile(156:14/0),Thread(126:14/W1)) this Page(11:14/12)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(126:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(126:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(12)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 40576 offset = 640 page no = 39 Thread(169:18/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(169:18/RU) 22 Page(39:18/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(24) Reserved by Task(18/L)
[PageFaultHandler][do_handlePageFault] page Page(39:18/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(18:16/24)
[PageFaultHandler][do_handlePageFault] Frame(24) is dirty, do swap-out, Thread(169:18/W0)
[PageFaultHandler][SwapOut] page Page(18:16/24) frame Frame(24)file Openfile(206:18/0)
[PageFaultHandler][SwapOut] block no 18
[Info][PageTableEntry][do_lock] iorb IORB(Id(1442),Device(0),Page(18:16/24),Diskblock(274),FileWrite,Openfile(206:18/0),Thread(169:18/W1)) this Page(18:16/24)
[Info][PageTableEntry][do_lock] Get frame Frame(24)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(7:3/27)
[PageFaultHandler][do_handlePageFault] thread Thread(173:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 61364 offset = 948 page no = 59 Thread(163:17/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(163:17/RU) 21 Page(59:17/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(16) Reserved by Task(17/L)
[PageFaultHandler][do_handlePageFault] page Page(59:17/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(60:14/16)
[PageFaultHandler][do_handlePageFault] page Page(59:17/null) setframe Frame(16)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1443),Device(0),Page(59:17/16),Diskblock(251),FileRead,Openfile(200:17/0),Thread(163:17/W1)) this Page(59:17/16)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(163:17/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(163:17/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 13086 offset = 798 page no = 12 Thread(171:19/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(171:19/RU) 21 Page(12:19/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(6) Reserved by Task(19/L)
[PageFaultHandler][do_handlePageFault] page Page(12:19/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(21:14/6)
[PageFaultHandler][do_handlePageFault] Frame(6) is dirty, do swap-out, Thread(171:19/W0)
[PageFaultHandler][SwapOut] page Page(21:14/6) frame Frame(6)file Openfile(210:19/0)
[PageFaultHandler][SwapOut] block no 21
[Info][PageTableEntry][do_lock] iorb IORB(Id(1444),Device(0),Page(21:14/6),Diskblock(341),FileWrite,Openfile(210:19/0),Thread(171:19/W1)) this Page(21:14/6)
[Info][PageTableEntry][do_lock] Get frame Frame(6)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(25:16/28)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(28) Page(25:16/28)Thread(172:3/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(23:3/null) setframe Frame(28)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1445),Device(0),Page(23:3/28),Diskblock(151),FileRead,Openfile(10:3/0),Thread(172:3/W1)) this Page(23:3/28)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(172:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(172:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 63616 offset = 128 page no = 62 Thread(173:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(173:3/RU) 22 Page(62:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(17) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(62:3/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(52:16/17)
[PageFaultHandler][do_handlePageFault] Frame(17) is dirty, do swap-out, Thread(173:3/W0)
[PageFaultHandler][SwapOut] page Page(52:16/17) frame Frame(17)file Openfile(10:3/0)
[PageFaultHandler][SwapOut] block no 52
[Info][PageTableEntry][do_lock] iorb IORB(Id(1446),Device(0),Page(52:16/17),Diskblock(180),FileWrite,Openfile(10:3/0),Thread(173:3/W1)) this Page(52:16/17)
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(21:18/10)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(10) Page(21:18/10)Thread(158:16/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(39:16/null) setframe Frame(10)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1447),Device(0),Page(39:16/10),Diskblock(39),FileRead,Openfile(192:16/0),Thread(158:16/W1)) this Page(39:16/10)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(158:16/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(158:16/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(10)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(50:14/22)
[PageFaultHandler][do_handlePageFault] thread Thread(161:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(16:19/18)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(18) Page(16:19/18)Thread(162:16/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(57:16/null) setframe Frame(18)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1448),Device(0),Page(57:16/18),Diskblock(57),FileRead,Openfile(192:16/0),Thread(162:16/W1)) this Page(57:16/18)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(162:16/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(162:16/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 235010/250000[PageTableEntry][do_unlock] this Page(19:3/19)
[PageFaultHandler][do_handlePageFault] thread Thread(14:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 19572 offset = 116 page no = 19 Thread(156:3/RU)
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(36:3/23)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(23) Page(36:3/23)Thread(157:16/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(17:16/null) setframe Frame(23)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1449),Device(0),Page(17:16/23),Diskblock(17),FileRead,Openfile(192:16/0),Thread(157:16/W1)) this Page(17:16/23)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(157:16/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(157:16/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(23)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(16:16/5)
[PageFaultHandler][do_handlePageFault] thread Thread(159:16/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(28:16/11)
[PageFaultHandler][do_handlePageFault] thread Thread(165:16/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 13774 offset = 462 page no = 13 Thread(159:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(159:16/RU) 21 Page(13:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(19) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(13:16/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(19:3/19)
[PageFaultHandler][do_handlePageFault] page Page(13:16/null) setframe Frame(19)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1450),Device(0),Page(13:16/19),Diskblock(13),FileRead,Openfile(192:16/0),Thread(159:16/W1)) this Page(13:16/19)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(159:16/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(159:16/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(19:14/26)
[PageFaultHandler][do_handlePageFault] thread Thread(166:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 50547 offset = 371 page no = 49 Thread(156:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(156:3/RU) 22 Page(49:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(5) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(49:3/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(16:16/5)
[PageFaultHandler][do_handlePageFault] page Page(49:3/null) setframe Frame(5)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1451),Device(0),Page(49:3/5),Diskblock(177),FileRead,Openfile(10:3/0),Thread(156:3/W1)) this Page(49:3/5)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(156:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(156:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 52546 offset = 322 page no = 51 Thread(166:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(166:14/RU) 22 Page(51:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(26) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(51:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(19:14/26)
[PageFaultHandler][do_handlePageFault] Frame(26) is dirty, do swap-out, Thread(166:14/W0)
[PageFaultHandler][SwapOut] page Page(19:14/26) frame Frame(26)file Openfile(156:14/0)
[PageFaultHandler][SwapOut] block no 19
[Info][PageTableEntry][do_lock] iorb IORB(Id(1452),Device(0),Page(19:14/26),Diskblock(83),FileWrite,Openfile(156:14/0),Thread(166:14/W1)) this Page(19:14/26)
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(57:3/4)
[PageFaultHandler][do_handlePageFault] thread Thread(164:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(11:14/12)
[PageFaultHandler][do_handlePageFault] thread Thread(126:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(18:16/24)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(24) Page(18:16/24)Thread(169:18/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(39:18/null) setframe Frame(24)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1453),Device(0),Page(39:18/24),Diskblock(295),FileRead,Openfile(206:18/0),Thread(169:18/W1)) this Page(39:18/24)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(169:18/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(169:18/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(24)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 236040/250000[PageTableEntry][do_unlock] this Page(59:17/16)
[PageFaultHandler][do_handlePageFault] thread Thread(163:17/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 43862 offset = 854 page no = 42 Thread(165:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(165:16/RU) 21 Page(42:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(12) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(42:16/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(11:14/12)
[PageFaultHandler][do_handlePageFault] Frame(12) is dirty, do swap-out, Thread(165:16/W0)
[PageFaultHandler][SwapOut] page Page(11:14/12) frame Frame(12)file Openfile(192:16/0)
[PageFaultHandler][SwapOut] block no 11
[Info][PageTableEntry][do_lock] iorb IORB(Id(1454),Device(0),Page(11:14/12),Diskblock(11),FileWrite,Openfile(192:16/0),Thread(165:16/W1)) this Page(11:14/12)
[Info][PageTableEntry][do_lock] Get frame Frame(12)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(21:14/6)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(6) Page(21:14/6)Thread(171:19/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(12:19/null) setframe Frame(6)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1455),Device(0),Page(12:19/6),Diskblock(332),FileRead,Openfile(210:19/0),Thread(171:19/W1)) this Page(12:19/6)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(171:19/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(171:19/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(6)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(23:3/28)
[PageFaultHandler][do_handlePageFault] thread Thread(172:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(52:16/17)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(17) Page(52:16/17)Thread(173:3/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(62:3/null) setframe Frame(17)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1456),Device(0),Page(62:3/17),Diskblock(190),FileRead,Openfile(10:3/0),Thread(173:3/W1)) this Page(62:3/17)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(173:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(173:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(1457),Device(2),Page(0:3/15),Diskblock(3),FileWrite,Openfile(220:3/2),Thread(14:3/W0)) this Page(0:3/15)
[Info][PageTableEntry][do_lock] Get frame Frame(15)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 23464 offset = 936 page no = 22 Thread(172:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(172:3/RU) 21 Page(22:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(20) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(22:3/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(51:16/20)
[PageFaultHandler][do_handlePageFault] Frame(20) is dirty, do swap-out, Thread(172:3/W0)
[PageFaultHandler][SwapOut] page Page(51:16/20) frame Frame(20)file Openfile(10:3/0)
[PageFaultHandler][SwapOut] block no 51
[Info][PageTableEntry][do_lock] iorb IORB(Id(1458),Device(0),Page(51:16/20),Diskblock(179),FileWrite,Openfile(10:3/0),Thread(172:3/W1)) this Page(51:16/20)
[Info][PageTableEntry][do_lock] Get frame Frame(20)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(39:16/10)
[PageFaultHandler][do_handlePageFault] thread Thread(158:16/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(57:16/18)
[PageFaultHandler][do_handlePageFault] thread Thread(162:16/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(17:16/23)
[PageFaultHandler][do_handlePageFault] thread Thread(157:16/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 27901 offset = 253 page no = 27 Thread(163:17/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(163:17/RU) 22 Page(27:17/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(2) Reserved by Task(17/L)
[PageFaultHandler][do_handlePageFault] page Page(27:17/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(31:3/2)
[PageFaultHandler][do_handlePageFault] Frame(2) is dirty, do swap-out, Thread(163:17/W0)
[PageFaultHandler][SwapOut] page Page(31:3/2) frame Frame(2)file Openfile(200:17/0)
[PageFaultHandler][SwapOut] block no 31
[Info][PageTableEntry][do_lock] iorb IORB(Id(1459),Device(0),Page(31:3/2),Diskblock(223),FileWrite,Openfile(200:17/0),Thread(163:17/W1)) this Page(31:3/2)
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(13:16/19)
[PageFaultHandler][do_handlePageFault] thread Thread(159:16/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[Info][PageTableEntry][do_lock] iorb IORB(Id(1460),Device(2),Page(0:16/7),Diskblock(3),FileWrite,Openfile(220:3/2),Thread(162:16/W0)) this Page(0:16/7)
[Info][PageTableEntry][do_lock] Get frame Frame(7)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 237020/250000[MMU][do_refer] address = 40520 offset = 584 page no = 39 Thread(157:16/RU)
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(49:3/5)
[PageFaultHandler][do_handlePageFault] thread Thread(156:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(19:14/26)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(26) Page(19:14/26)Thread(166:14/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(51:14/null) setframe Frame(26)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1461),Device(0),Page(51:14/26),Diskblock(115),FileRead,Openfile(156:14/0),Thread(166:14/W1)) this Page(51:14/26)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(166:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(166:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(39:18/24)
[PageFaultHandler][do_handlePageFault] thread Thread(169:18/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 4249 offset = 153 page no = 4 Thread(156:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(156:3/RU) 21 Page(4:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(19) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(4:3/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(13:16/19)
[PageFaultHandler][do_handlePageFault] page Page(4:3/null) setframe Frame(19)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1462),Device(0),Page(4:3/19),Diskblock(132),FileRead,Openfile(10:3/0),Thread(156:3/W1)) this Page(4:3/19)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(156:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(156:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(0:3/15)
[PageTableEntry][do_unlock] this Page(11:14/12)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(12) Page(11:14/12)Thread(165:16/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(42:16/null) setframe Frame(12)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1463),Device(0),Page(42:16/12),Diskblock(42),FileRead,Openfile(192:16/0),Thread(165:16/W1)) this Page(42:16/12)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(165:16/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(165:16/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(12)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 238009/250000[PageTableEntry][do_unlock] this Page(0:16/7)
[PageTableEntry][do_unlock] this Page(12:19/6)
[PageFaultHandler][do_handlePageFault] thread Thread(171:19/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(62:3/17)
[PageFaultHandler][do_handlePageFault] thread Thread(173:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 13741 offset = 429 page no = 13 Thread(159:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(159:16/RU) 21 Page(13:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(3) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(13:16/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(38:3/3)
[PageFaultHandler][do_handlePageFault] Frame(3) is dirty, do swap-out, Thread(159:16/W0)
[PageFaultHandler][SwapOut] page Page(38:3/3) frame Frame(3)file Openfile(192:16/0)
[PageFaultHandler][SwapOut] block no 38
[Info][PageTableEntry][do_lock] iorb IORB(Id(1464),Device(0),Page(38:3/3),Diskblock(38),FileWrite,Openfile(192:16/0),Thread(159:16/W1)) this Page(38:3/3)
[Info][PageTableEntry][do_lock] Get frame Frame(3)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(51:16/20)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(20) Page(51:16/20)Thread(172:3/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(22:3/null) setframe Frame(20)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1465),Device(0),Page(22:3/20),Diskblock(150),FileRead,Openfile(10:3/0),Thread(172:3/W1)) this Page(22:3/20)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(172:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(172:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(20)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 42895 offset = 911 page no = 41 Thread(162:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(162:16/RU) 21 Page(41:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(9) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(41:16/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(3:14/9)
[PageFaultHandler][do_handlePageFault] page Page(41:16/null) setframe Frame(9)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1466),Device(0),Page(41:16/9),Diskblock(41),FileRead,Openfile(192:16/0),Thread(162:16/W1)) this Page(41:16/9)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(162:16/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(162:16/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 26774 offset = 150 page no = 26 Thread(169:18/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(169:18/RU) 22 Page(26:18/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(29) Reserved by Task(18/L)
[PageFaultHandler][do_handlePageFault] page Page(26:18/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(42:3/29)
[PageFaultHandler][do_handlePageFault] Frame(29) is dirty, do swap-out, Thread(169:18/W0)
[PageFaultHandler][SwapOut] page Page(42:3/29) frame Frame(29)file Openfile(206:18/0)
[PageFaultHandler][SwapOut] block no 42
[Info][PageTableEntry][do_lock] iorb IORB(Id(1467),Device(0),Page(42:3/29),Diskblock(298),FileWrite,Openfile(206:18/0),Thread(169:18/W1)) this Page(42:3/29)
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(31:3/2)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(2) Page(31:3/2)Thread(163:17/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(27:17/null) setframe Frame(2)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1468),Device(0),Page(27:17/2),Diskblock(219),FileRead,Openfile(200:17/0),Thread(163:17/W1)) this Page(27:17/2)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(163:17/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(163:17/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(51:14/26)
[PageFaultHandler][do_handlePageFault] thread Thread(166:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 19430 offset = 998 page no = 18 Thread(157:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(157:16/RU) 21 Page(18:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(26) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(18:16/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(51:14/26)
[PageFaultHandler][do_handlePageFault] Frame(26) is dirty, do swap-out, Thread(157:16/W0)
[PageFaultHandler][SwapOut] page Page(51:14/26) frame Frame(26)file Openfile(192:16/0)
[PageFaultHandler][SwapOut] block no 51
[Info][PageTableEntry][do_lock] iorb IORB(Id(1469),Device(0),Page(51:14/26),Diskblock(51),FileWrite,Openfile(192:16/0),Thread(157:16/W1)) this Page(51:14/26)
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(4:3/19)
[PageFaultHandler][do_handlePageFault] thread Thread(156:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(42:16/12)
[PageFaultHandler][do_handlePageFault] thread Thread(165:16/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(38:3/3)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(3) Page(38:3/3)Thread(159:16/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(13:16/null) setframe Frame(3)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1470),Device(0),Page(13:16/3),Diskblock(13),FileRead,Openfile(192:16/0),Thread(159:16/W1)) this Page(13:16/3)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(159:16/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(159:16/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(3)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 239056/250000[PageTableEntry][do_unlock] this Page(22:3/20)
[PageFaultHandler][do_handlePageFault] thread Thread(172:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(41:16/9)
[PageFaultHandler][do_handlePageFault] thread Thread(162:16/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 26073 offset = 473 page no = 25 Thread(165:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(165:16/RU) 21 Page(25:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(20) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(25:16/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(22:3/20)
[PageFaultHandler][do_handlePageFault] page Page(25:16/null) setframe Frame(20)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1471),Device(0),Page(25:16/20),Diskblock(25),FileRead,Openfile(192:16/0),Thread(165:16/W1)) this Page(25:16/20)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(165:16/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(165:16/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(20)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(1472),Device(2),Page(0:3/15),Diskblock(3),FileRead,Openfile(220:3/2),Thread(164:3/W0)) this Page(0:3/15)
[Info][PageTableEntry][do_lock] Get frame Frame(15)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 47174 offset = 70 page no = 46 Thread(126:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(126:14/RU) 21 Page(46:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(13) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(46:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(27:14/13)
[PageFaultHandler][do_handlePageFault] Frame(13) is dirty, do swap-out, Thread(126:14/W0)
[PageFaultHandler][SwapOut] page Page(27:14/13) frame Frame(13)file Openfile(156:14/0)
[PageFaultHandler][SwapOut] block no 27
[Info][PageTableEntry][do_lock] iorb IORB(Id(1473),Device(0),Page(27:14/13),Diskblock(91),FileWrite,Openfile(156:14/0),Thread(126:14/W1)) this Page(27:14/13)
[Info][PageTableEntry][do_lock] Get frame Frame(13)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(42:3/29)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(29) Page(42:3/29)Thread(169:18/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(26:18/null) setframe Frame(29)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1474),Device(0),Page(26:18/29),Diskblock(282),FileRead,Openfile(206:18/0),Thread(169:18/W1)) this Page(26:18/29)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(169:18/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(169:18/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(27:17/2)
[PageFaultHandler][do_handlePageFault] thread Thread(163:17/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(51:14/26)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(26) Page(51:14/26)Thread(157:16/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(18:16/null) setframe Frame(26)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1475),Device(0),Page(18:16/26),Diskblock(18),FileRead,Openfile(192:16/0),Thread(157:16/W1)) this Page(18:16/26)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(157:16/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(157:16/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(0:3/15)
[PageTableEntry][do_unlock] this Page(13:16/3)
[PageFaultHandler][do_handlePageFault] thread Thread(159:16/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 50580 offset = 404 page no = 49 Thread(156:3/RU)
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(25:16/20)
[PageFaultHandler][do_handlePageFault] thread Thread(165:16/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(27:14/13)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(13) Page(27:14/13)Thread(126:14/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(46:14/null) setframe Frame(13)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1476),Device(0),Page(46:14/13),Diskblock(110),FileRead,Openfile(156:14/0),Thread(126:14/W1)) this Page(46:14/13)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(126:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(126:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(13)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 58975 offset = 607 page no = 57 Thread(171:19/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(171:19/RU) 21 Page(57:19/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(2) Reserved by Task(19/L)
[PageFaultHandler][do_handlePageFault] page Page(57:19/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(27:17/2)
[PageFaultHandler][do_handlePageFault] Frame(2) is dirty, do swap-out, Thread(171:19/W0)
[PageFaultHandler][SwapOut] page Page(27:17/2) frame Frame(2)file Openfile(210:19/0)
[PageFaultHandler][SwapOut] block no 27
[Info][PageTableEntry][do_lock] iorb IORB(Id(1477),Device(0),Page(27:17/2),Diskblock(347),FileWrite,Openfile(210:19/0),Thread(171:19/W1)) this Page(27:17/2)
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageCleanDaemon][unleash] osp.Memory.PageCleanDaemon@e14d43 execute time 240000
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(24)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(4)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(17)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(8)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(18)
[PageCleanDaemon][SwapOutDirtyPage] found dirty frame Frame(23)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(24)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(24) Page(39:18/24) isDirty true
[PageFaultHandler][SwapOut] file Openfile(206:18/0)
[PageFaultHandler][SwapOut] block no 39
[Info][PageTableEntry][do_lock] iorb IORB(Id(1478),Device(0),Page(39:18/24),Diskblock(295),FileWrite,Openfile(206:18/0),Thread(175:0/W1)) this Page(39:18/24)
[Info][PageTableEntry][do_lock] Get frame Frame(24)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 240026/250000[MMU][do_refer] address = 52686 offset = 462 page no = 51 Thread(163:17/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(163:17/RU) 21 Page(51:17/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(3) Reserved by Task(17/L)
[PageFaultHandler][do_handlePageFault] page Page(51:17/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(13:16/3)
[PageFaultHandler][do_handlePageFault] page Page(51:17/null) setframe Frame(3)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1479),Device(0),Page(51:17/3),Diskblock(243),FileRead,Openfile(200:17/0),Thread(163:17/W1)) this Page(51:17/3)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(163:17/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(163:17/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(3)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 32820 offset = 52 page no = 32 Thread(166:14/RU)
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(26:18/29)
[PageFaultHandler][do_handlePageFault] thread Thread(169:18/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 44686 offset = 654 page no = 43 Thread(14:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(14:3/RU) 21 Page(43:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(29) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(43:3/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(26:18/29)
[PageFaultHandler][do_handlePageFault] Frame(29) is dirty, do swap-out, Thread(14:3/W0)
[PageFaultHandler][SwapOut] page Page(26:18/29) frame Frame(29)file Openfile(10:3/0)
[PageFaultHandler][SwapOut] block no 26
[Info][PageTableEntry][do_lock] iorb IORB(Id(1480),Device(0),Page(26:18/29),Diskblock(154),FileWrite,Openfile(10:3/0),Thread(14:3/W1)) this Page(26:18/29)
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(18:16/26)
[PageFaultHandler][do_handlePageFault] thread Thread(157:16/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(46:14/13)
[PageFaultHandler][do_handlePageFault] thread Thread(126:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
Simulation progress: 241040/250000[PageTableEntry][do_unlock] this Page(27:17/2)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(2) Page(27:17/2)Thread(171:19/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(57:19/null) setframe Frame(2)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1481),Device(0),Page(57:19/2),Diskblock(377),FileRead,Openfile(210:19/0),Thread(171:19/W1)) this Page(57:19/2)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(171:19/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(171:19/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 17272 offset = 888 page no = 16 Thread(172:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(172:3/RU) 21 Page(16:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(26) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(16:3/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(18:16/26)
[PageFaultHandler][do_handlePageFault] page Page(16:3/null) setframe Frame(26)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1482),Device(0),Page(16:3/26),Diskblock(144),FileRead,Openfile(10:3/0),Thread(172:3/W1)) this Page(16:3/26)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(172:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(172:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(39:18/24)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(24) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(4)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(4) Page(57:3/4) isDirty true
[PageFaultHandler][SwapOut] file Openfile(10:3/0)
[PageFaultHandler][SwapOut] block no 57
[Info][PageTableEntry][do_lock] iorb IORB(Id(1483),Device(0),Page(57:3/4),Diskblock(185),FileWrite,Openfile(10:3/0),Thread(175:0/W1)) this Page(57:3/4)
[Info][PageTableEntry][do_lock] Get frame Frame(4)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 63335 offset = 871 page no = 61 Thread(157:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(157:16/RU) 21 Page(61:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(28) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(61:16/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(23:3/28)
[PageFaultHandler][do_handlePageFault] page Page(61:16/null) setframe Frame(28)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1484),Device(0),Page(61:16/28),Diskblock(61),FileRead,Openfile(192:16/0),Thread(157:16/W1)) this Page(61:16/28)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(157:16/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(157:16/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(51:17/3)
[PageFaultHandler][do_handlePageFault] thread Thread(163:17/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 15866 offset = 506 page no = 15 Thread(165:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(165:16/RU) 21 Page(15:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(24) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(15:16/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(39:18/24)
[PageFaultHandler][do_handlePageFault] page Page(15:16/null) setframe Frame(24)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1485),Device(0),Page(15:16/24),Diskblock(15),FileRead,Openfile(192:16/0),Thread(165:16/W1)) this Page(15:16/24)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(165:16/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(165:16/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(24)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(26:18/29)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(29) Page(26:18/29)Thread(14:3/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(43:3/null) setframe Frame(29)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1486),Device(0),Page(43:3/29),Diskblock(171),FileRead,Openfile(10:3/0),Thread(14:3/W1)) this Page(43:3/29)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(14:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(14:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 26691 offset = 67 page no = 26 Thread(156:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(156:3/RU) 21 Page(26:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(6) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(26:3/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(12:19/6)
[PageFaultHandler][do_handlePageFault] page Page(26:3/null) setframe Frame(6)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1487),Device(0),Page(26:3/6),Diskblock(154),FileRead,Openfile(10:3/0),Thread(156:3/W1)) this Page(26:3/6)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(156:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(156:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(6)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 39760 offset = 848 page no = 38 Thread(174:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(174:14/RU) 22 Page(38:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(27) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(38:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(7:3/27)
[PageFaultHandler][do_handlePageFault] page Page(38:14/null) setframe Frame(27)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1488),Device(0),Page(38:14/27),Diskblock(102),FileRead,Openfile(156:14/0),Thread(174:14/W1)) this Page(38:14/27)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(174:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(174:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(1489),Device(2),Page(32:14/1),Diskblock(11),FileRead,Openfile(222:3/2),Thread(166:14/W0)) this Page(32:14/1)
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 26604 offset = 1004 page no = 25 Thread(164:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(164:3/RU) 21 Page(25:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(22) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(25:3/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(50:14/22)
[PageFaultHandler][do_handlePageFault] Frame(22) is dirty, do swap-out, Thread(164:3/W0)
[PageFaultHandler][SwapOut] page Page(50:14/22) frame Frame(22)file Openfile(10:3/0)
[PageFaultHandler][SwapOut] block no 50
[Info][PageTableEntry][do_lock] iorb IORB(Id(1490),Device(0),Page(50:14/22),Diskblock(178),FileWrite,Openfile(10:3/0),Thread(164:3/W1)) this Page(50:14/22)
[Info][PageTableEntry][do_lock] Get frame Frame(22)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 15353 offset = 1017 page no = 14 Thread(163:17/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(163:17/RU) 22 Page(14:17/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(10) Reserved by Task(17/L)
[PageFaultHandler][do_handlePageFault] page Page(14:17/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(39:16/10)
[PageFaultHandler][do_handlePageFault] Frame(10) is dirty, do swap-out, Thread(163:17/W0)
[PageFaultHandler][SwapOut] page Page(39:16/10) frame Frame(10)file Openfile(200:17/0)
[PageFaultHandler][SwapOut] block no 39
[Info][PageTableEntry][do_lock] iorb IORB(Id(1491),Device(0),Page(39:16/10),Diskblock(231),FileWrite,Openfile(200:17/0),Thread(163:17/W1)) this Page(39:16/10)
[Info][PageTableEntry][do_lock] Get frame Frame(10)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(57:19/2)
[PageFaultHandler][do_handlePageFault] thread Thread(171:19/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[Info][PageTableEntry][do_lock] iorb IORB(Id(1492),Device(2),Page(46:14/13),Diskblock(11),FileRead,Openfile(222:3/2),Thread(126:14/W0)) this Page(46:14/13)
[Info][PageTableEntry][do_lock] Get frame Frame(13)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(16:3/26)
[PageFaultHandler][do_handlePageFault] thread Thread(172:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
Simulation progress: 242011/250000[PageTableEntry][do_unlock] this Page(57:3/4)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(4) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(17)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(17) Page(62:3/17) isDirty true
[PageFaultHandler][SwapOut] file Openfile(10:3/0)
[PageFaultHandler][SwapOut] block no 62
[Info][PageTableEntry][do_lock] iorb IORB(Id(1493),Device(0),Page(62:3/17),Diskblock(190),FileWrite,Openfile(10:3/0),Thread(175:0/W1)) this Page(62:3/17)
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(61:16/28)
[PageFaultHandler][do_handlePageFault] thread Thread(157:16/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(15:16/24)
[PageFaultHandler][do_handlePageFault] thread Thread(165:16/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(43:3/29)
[PageFaultHandler][do_handlePageFault] thread Thread(14:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(32:14/1)
[MMU][do_refer] address = 1441 offset = 417 page no = 1 Thread(172:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(172:3/RU) 22 Page(1:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(28) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(1:3/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(61:16/28)
[PageFaultHandler][do_handlePageFault] page Page(1:3/null) setframe Frame(28)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1494),Device(0),Page(1:3/28),Diskblock(129),FileRead,Openfile(10:3/0),Thread(172:3/W1)) this Page(1:3/28)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(172:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(172:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(26:3/6)
[PageFaultHandler][do_handlePageFault] thread Thread(156:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(38:14/27)
[PageFaultHandler][do_handlePageFault] thread Thread(174:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 47531 offset = 427 page no = 46 Thread(176:18/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(176:18/RU) 21 Page(46:18/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(24) Reserved by Task(18/L)
[PageFaultHandler][do_handlePageFault] page Page(46:18/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(15:16/24)
[PageFaultHandler][do_handlePageFault] page Page(46:18/null) setframe Frame(24)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1495),Device(0),Page(46:18/24),Diskblock(302),FileRead,Openfile(206:18/0),Thread(176:18/W1)) this Page(46:18/24)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(176:18/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(176:18/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(24)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 24570 offset = 1018 page no = 23 Thread(169:18/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(169:18/RU) 21 Page(23:18/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(27) Reserved by Task(18/L)
[PageFaultHandler][do_handlePageFault] page Page(23:18/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(38:14/27)
[PageFaultHandler][do_handlePageFault] Frame(27) is dirty, do swap-out, Thread(169:18/W0)
[PageFaultHandler][SwapOut] page Page(38:14/27) frame Frame(27)file Openfile(206:18/0)
[PageFaultHandler][SwapOut] block no 38
[Info][PageTableEntry][do_lock] iorb IORB(Id(1496),Device(0),Page(38:14/27),Diskblock(294),FileWrite,Openfile(206:18/0),Thread(169:18/W1)) this Page(38:14/27)
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(46:14/13)
[PageTableEntry][do_unlock] this Page(50:14/22)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(22) Page(50:14/22)Thread(164:3/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(25:3/null) setframe Frame(22)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1497),Device(0),Page(25:3/22),Diskblock(153),FileRead,Openfile(10:3/0),Thread(164:3/W1)) this Page(25:3/22)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(164:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(164:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(22)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 19702 offset = 246 page no = 19 Thread(14:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(14:3/RU) 22 Page(19:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(0) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(19:3/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(47:3/0)
[PageFaultHandler][do_handlePageFault] Frame(0) is dirty, do swap-out, Thread(14:3/W0)
[PageFaultHandler][SwapOut] page Page(47:3/0) frame Frame(0)file Openfile(10:3/0)
[PageFaultHandler][SwapOut] block no 47
[Info][PageTableEntry][do_lock] iorb IORB(Id(1498),Device(0),Page(47:3/0),Diskblock(175),FileWrite,Openfile(10:3/0),Thread(14:3/W1)) this Page(47:3/0)
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(1499),Device(2),Page(0:16/7),Diskblock(1),FileRead,Openfile(226:16/2),Thread(157:16/W0)) this Page(0:16/7)
[Info][PageTableEntry][do_lock] Get frame Frame(7)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(39:16/10)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(10) Page(39:16/10)Thread(163:17/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(14:17/null) setframe Frame(10)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1500),Device(0),Page(14:17/10),Diskblock(206),FileRead,Openfile(200:17/0),Thread(163:17/W1)) this Page(14:17/10)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(163:17/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(163:17/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(10)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
Simulation progress: 243006/250000[MMU][do_refer] address = 24081 offset = 529 page no = 23 Thread(156:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(156:3/RU) 22 Page(23:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(5) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(23:3/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(49:3/5)
[PageFaultHandler][do_handlePageFault] Frame(5) is dirty, do swap-out, Thread(156:3/W0)
[PageFaultHandler][SwapOut] page Page(49:3/5) frame Frame(5)file Openfile(10:3/0)
[PageFaultHandler][SwapOut] block no 49
[Info][PageTableEntry][do_lock] iorb IORB(Id(1501),Device(0),Page(49:3/5),Diskblock(177),FileWrite,Openfile(10:3/0),Thread(156:3/W1)) this Page(49:3/5)
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(62:3/17)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(17) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(8)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(8) Page(61:17/8) isDirty true
[PageFaultHandler][SwapOut] file Openfile(200:17/0)
[PageFaultHandler][SwapOut] block no 61
[Info][PageTableEntry][do_lock] iorb IORB(Id(1502),Device(0),Page(61:17/8),Diskblock(253),FileWrite,Openfile(200:17/0),Thread(175:0/W1)) this Page(61:17/8)
[Info][PageTableEntry][do_lock] Get frame Frame(8)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(1:3/28)
[PageFaultHandler][do_handlePageFault] thread Thread(172:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 12916 offset = 628 page no = 12 Thread(126:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(126:14/RU) 21 Page(12:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(17) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(12:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(62:3/17)
[PageFaultHandler][do_handlePageFault] page Page(12:14/null) setframe Frame(17)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1503),Device(0),Page(12:14/17),Diskblock(76),FileRead,Openfile(156:14/0),Thread(126:14/W1)) this Page(12:14/17)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(126:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(126:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(17)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 60371 offset = 979 page no = 58 Thread(166:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(166:14/RU) 21 Page(58:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(25) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(58:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(31:16/25)
[PageFaultHandler][do_handlePageFault] page Page(58:14/null) setframe Frame(25)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1504),Device(0),Page(58:14/25),Diskblock(122),FileRead,Openfile(156:14/0),Thread(166:14/W1)) this Page(58:14/25)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(166:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(166:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(25)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 28173 offset = 525 page no = 27 Thread(159:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(159:16/RU) 21 Page(27:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(21) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(27:16/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(48:16/21)
[PageFaultHandler][do_handlePageFault] Frame(21) is dirty, do swap-out, Thread(159:16/W0)
[PageFaultHandler][SwapOut] page Page(48:16/21) frame Frame(21)file Openfile(192:16/0)
[PageFaultHandler][SwapOut] block no 48
[Info][PageTableEntry][do_lock] iorb IORB(Id(1505),Device(0),Page(48:16/21),Diskblock(48),FileWrite,Openfile(192:16/0),Thread(159:16/W1)) this Page(48:16/21)
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(46:18/24)
[PageFaultHandler][do_handlePageFault] thread Thread(176:18/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 48620 offset = 492 page no = 47 Thread(172:3/RU)
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 24508 offset = 956 page no = 23 Thread(158:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(158:16/RU) 22 Page(23:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(24) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(23:16/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(46:18/24)
[PageFaultHandler][do_handlePageFault] page Page(23:16/null) setframe Frame(24)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1506),Device(0),Page(23:16/24),Diskblock(23),FileRead,Openfile(192:16/0),Thread(158:16/W1)) this Page(23:16/24)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(158:16/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(158:16/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(24)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(38:14/27)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(27) Page(38:14/27)Thread(169:18/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(23:18/null) setframe Frame(27)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1507),Device(0),Page(23:18/27),Diskblock(279),FileRead,Openfile(206:18/0),Thread(169:18/W1)) this Page(23:18/27)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(169:18/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(169:18/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(27)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(25:3/22)
[PageFaultHandler][do_handlePageFault] thread Thread(164:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 12945 offset = 657 page no = 12 Thread(176:18/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(176:18/RU) 22 Page(12:18/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(14) Reserved by Task(18/L)
[PageFaultHandler][do_handlePageFault] page Page(12:18/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(27:18/14)
[PageFaultHandler][do_handlePageFault] page Page(12:18/null) setframe Frame(14)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1508),Device(0),Page(12:18/14),Diskblock(268),FileRead,Openfile(206:18/0),Thread(176:18/W1)) this Page(12:18/14)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(176:18/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(176:18/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(14)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 15723 offset = 363 page no = 15 Thread(165:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(165:16/RU) 22 Page(15:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(9) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(15:16/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(41:16/9)
[PageFaultHandler][do_handlePageFault] page Page(15:16/null) setframe Frame(9)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1509),Device(0),Page(15:16/9),Diskblock(15),FileRead,Openfile(192:16/0),Thread(165:16/W1)) this Page(15:16/9)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(165:16/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(165:16/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(47:3/0)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(0) Page(47:3/0)Thread(14:3/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(19:3/null) setframe Frame(0)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1510),Device(0),Page(19:3/0),Diskblock(147),FileRead,Openfile(10:3/0),Thread(14:3/W1)) this Page(19:3/0)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(14:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(14:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(0:16/7)
Simulation progress: 244014/250000[MMU][do_refer] address = 9486 offset = 270 page no = 9 Thread(164:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(164:3/RU) 21 Page(9:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(12) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(9:3/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(42:16/12)
[PageFaultHandler][do_handlePageFault] page Page(9:3/null) setframe Frame(12)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1511),Device(0),Page(9:3/12),Diskblock(137),FileRead,Openfile(10:3/0),Thread(164:3/W1)) this Page(9:3/12)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(164:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(164:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(12)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(14:17/10)
[PageFaultHandler][do_handlePageFault] thread Thread(163:17/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 1228 offset = 204 page no = 1 Thread(172:3/RU)
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(49:3/5)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(5) Page(49:3/5)Thread(156:3/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(23:3/null) setframe Frame(5)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1512),Device(0),Page(23:3/5),Diskblock(151),FileRead,Openfile(10:3/0),Thread(156:3/W1)) this Page(23:3/5)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(156:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(156:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(5)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 35261 offset = 445 page no = 34 Thread(157:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(157:16/RU) 22 Page(34:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(10) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(34:16/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(14:17/10)
[PageFaultHandler][do_handlePageFault] Frame(10) is dirty, do swap-out, Thread(157:16/W0)
[PageFaultHandler][SwapOut] page Page(14:17/10) frame Frame(10)file Openfile(192:16/0)
[PageFaultHandler][SwapOut] block no 14
[Info][PageTableEntry][do_lock] iorb IORB(Id(1513),Device(0),Page(14:17/10),Diskblock(14),FileWrite,Openfile(192:16/0),Thread(157:16/W1)) this Page(14:17/10)
[Info][PageTableEntry][do_lock] Get frame Frame(10)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(61:17/8)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(8) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(18)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(18) Page(57:16/18) isDirty true
[PageFaultHandler][SwapOut] file Openfile(192:16/0)
[PageFaultHandler][SwapOut] block no 57
[Info][PageTableEntry][do_lock] iorb IORB(Id(1514),Device(0),Page(57:16/18),Diskblock(57),FileWrite,Openfile(192:16/0),Thread(175:0/W1)) this Page(57:16/18)
[Info][PageTableEntry][do_lock] Get frame Frame(18)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(12:14/17)
[PageFaultHandler][do_handlePageFault] thread Thread(126:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 61278 offset = 862 page no = 59 Thread(172:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(172:3/RU) 22 Page(59:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(11) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(59:3/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(28:16/11)
[PageFaultHandler][do_handlePageFault] page Page(59:3/null) setframe Frame(11)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1515),Device(0),Page(59:3/11),Diskblock(187),FileRead,Openfile(10:3/0),Thread(172:3/W1)) this Page(59:3/11)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(172:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(172:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(11)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 7620 offset = 452 page no = 7 Thread(178:19/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(178:19/RU) 22 Page(7:19/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(13) Reserved by Task(19/L)
[PageFaultHandler][do_handlePageFault] page Page(7:19/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(46:14/13)
[PageFaultHandler][do_handlePageFault] Frame(13) is dirty, do swap-out, Thread(178:19/W0)
[PageFaultHandler][SwapOut] page Page(46:14/13) frame Frame(13)file Openfile(210:19/0)
[PageFaultHandler][SwapOut] block no 46
[Info][PageTableEntry][do_lock] iorb IORB(Id(1516),Device(0),Page(46:14/13),Diskblock(366),FileWrite,Openfile(210:19/0),Thread(178:19/W1)) this Page(46:14/13)
[Info][PageTableEntry][do_lock] Get frame Frame(13)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(58:14/25)
[PageFaultHandler][do_handlePageFault] thread Thread(166:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(48:16/21)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(21) Page(48:16/21)Thread(159:16/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(27:16/null) setframe Frame(21)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1517),Device(0),Page(27:16/21),Diskblock(27),FileRead,Openfile(192:16/0),Thread(159:16/W1)) this Page(27:16/21)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(159:16/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(159:16/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(21)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(1518),Device(2),Page(57:19/2),Diskblock(11),FileRead,Openfile(228:19/2),Thread(171:19/W0)) this Page(57:19/2)
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(23:16/24)
[PageFaultHandler][do_handlePageFault] thread Thread(158:16/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
Simulation progress: 245059/250000[MMU][do_refer] address = 5659 offset = 539 page no = 5 Thread(158:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(158:16/RU) 21 Page(5:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(25) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(5:16/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(58:14/25)
[PageFaultHandler][do_handlePageFault] page Page(5:16/null) setframe Frame(25)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1519),Device(0),Page(5:16/25),Diskblock(5),FileRead,Openfile(192:16/0),Thread(158:16/W1)) this Page(5:16/25)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(158:16/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(158:16/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(25)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 7829 offset = 661 page no = 7 Thread(166:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(166:14/RU) 21 Page(7:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(1) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(7:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(32:14/1)
[PageFaultHandler][do_handlePageFault] Frame(1) is dirty, do swap-out, Thread(166:14/W0)
[PageFaultHandler][SwapOut] page Page(32:14/1) frame Frame(1)file Openfile(156:14/0)
[PageFaultHandler][SwapOut] block no 32
[Info][PageTableEntry][do_lock] iorb IORB(Id(1520),Device(0),Page(32:14/1),Diskblock(96),FileWrite,Openfile(156:14/0),Thread(166:14/W1)) this Page(32:14/1)
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(23:18/27)
[PageFaultHandler][do_handlePageFault] thread Thread(169:18/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 3237 offset = 165 page no = 3 Thread(169:18/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(169:18/RU) 22 Page(3:18/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(20) Reserved by Task(18/L)
[PageFaultHandler][do_handlePageFault] page Page(3:18/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(25:16/20)
[PageFaultHandler][do_handlePageFault] page Page(3:18/null) setframe Frame(20)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1521),Device(0),Page(3:18/20),Diskblock(259),FileRead,Openfile(206:18/0),Thread(169:18/W1)) this Page(3:18/20)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(169:18/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(169:18/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(20)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(12:18/14)
[PageFaultHandler][do_handlePageFault] thread Thread(176:18/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 46493 offset = 413 page no = 45 Thread(126:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(126:14/RU) 21 Page(45:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(16) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(45:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(59:17/16)
[PageFaultHandler][do_handlePageFault] page Page(45:14/null) setframe Frame(16)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1522),Device(0),Page(45:14/16),Diskblock(109),FileRead,Openfile(156:14/0),Thread(126:14/W1)) this Page(45:14/16)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(126:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(126:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 55858 offset = 562 page no = 54 Thread(176:18/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(176:18/RU) 22 Page(54:18/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(3) Reserved by Task(18/L)
[PageFaultHandler][do_handlePageFault] page Page(54:18/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(51:17/3)
[PageFaultHandler][do_handlePageFault] page Page(54:18/null) setframe Frame(3)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1523),Device(0),Page(54:18/3),Diskblock(310),FileRead,Openfile(206:18/0),Thread(176:18/W1)) this Page(54:18/3)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(176:18/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(176:18/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(3)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(15:16/9)
[PageFaultHandler][do_handlePageFault] thread Thread(165:16/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(19:3/0)
[PageFaultHandler][do_handlePageFault] thread Thread(14:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(57:19/2)
[PageTableEntry][do_unlock] this Page(9:3/12)
[PageFaultHandler][do_handlePageFault] thread Thread(164:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 38351 offset = 463 page no = 37 Thread(14:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(14:3/RU) 21 Page(37:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(0) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(37:3/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(19:3/0)
[PageFaultHandler][do_handlePageFault] Frame(0) is dirty, do swap-out, Thread(14:3/W0)
[PageFaultHandler][SwapOut] page Page(19:3/0) frame Frame(0)file Openfile(10:3/0)
[PageFaultHandler][SwapOut] block no 19
[Info][PageTableEntry][do_lock] iorb IORB(Id(1524),Device(0),Page(19:3/0),Diskblock(147),FileWrite,Openfile(10:3/0),Thread(14:3/W1)) this Page(19:3/0)
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(23:3/5)
[PageFaultHandler][do_handlePageFault] thread Thread(156:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
Simulation progress: 246050/250000[PageTableEntry][do_unlock] this Page(14:17/10)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(10) Page(14:17/10)Thread(157:16/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(34:16/null) setframe Frame(10)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1525),Device(0),Page(34:16/10),Diskblock(34),FileRead,Openfile(192:16/0),Thread(157:16/W1)) this Page(34:16/10)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(157:16/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(157:16/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(10)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 4209 offset = 113 page no = 4 Thread(179:17/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(179:17/RU) 21 Page(4:17/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(9) Reserved by Task(17/L)
[PageFaultHandler][do_handlePageFault] page Page(4:17/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(15:16/9)
[PageFaultHandler][do_handlePageFault] Frame(9) is dirty, do swap-out, Thread(179:17/W0)
[PageFaultHandler][SwapOut] page Page(15:16/9) frame Frame(9)file Openfile(200:17/0)
[PageFaultHandler][SwapOut] block no 15
[Info][PageTableEntry][do_lock] iorb IORB(Id(1526),Device(0),Page(15:16/9),Diskblock(207),FileWrite,Openfile(200:17/0),Thread(179:17/W1)) this Page(15:16/9)
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(57:16/18)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(18) finish
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(23)
[PageCleanDaemon][SwapOutDirtyPage] dirty_frame Frame(23) Page(17:16/23) isDirty true
[PageFaultHandler][SwapOut] file Openfile(192:16/0)
[PageFaultHandler][SwapOut] block no 17
[Info][PageTableEntry][do_lock] iorb IORB(Id(1527),Device(0),Page(17:16/23),Diskblock(17),FileWrite,Openfile(192:16/0),Thread(175:0/W1)) this Page(17:16/23)
[Info][PageTableEntry][do_lock] Get frame Frame(23)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(59:3/11)
[PageFaultHandler][do_handlePageFault] thread Thread(172:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[Info][PageTableEntry][do_lock] iorb IORB(Id(1528),Device(2),Page(57:19/2),Diskblock(15),FileWrite,Openfile(230:19/2),Thread(171:19/W0)) this Page(57:19/2)
[Info][PageTableEntry][do_lock] Get frame Frame(2)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 43194 offset = 186 page no = 42 Thread(180:17/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(180:17/RU) 22 Page(42:17/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(11) Reserved by Task(17/L)
[PageFaultHandler][do_handlePageFault] page Page(42:17/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(59:3/11)
[PageFaultHandler][do_handlePageFault] Frame(11) is dirty, do swap-out, Thread(180:17/W0)
[PageFaultHandler][SwapOut] page Page(59:3/11) frame Frame(11)file Openfile(200:17/0)
[PageFaultHandler][SwapOut] block no 59
[Info][PageTableEntry][do_lock] iorb IORB(Id(1529),Device(0),Page(59:3/11),Diskblock(251),FileWrite,Openfile(200:17/0),Thread(180:17/W1)) this Page(59:3/11)
[Info][PageTableEntry][do_lock] Get frame Frame(11)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(46:14/13)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(13) Page(46:14/13)Thread(178:19/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(7:19/null) setframe Frame(13)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1530),Device(0),Page(7:19/13),Diskblock(327),FileRead,Openfile(210:19/0),Thread(178:19/W1)) this Page(7:19/13)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(178:19/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(178:19/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(13)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(27:16/21)
[PageFaultHandler][do_handlePageFault] thread Thread(159:16/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
Simulation progress: 247010/250000[PageTableEntry][do_unlock] this Page(5:16/25)
[PageFaultHandler][do_handlePageFault] thread Thread(158:16/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(57:19/2)
[MMU][do_refer] address = 28516 offset = 868 page no = 27 Thread(156:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(156:3/RU) 22 Page(27:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(25) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(27:3/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(5:16/25)
[PageFaultHandler][do_handlePageFault] page Page(27:3/null) setframe Frame(25)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1531),Device(0),Page(27:3/25),Diskblock(155),FileRead,Openfile(10:3/0),Thread(156:3/W1)) this Page(27:3/25)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(156:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(156:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(25)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 35081 offset = 265 page no = 34 Thread(172:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(172:3/RU) 22 Page(34:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(29) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(34:3/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(43:3/29)
[PageFaultHandler][do_handlePageFault] page Page(34:3/null) setframe Frame(29)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1532),Device(0),Page(34:3/29),Diskblock(162),FileRead,Openfile(10:3/0),Thread(172:3/W1)) this Page(34:3/29)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(172:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(172:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 34453 offset = 661 page no = 33 Thread(165:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(165:16/RU) 21 Page(33:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(26) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(33:16/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(16:3/26)
[PageFaultHandler][do_handlePageFault] page Page(33:16/null) setframe Frame(26)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1533),Device(0),Page(33:16/26),Diskblock(33),FileRead,Openfile(192:16/0),Thread(165:16/W1)) this Page(33:16/26)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(165:16/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(165:16/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(26)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(32:14/1)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(1) Page(32:14/1)Thread(166:14/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(7:14/null) setframe Frame(1)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1534),Device(0),Page(7:14/1),Diskblock(71),FileRead,Openfile(156:14/0),Thread(166:14/W1)) this Page(7:14/1)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(166:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(166:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(1)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(3:18/20)
[PageFaultHandler][do_handlePageFault] thread Thread(169:18/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(45:14/16)
[PageFaultHandler][do_handlePageFault] thread Thread(126:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 32174 offset = 430 page no = 31 Thread(158:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(158:16/RU) 21 Page(31:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(16) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(31:16/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(45:14/16)
[PageFaultHandler][do_handlePageFault] page Page(31:16/null) setframe Frame(16)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1535),Device(0),Page(31:16/16),Diskblock(31),FileRead,Openfile(192:16/0),Thread(158:16/W1)) this Page(31:16/16)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(158:16/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(158:16/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 18881 offset = 449 page no = 18 Thread(163:17/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(163:17/RU) 22 Page(18:17/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(6) Reserved by Task(17/L)
[PageFaultHandler][do_handlePageFault] page Page(18:17/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(26:3/6)
[PageFaultHandler][do_handlePageFault] page Page(18:17/null) setframe Frame(6)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1536),Device(0),Page(18:17/6),Diskblock(210),FileRead,Openfile(200:17/0),Thread(163:17/W1)) this Page(18:17/6)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(163:17/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(163:17/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(6)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(54:18/3)
[PageFaultHandler][do_handlePageFault] thread Thread(176:18/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(19:3/0)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(0) Page(19:3/0)Thread(14:3/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(37:3/null) setframe Frame(0)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1537),Device(0),Page(37:3/0),Diskblock(165),FileRead,Openfile(10:3/0),Thread(14:3/W1)) this Page(37:3/0)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(14:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(14:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(0)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(34:16/10)
[PageFaultHandler][do_handlePageFault] thread Thread(157:16/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
Simulation progress: 248041/250000[MMU][do_refer] address = 44822 offset = 790 page no = 43 Thread(126:14/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(126:14/RU) 22 Page(43:14/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(10) Reserved by Task(14/L)
[PageFaultHandler][do_handlePageFault] page Page(43:14/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(34:16/10)
[PageFaultHandler][do_handlePageFault] Frame(10) is dirty, do swap-out, Thread(126:14/W0)
[PageFaultHandler][SwapOut] page Page(34:16/10) frame Frame(10)file Openfile(156:14/0)
[PageFaultHandler][SwapOut] block no 34
[Info][PageTableEntry][do_lock] iorb IORB(Id(1538),Device(0),Page(34:16/10),Diskblock(98),FileWrite,Openfile(156:14/0),Thread(126:14/W1)) this Page(34:16/10)
[Info][PageTableEntry][do_lock] Get frame Frame(10)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(15:16/9)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(9) Page(15:16/9)Thread(179:17/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(4:17/null) setframe Frame(9)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1539),Device(0),Page(4:17/9),Diskblock(196),FileRead,Openfile(200:17/0),Thread(179:17/W1)) this Page(4:17/9)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(179:17/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(179:17/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(9)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 31642 offset = 922 page no = 30 Thread(164:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(164:3/RU) 22 Page(30:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(22) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(30:3/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(25:3/22)
[PageFaultHandler][do_handlePageFault] page Page(30:3/null) setframe Frame(22)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1540),Device(0),Page(30:3/22),Diskblock(158),FileRead,Openfile(10:3/0),Thread(164:3/W1)) this Page(30:3/22)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(164:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(164:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(22)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 14123 offset = 811 page no = 13 Thread(157:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(157:16/RU) 21 Page(13:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(28) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(13:16/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(1:3/28)
[PageFaultHandler][do_handlePageFault] Frame(28) is dirty, do swap-out, Thread(157:16/W0)
[PageFaultHandler][SwapOut] page Page(1:3/28) frame Frame(28)file Openfile(192:16/0)
[PageFaultHandler][SwapOut] block no 1
[Info][PageTableEntry][do_lock] iorb IORB(Id(1541),Device(0),Page(1:3/28),Diskblock(1),FileWrite,Openfile(192:16/0),Thread(157:16/W1)) this Page(1:3/28)
[Info][PageTableEntry][do_lock] Get frame Frame(28)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(1542),Device(2),Page(3:18/20),Diskblock(15),FileRead,Openfile(230:19/2),Thread(169:18/W0)) this Page(3:18/20)
[Info][PageTableEntry][do_lock] Get frame Frame(20)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(17:16/23)
[PageCleanDaemon][SwapOutDirtyPage] Swap-out Frame(23) finish
[MMU][do_refer] address = 45439 offset = 383 page no = 44 Thread(176:18/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(176:18/RU) 22 Page(44:18/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(23) Reserved by Task(18/L)
[PageFaultHandler][do_handlePageFault] page Page(44:18/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(17:16/23)
[PageFaultHandler][do_handlePageFault] page Page(44:18/null) setframe Frame(23)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1543),Device(0),Page(44:18/23),Diskblock(300),FileRead,Openfile(206:18/0),Thread(176:18/W1)) this Page(44:18/23)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(176:18/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(176:18/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(23)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(3:18/20)
[PageTableEntry][do_unlock] this Page(59:3/11)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(11) Page(59:3/11)Thread(180:17/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(42:17/null) setframe Frame(11)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1544),Device(0),Page(42:17/11),Diskblock(234),FileRead,Openfile(200:17/0),Thread(180:17/W1)) this Page(42:17/11)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(180:17/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(180:17/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(11)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(1545),Device(2),Page(0:16/7),Diskblock(15),FileWrite,Openfile(230:19/2),Thread(159:16/W0)) this Page(0:16/7)
[Info][PageTableEntry][do_lock] Get frame Frame(7)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(7:19/13)
[PageFaultHandler][do_handlePageFault] thread Thread(178:19/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
Simulation progress: 249020/250000[PageTableEntry][do_unlock] this Page(27:3/25)
[PageFaultHandler][do_handlePageFault] thread Thread(156:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[PageTableEntry][do_unlock] this Page(34:3/29)
[PageFaultHandler][do_handlePageFault] thread Thread(172:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 26883 offset = 259 page no = 26 Thread(156:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(156:3/RU) 22 Page(26:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(29) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(26:3/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(34:3/29)
[PageFaultHandler][do_handlePageFault] Frame(29) is dirty, do swap-out, Thread(156:3/W0)
[PageFaultHandler][SwapOut] page Page(34:3/29) frame Frame(29)file Openfile(10:3/0)
[PageFaultHandler][SwapOut] block no 34
[Info][PageTableEntry][do_lock] iorb IORB(Id(1546),Device(0),Page(34:3/29),Diskblock(162),FileWrite,Openfile(10:3/0),Thread(156:3/W1)) this Page(34:3/29)
[Info][PageTableEntry][do_lock] Get frame Frame(29)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(33:16/26)
[PageFaultHandler][do_handlePageFault] thread Thread(165:16/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(0:16/7)
[PageTableEntry][do_unlock] this Page(7:14/1)
[PageFaultHandler][do_handlePageFault] thread Thread(166:14/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(31:16/16)
[PageFaultHandler][do_handlePageFault] thread Thread(158:16/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[MMU][do_refer] address = 61633 offset = 193 page no = 60 Thread(172:3/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(172:3/RU) 22 Page(60:3/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(16) Reserved by Task(3/L)
[PageFaultHandler][do_handlePageFault] page Page(60:3/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(31:16/16)
[PageFaultHandler][do_handlePageFault] page Page(60:3/null) setframe Frame(16)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1547),Device(0),Page(60:3/16),Diskblock(188),FileRead,Openfile(10:3/0),Thread(172:3/W1)) this Page(60:3/16)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(172:3/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(172:3/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(16)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(1548),Device(2),Page(3:18/20),Diskblock(15),FileRead,Openfile(230:19/2),Thread(169:18/W0)) this Page(3:18/20)
[Info][PageTableEntry][do_lock] Get frame Frame(20)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(18:17/6)
[PageFaultHandler][do_handlePageFault] thread Thread(163:17/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory write.
[MMU][do_refer] address = 43782 offset = 774 page no = 42 Thread(165:16/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(165:16/RU) 22 Page(42:16/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(19) Reserved by Task(16/L)
[PageFaultHandler][do_handlePageFault] page Page(42:16/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(4:3/19)
[PageFaultHandler][do_handlePageFault] page Page(42:16/null) setframe Frame(19)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1549),Device(0),Page(42:16/19),Diskblock(42),FileRead,Openfile(192:16/0),Thread(165:16/W1)) this Page(42:16/19)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(165:16/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(165:16/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(19)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[MMU][do_refer] address = 51359 offset = 159 page no = 50 Thread(178:19/RU)
[MMU][do_refer] setInterruptType
[PageFaultHandler][do_handlePageFault] start do_handlePageFault( Thread(178:19/RU) 22 Page(50:19/null) )
[PageFaultHandler][do_handlePageFault] Found available frame 
[PageFaultHandler][do_handlePageFault] Suspend on system event 
[PageFaultHandler][do_handlePageFault] set Frame(15) Reserved by Task(19/L)
[PageFaultHandler][do_handlePageFault] page Page(50:19/null)
[PageFaultHandler][do_handlePageFault] victim_page Page(0:3/15)
[PageFaultHandler][do_handlePageFault] Frame(15) is dirty, do swap-out, Thread(178:19/W0)
[PageFaultHandler][SwapOut] page Page(0:3/15) frame Frame(15)file Openfile(210:19/0)
[PageFaultHandler][SwapOut] block no 0
[Info][PageTableEntry][do_lock] iorb IORB(Id(1550),Device(0),Page(0:3/15),Diskblock(320),FileWrite,Openfile(210:19/0),Thread(178:19/W1)) this Page(0:3/15)
[Info][PageTableEntry][do_lock] Get frame Frame(15)
[Info][PageTableEntry][do_lock] Valid = true
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(37:3/0)
[PageFaultHandler][do_handlePageFault] thread Thread(14:3/W0) status = 30
 Thread do_handlePageFault Success
[MMU][do_refer] return from interrupt
[MMU][do_refer] Do memory read.
[PageTableEntry][do_unlock] this Page(34:16/10)
[PageFaultHandler][do_handlePageFault] Swap-out Frame(10) Page(34:16/10)Thread(126:14/W0) finish
[PageFaultHandler][do_handlePageFault] page Page(43:14/null) setframe Frame(10)
[PageFaultHandler][do_handlePageFault] frame isReserved()  true
[Info][PageTableEntry][do_lock] iorb IORB(Id(1551),Device(0),Page(43:14/10),Diskblock(107),FileRead,Openfile(156:14/0),Thread(126:14/W1)) this Page(43:14/10)
[Info][PageTableEntry][do_lock] Invalid page. 
[Info][PageTableEntry][do_lock] validating_thread = Thread(126:14/W1)
[Info][PageTableEntry][do_lock] requrest_thread = Thread(126:14/W1)
[Info][PageTableEntry][do_lock] Request pagefault by same task, increase lock count
[Info][PageTableEntry][do_lock] Get frame Frame(10)
[Info][PageTableEntry][do_lock] Valid = false
[Info][PageTableEntry][do_lock] lockcount = 0
[PageTableEntry][do_unlock] this Page(3:18/20)
Simulation progress: 250000/250000


Simulation ended successfully!
Elapsed time: 7 seconds

Details are in the log file OSP.log

